[
["grain-yield-meta-analysis.html", "5 Grain yield meta-analysis 5.1 metafor analysis 5.2 netmeta analysis", " 5 Grain yield meta-analysis Let’s get started with the analysis by first finding the best model fit that answers our research question. Which spray management scenario provides the greatest yield protection from powdery mildew. To do this, in our model: Grain yield is our response variable (t / ha) Trial, which resolves combinations of categorical variables: year, location, row spacing, fungicide dose and cultivar; is set as a random intercept We will test spray management (our treatment) as a fixed effect and random interactive term to trial First, how well does the data compare across the trial years and trials? # class spray_management as a factor and reorder them for the plot slimmer_PM_dat$spray_management &lt;- factor(slimmer_PM_dat$spray_management, rev( c( &quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;, &quot;Late&quot;, &quot;Late_plus&quot; ) )) ggplot(slimmer_PM_dat, aes(x = as.factor(year), fill = spray_management)) + geom_bar(position = &quot;dodge2&quot;) + scale_fill_usq(name = &quot;Spray Management&quot;) + xlab(&quot;Year&quot;) kable( table(slimmer_PM_dat$spray_management, slimmer_PM_dat$year), align = rep(&#39;c&#39;, 8), caption = &quot;Which treatments and how many treatments are represented in each year&quot; ) %&gt;% kable_styling( &quot;striped&quot;, fixed_thead = TRUE, full_width = FALSE, position = &quot;center&quot; ) (#tab:table_of_nTreatments)Which treatments and how many treatments are represented in each year 2011 2012 2013 2015 2016 2017 2018 2019 Late_plus 0 0 0 1 7 0 12 0 Late 0 0 0 1 2 12 0 2 Recommended_plus 2 6 6 1 5 24 0 2 Recommended 4 6 3 1 4 12 0 2 Early 0 0 1 0 0 12 0 0 control 4 2 4 1 3 18 6 2 Treatments Late_plus and Early don’t have very good comparison to other treatments. Let’s visualise the spread of data in each treatments with box-plots. slimmer_PM_dat %&gt;% ggplot( aes( y = grain_yield.t.ha, x = spray_management, fill = spray_management, colour = spray_management ) ) + geom_boxplot(alpha = 0.25) + geom_jitter(width = 0.1, alpha = 0.5) + labs(x = &quot;Spray management variable&quot;, y = &quot;Grain yield (t/Ha)&quot;, title = &quot;Mean grain yield from each treatment \\n categorised by spray management scenario&quot;) + theme(plot.title = element_text(hjust = 0.5)) + geom_hline(yintercept = 0, linetype = 2) + scale_fill_usq() + scale_colour_usq() + coord_flip() + guides(fill = FALSE, color = FALSE) There seems like little difference between the treatments, with exception of Late_plus. Let’s do this plot again, but let’s look at the proportional mean difference between each treatment and the no spray control for each study, this should reduce variation in yield due between trials. slimmer_PM_dat %&gt;% filter(spray_management != &quot;control&quot;) %&gt;% ggplot( aes( y = prop_yield_gain, x = spray_management, fill = spray_management, colour = spray_management ) ) + geom_boxplot(alpha = 0.25) + geom_jitter(width = 0.1, alpha = 0.5) + labs(x = &quot;Spray management variable&quot;, y = &quot;Grain yield (t/Ha)&quot;, title = &quot;Mean grain yield from each treatment \\n categorised by spray management scenario&quot;) + theme(plot.title = element_text(hjust = 0.5)) + geom_hline(yintercept = 0, linetype = 2) + scale_fill_usq() + scale_colour_usq() + coord_flip() + guides(fill = FALSE, color = FALSE) Using the mean difference in the treatment effect seems to show the effect of each treatment better than just raw yield and reduces the variability in the treatments. We know there is a good deal of variability in our studies and between them. Mungbean produces variable yields between seasons so ordinarilly we should use a response that highlights the difference in the treatment effects that we are interested in and reduce the variability. However for an arm-based analysis we calculate the differences between control and treatment after the meta-analysis. 5.0.1 Formating the response variable Let’s inspect the response variance grain_yield.t.ha to see if it is normally distributed. In many cases a log transformation of the response variable improves the fit, due to the prevalence of log distributed data in nature. hist_usq(slimmer_PM_dat$grain_yield.t.ha, main = &quot;Grain yield (t / ha)&quot;) hist_usq(log(slimmer_PM_dat$grain_yield.t.ha), main = &quot;log(Grain yield (t / ha))&quot;) hist_usq(sqrt(slimmer_PM_dat$grain_yield.t.ha), main = &quot;sqrt(Grain yield (t / ha))&quot;) hist_usq(slimmer_PM_dat$yield_gain, main = &quot;Mean difference to control (t / ha)&quot;) The distribution of data does not seem to be improved by transformation of the data. We will retain the continuous variable grain_yield.t.ha as the response. Mean differences won’t be used as we are following the methodology of a ARM-based model, where mean differences are calculated following the meta-analysis. 5.0.2 Formatting Variance First let’s remove any entries missing variance. any(is.na(slimmer_PM_dat$yield_error)) ## [1] TRUE slimmer_PM_dat &lt;- slimmer_PM_dat[!is.na(slimmer_PM_dat$yield_error), ] slimmer_PM_dat$vi &lt;- slimmer_PM_dat$yield_error 5.0.2.1 Calculate sample variance from mean square errors Currently our data frame has the sample variance calculated earlier, however we can approximate it using the mean squared error. Let’s show the rational for our calculation and then add a secondary variance column (vi2). \\(MSE = Var + bias\\) However if our MSE was calculated from an unbiased sample we can assume \\(bias = 0\\) and therefore: \\(MSE = Var\\) To calculate the sample variance (for each treatment in the trial) from the mean square error (Trial variance) all we need to do is divide by the number of samples in each treatment. We can show this because: \\(MSE = \\frac{\\sum_{y_1}^{y_n}(y_i - \\overline{y})^2}{n - 1}\\) Where the sum of squares for the fungicide treatment estimator (\\(y\\)) is divided by the number of fungicide treatments (\\(n\\)). The sample variance is a similar formula except we use \\(x\\) instead of \\(y\\). \\(S_{Var} = \\frac{\\sum_{x_1}^{x_n}(x_i - \\overline{x})^2}{n - 1}\\) \\(x\\) being each observation within the experiment and \\(n\\) being the number of samples in the whole trial. Therefore: \\(S_{Var}\\approx\\frac{1}{n_{x}}\\frac{\\sum_{y_1}^{y_n}(y_i - \\overline{y})^2}{n_y - 1}\\) Where \\(n_x\\) is the number of samples within each treatment. #calculation when using log of response # slimmer_PM_dat$vi &lt;- # slimmer_PM_dat$Y_Msquare / (slimmer_PM_dat$n * slimmer_PM_dat$grain_yield.t.ha ^ # 2) slimmer_PM_dat$vi2 &lt;- slimmer_PM_dat$Y_Msquare / slimmer_PM_dat$n Now Let’s simplify our data by removing the control data, converting disease pressure (D_pres) to a factor and selecting only the columns of data necessary for analysis. We will also include the mean difference or response ratio grain_MD, between the treatment and control as a comparison of responses. dat1 &lt;- slimmer_PM_dat %&gt;% mutate(vi = vi/n) %&gt;% mutate(spray_management = factor( spray_management, c( &quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;, &quot;Late&quot;, &quot;Late_plus&quot; ) ), D_pres = factor(D_pres, c(&quot;lowD&quot;, &quot;highD&quot;)), id = row_number()) %&gt;% dplyr::select( trial, trial_ref, location, year, row_spacing, host_genotype, spray_management, fungicide_ai, D_pres, grain_yield.t.ha, yield_gain, dose, vi, yield_error, vi2, n, id) 5.1 metafor analysis For the first grain yield meta-analysis, we’ll use the metafor package (Viechtbauer 2010). To do a ARM based model we will use the package metafor. We are using the spray_management variable as a moderator and an interactive term to the trial random variable. PM_mv &lt;- rma.mv( yi = grain_yield.t.ha, vi, mods = ~ spray_management, method = &quot;ML&quot;, random = list(~ spray_management | trial, ~1 | id), struct = &quot;UN&quot;, control=list(optimizer=&quot;optim&quot;), data = dat1 ) ## Warning: Some combinations of the levels of the inner factor never occurred. ## Corresponding rho value(s) fixed to 0. summary(PM_mv) ## ## Multivariate Meta-Analysis Model (k = 154; method: ML) ## ## logLik Deviance AIC BIC AICc ## 49.8964 422.0231 -45.7927 36.2050 -33.7927 ## ## Variance Components: ## ## estim sqrt nlvls fixed factor ## sigma^2 0.0005 0.0221 154 no id ## ## outer factor: trial (nlvls = 33) ## inner factor: spray_management (nlvls = 6) ## ## estim sqrt k.lvl fixed level ## tau^2.1 0.2297 0.4793 38 no control ## tau^2.2 0.1943 0.4408 13 no Early ## tau^2.3 0.2780 0.5272 27 no Recommended ## tau^2.4 0.3924 0.6264 40 no Recommended_plus ## tau^2.5 0.3241 0.5693 17 no Late ## tau^2.6 0.3783 0.6150 19 no Late_plus ## ## rho.cntr rho.Erly rho.Rcmm rho.Rcm_ rho.Late rho.Lt_p ## control 1 0.9076 0.9733 0.9705 0.9891 0.9777 ## Early 0.9076 1 0.9790 0.9721 0.9566 0.0000 ## Recommended 0.9733 0.9790 1 0.9912 0.9934 0.9966 ## Recommended_plus 0.9705 0.9721 0.9912 1 0.9951 0.9985 ## Late 0.9891 0.9566 0.9934 0.9951 1 0.9979 ## Late_plus 0.9777 0.0000 0.9966 0.9985 0.9979 1 ## cntr Erly Rcmm Rcm_ Late Lt_p ## control - no no no no no ## Early 7 - no no no yes ## Recommended 19 12 - no no no ## Recommended_plus 17 12 24 - no no ## Late 11 12 17 17 - no ## Late_plus 6 0 3 3 3 - ## ## Test for Residual Heterogeneity: ## QE(df = 148) = 37805.5158, p-val &lt; .0001 ## ## Test of Moderators (coefficients 2:6): ## QM(df = 5) = 31.1217, p-val &lt; .0001 ## ## Model Results: ## ## estimate se zval pval ci.lb ## intrcpt 1.1134 0.0851 13.0889 &lt;.0001 0.9466 ## spray_managementEarly -0.0463 0.0498 -0.9304 0.3521 -0.1438 ## spray_managementRecommended 0.0948 0.0306 3.1006 0.0019 0.0349 ## spray_managementRecommended_plus 0.1778 0.0417 4.2653 &lt;.0001 0.0961 ## spray_managementLate 0.1136 0.0306 3.7057 0.0002 0.0535 ## spray_managementLate_plus 0.1475 0.0423 3.4850 0.0005 0.0646 ## ci.ub ## intrcpt 1.2801 *** ## spray_managementEarly 0.0512 ## spray_managementRecommended 0.1548 ** ## spray_managementRecommended_plus 0.2595 *** ## spray_managementLate 0.1736 *** ## spray_managementLate_plus 0.2305 *** ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The first table in this output shows the tau^2 (variance) of each random effects and the number of occurrences for each treatment in the analysis. This effectively shows the heterogeneity between experiments for these partivular treatments. The tau^2 also gives us the heterogeneity between trials and indicates Recommended_plus showed the highest heterogeneity between experiments followed by Late_plus, Late then Recommended, with Early and the no-spray control showing the least heterogeneity. The second table is in two parts (left and right). The left part, rho, is the correlation of variation between the specified treatments. All comparisons were acceptable except for a comparison between Early and Late_plus, 0.000 rho. Early and Late_plus treatments never occurred within the same trial, which is indicated by the right side of the table (hence the warning). In this result we can see that the Early treatment is not significantly different to the intercept, which in this case is the mean of the no spray control. However the other treatments are significantly different from the no-spray control (intercept). The \\(Q_M\\) omnibus test of moderators, shows the moderators significantly influence the model (\\(Q_M =\\) 31.1217477 \\(,df =\\) 5, P &lt; 0.0001) and we can reject the null hypothesis (\\(H_0 : \\beta_1 = \\beta_2 = \\beta_3 =\\beta_4 = 0\\)) that there is no difference between the moderators (Viechtbauer 2010). The analysis shows there is still a significant amount of residual heterogeneity (\\(Q_E =\\) 31.1217477 \\(,df=\\) 149, P &lt; 0.0001 ) not captured by the spray management moderator indicating other possible moderators which might influence grain yield. source(&quot;R/simple_summary.R&quot;) summary(glht(PM_mv, linfct=cbind(contrMat(rep(1,6), type=&quot;Tukey&quot;))), test=adjusted(&quot;none&quot;)) ## ## Simultaneous Tests for General Linear Hypotheses ## ## Fit: rma.mv(yi = grain_yield.t.ha, V = vi, mods = ~spray_management, ## random = list(~spray_management | trial, ~1 | id), struct = &quot;UN&quot;, ## data = dat1, method = &quot;ML&quot;, control = list(optimizer = &quot;optim&quot;)) ## ## Linear Hypotheses: ## Estimate Std. Error z value Pr(&gt;|z|) ## 2 - 1 == 0 -1.15966 0.11260 -10.299 &lt; 2e-16 *** ## 3 - 1 == 0 -1.01852 0.08771 -11.613 &lt; 2e-16 *** ## 4 - 1 == 0 -0.93553 0.07610 -12.293 &lt; 2e-16 *** ## 5 - 1 == 0 -0.99979 0.07873 -12.699 &lt; 2e-16 *** ## 6 - 1 == 0 -0.96584 0.07781 -12.412 &lt; 2e-16 *** ## 3 - 2 == 0 0.14114 0.03817 3.698 0.000218 *** ## 4 - 2 == 0 0.22413 0.05040 4.447 8.7e-06 *** ## 5 - 2 == 0 0.15987 0.04826 3.313 0.000923 *** ## 6 - 2 == 0 0.19382 0.05505 3.521 0.000430 *** ## 4 - 3 == 0 0.08299 0.02962 2.802 0.005075 ** ## 5 - 3 == 0 0.01874 0.02603 0.720 0.471636 ## 6 - 3 == 0 0.05268 0.03449 1.527 0.126662 ## 5 - 4 == 0 -0.06426 0.02649 -2.425 0.015297 * ## 6 - 4 == 0 -0.03031 0.03035 -0.999 0.317818 ## 6 - 5 == 0 0.03394 0.03081 1.102 0.270604 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- none method) contrast_Ssum &lt;- simple_summary(summary(glht(PM_mv, linfct=cbind(contrMat(rep(1,6), type=&quot;Tukey&quot;))), test=adjusted(&quot;none&quot;))) contrast_Ssum ## contrast coefficients pvals sig ## 2 - 1 Early - control -1.15965885 0.000000e+00 *** ## 3 - 1 Recommended - control -1.01852122 0.000000e+00 *** ## 4 - 1 Recommended_plus - control -0.93552851 0.000000e+00 *** ## 5 - 1 Late - control -0.99978607 0.000000e+00 *** ## 6 - 1 Late_plus - control -0.96584245 0.000000e+00 *** ## 3 - 2 Recommended - Early 0.14113763 2.175507e-04 *** ## 4 - 2 Recommended_plus - Early 0.22413034 8.695943e-06 *** ## 5 - 2 Late - Early 0.15987278 9.228710e-04 *** ## 6 - 2 Late_plus - Early 0.19381639 4.301071e-04 *** ## 4 - 3 Recommended_plus - Recommended 0.08299271 5.074599e-03 ** ## 5 - 3 Late - Recommended 0.01873515 4.716356e-01 ## 6 - 3 Late_plus - Recommended 0.05267876 1.266625e-01 ## 5 - 4 Late - Recommended_plus -0.06425756 1.529661e-02 * ## 6 - 4 Late_plus - Recommended_plus -0.03031394 3.178179e-01 ## 6 - 5 Late_plus - Late 0.03394361 2.706042e-01 These contrasts can be viewed in a plot par(mar = c(5, 13, 4, 2) + 0.1) plot(glht(PM_mv, linfct=cbind(contrMat(rep(1,6), type=&quot;Tukey&quot;))), yaxt=&#39;n&#39;) axis(2, at = seq_along(contrast_Ssum$contrast), labels = rev(contrast_Ssum$contrast), las=2, cex.axis = 0.8) Does disease pressure on the crop affect the optimum spray scenario? Above we can see spraying at the first sign of powdery mildew or with in 7 - 13 days after first sign is effective at mitigating yield loss. Lets test this hypothesis by adding it as a moderator and comparing the new model with the original model above. PM_mv2 &lt;- rma.mv( yi = grain_yield.t.ha, vi, mods = ~ spray_management*D_pres, method = &quot;ML&quot;, random = list(~ spray_management | trial, ~1 | id), struct = &quot;UN&quot;, control=list(optimizer=&quot;optim&quot;), data = dat1 ) ## Warning: Some combinations of the levels of the inner factor never occurred. ## Corresponding rho value(s) fixed to 0. anova(PM_mv, PM_mv2) ## ## df AIC BIC AICc logLik LRT pval QE ## Full 33 -45.2142 55.0053 -26.5142 55.6071 29465.7104 ## Reduced 27 -45.7927 36.2050 -33.7927 49.8964 11.4214 0.0762 37805.5158 We can see that the lower \\(QE\\) indicates that disease pressure moderator helped explain some of the residual heterogeneity in differences in grain yield between treatments. However according to the Wald-test the models were not significantly different and we should use the original “Reduced” model. The P value was close to the 0.05 cut-off so we will present the model output for the interest of the readers. summary(PM_mv2) ## ## Multivariate Meta-Analysis Model (k = 154; method: ML) ## ## logLik Deviance AIC BIC AICc ## 55.6071 410.6016 -45.2142 55.0053 -26.5142 ## ## Variance Components: ## ## estim sqrt nlvls fixed factor ## sigma^2 0.0004 0.0210 154 no id ## ## outer factor: trial (nlvls = 33) ## inner factor: spray_management (nlvls = 6) ## ## estim sqrt k.lvl fixed level ## tau^2.1 0.2211 0.4702 38 no control ## tau^2.2 0.2122 0.4607 13 no Early ## tau^2.3 0.2967 0.5447 27 no Recommended ## tau^2.4 0.4232 0.6505 40 no Recommended_plus ## tau^2.5 0.3430 0.5856 17 no Late ## tau^2.6 0.1548 0.3935 19 no Late_plus ## ## rho.cntr rho.Erly rho.Rcmm rho.Rcm_ rho.Late rho.Lt_p ## control 1 0.9391 0.9847 0.9783 0.9939 0.9843 ## Early 0.9391 1 0.9846 0.9764 0.9634 0.0000 ## Recommended 0.9847 0.9846 1 0.9915 0.9934 0.9959 ## Recommended_plus 0.9783 0.9764 0.9915 1 0.9951 0.9991 ## Late 0.9939 0.9634 0.9934 0.9951 1 0.9974 ## Late_plus 0.9843 0.0000 0.9959 0.9991 0.9974 1 ## cntr Erly Rcmm Rcm_ Late Lt_p ## control - no no no no no ## Early 7 - no no no yes ## Recommended 19 12 - no no no ## Recommended_plus 17 12 24 - no no ## Late 11 12 17 17 - no ## Late_plus 6 0 3 3 3 - ## ## Test for Residual Heterogeneity: ## QE(df = 142) = 29465.7104, p-val &lt; .0001 ## ## Test of Moderators (coefficients 2:12): ## QM(df = 11) = 415.4279, p-val &lt; .0001 ## ## Model Results: ## ## estimate se zval pval ## intrcpt 1.2799 0.1673 7.6486 &lt;.0001 ## spray_managementEarly 0.1550 0.1756 0.8822 0.3777 ## spray_managementRecommended 0.0735 0.0556 1.3225 0.1860 ## spray_managementRecommended_plus 0.1593 0.0897 1.7763 0.0757 ## spray_managementLate 0.1252 0.0573 2.1855 0.0289 ## spray_managementLate_plus 0.4879 0.0516 9.4524 &lt;.0001 ## D_preshighD -0.2172 0.1930 -1.1253 0.2604 ## spray_managementEarly:D_preshighD -0.1472 0.1831 -0.8039 0.4214 ## spray_managementRecommended:D_preshighD 0.0670 0.0652 1.0276 0.3041 ## spray_managementRecommended_plus:D_preshighD 0.0692 0.1034 0.6695 0.5031 ## spray_managementLate:D_preshighD 0.0178 0.0712 0.2495 0.8029 ## spray_managementLate_plus:D_preshighD -0.3806 0.0685 -5.5573 &lt;.0001 ## ci.lb ci.ub ## intrcpt 0.9519 1.6078 *** ## spray_managementEarly -0.1893 0.4992 ## spray_managementRecommended -0.0354 0.1824 ## spray_managementRecommended_plus -0.0165 0.3351 . ## spray_managementLate 0.0129 0.2375 * ## spray_managementLate_plus 0.3867 0.5890 *** ## D_preshighD -0.5955 0.1611 ## spray_managementEarly:D_preshighD -0.5059 0.2116 ## spray_managementRecommended:D_preshighD -0.0608 0.1948 ## spray_managementRecommended_plus:D_preshighD -0.1335 0.2720 ## spray_managementLate:D_preshighD -0.1218 0.1574 ## spray_managementLate_plus:D_preshighD -0.5148 -0.2463 *** ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(glht(PM_mv2, linfct=cbind(contrMat(rep(7,12), type=&quot;Tukey&quot;))), test=adjusted(&quot;none&quot;)) ## ## Simultaneous Tests for General Linear Hypotheses ## ## Fit: rma.mv(yi = grain_yield.t.ha, V = vi, mods = ~spray_management * ## D_pres, random = list(~spray_management | trial, ~1 | id), ## struct = &quot;UN&quot;, data = dat1, method = &quot;ML&quot;, control = list(optimizer = &quot;optim&quot;)) ## ## Linear Hypotheses: ## Estimate Std. Error z value Pr(&gt;|z|) ## 2 - 1 == 0 -1.124913 0.252753 -4.451 8.56e-06 *** ## 3 - 1 == 0 -1.206363 0.155126 -7.777 7.55e-15 *** ## 4 - 1 == 0 -1.120542 0.131598 -8.515 &lt; 2e-16 *** ## 5 - 1 == 0 -1.154653 0.137408 -8.403 &lt; 2e-16 *** ## 6 - 1 == 0 -0.791980 0.202914 -3.903 9.50e-05 *** ## 7 - 1 == 0 -1.497073 0.348219 -4.299 1.71e-05 *** ## 8 - 1 == 0 -1.427027 0.237645 -6.005 1.92e-09 *** ## 9 - 1 == 0 -1.212855 0.198185 -6.120 9.37e-10 *** ## 10 - 1 == 0 -1.210615 0.239635 -5.052 4.37e-07 *** ## 11 - 1 == 0 -1.262089 0.213254 -5.918 3.25e-09 *** ## 12 - 1 == 0 -1.660424 0.148930 -11.149 &lt; 2e-16 *** ## 3 - 2 == 0 -0.081450 0.185930 -0.438 0.661336 ## 4 - 2 == 0 0.004370 0.201440 0.022 0.982691 ## 5 - 2 == 0 -0.029741 0.187742 -0.158 0.874132 ## 6 - 2 == 0 0.332933 0.180470 1.845 0.065065 . ## 7 - 2 == 0 -0.372160 0.251140 -1.482 0.138370 ## 8 - 2 == 0 -0.302114 0.355047 -0.851 0.394818 ## 9 - 2 == 0 -0.087943 0.185662 -0.474 0.635735 ## 10 - 2 == 0 -0.085703 0.199659 -0.429 0.667744 ## 11 - 2 == 0 -0.137176 0.186574 -0.735 0.462196 ## 12 - 2 == 0 -0.535511 0.191008 -2.804 0.005053 ** ## 4 - 3 == 0 0.085820 0.064996 1.320 0.186706 ## 5 - 3 == 0 0.051710 0.045261 1.142 0.253260 ## 6 - 3 == 0 0.414383 0.066502 6.231 4.63e-10 *** ## 7 - 3 == 0 -0.290710 0.217644 -1.336 0.181642 ## 8 - 3 == 0 -0.220664 0.189647 -1.164 0.244607 ## 9 - 3 == 0 -0.006492 0.116267 -0.056 0.955470 ## 10 - 3 == 0 -0.004253 0.143857 -0.030 0.976417 ## 11 - 3 == 0 -0.055726 0.111741 -0.499 0.617989 ## 12 - 3 == 0 -0.454061 0.095438 -4.758 1.96e-06 *** ## 5 - 4 == 0 -0.034111 0.047889 -0.712 0.476286 ## 6 - 4 == 0 0.328563 0.098049 3.351 0.000805 *** ## 7 - 4 == 0 -0.376531 0.253035 -1.488 0.136736 ## 8 - 4 == 0 -0.306484 0.199675 -1.535 0.124805 ## 9 - 4 == 0 -0.092313 0.138584 -0.666 0.505338 ## 10 - 4 == 0 -0.090073 0.186631 -0.483 0.629362 ## 11 - 4 == 0 -0.141546 0.148840 -0.951 0.341606 ## 12 - 4 == 0 -0.539881 0.117598 -4.591 4.41e-06 *** ## 6 - 5 == 0 0.362673 0.075288 4.817 1.46e-06 *** ## 7 - 5 == 0 -0.342420 0.230086 -1.488 0.136691 ## 8 - 5 == 0 -0.272373 0.188882 -1.442 0.149294 ## 9 - 5 == 0 -0.058202 0.108889 -0.535 0.592992 ## 10 - 5 == 0 -0.055962 0.151702 -0.369 0.712205 ## 11 - 5 == 0 -0.107435 0.122156 -0.879 0.379135 ## 12 - 5 == 0 -0.505770 0.090830 -5.568 2.57e-08 *** ## 7 - 6 == 0 -0.705093 0.171492 -4.112 3.93e-05 *** ## 8 - 6 == 0 -0.635047 0.192659 -3.296 0.000980 *** ## 9 - 6 == 0 -0.420875 0.090809 -4.635 3.57e-06 *** ## 10 - 6 == 0 -0.418636 0.120235 -3.482 0.000498 *** ## 11 - 6 == 0 -0.470109 0.089539 -5.250 1.52e-07 *** ## 12 - 6 == 0 -0.868444 0.112613 -7.712 1.24e-14 *** ## 8 - 7 == 0 0.070047 0.279507 0.251 0.802118 ## 9 - 7 == 0 0.284218 0.180602 1.574 0.115552 ## 10 - 7 == 0 0.286458 0.153817 1.862 0.062557 . ## 11 - 7 == 0 0.234984 0.162355 1.447 0.147800 ## 12 - 7 == 0 -0.163351 0.237797 -0.687 0.492126 ## 9 - 8 == 0 0.214171 0.190110 1.127 0.259926 ## 10 - 8 == 0 0.216411 0.209082 1.035 0.300644 ## 11 - 8 == 0 0.164938 0.195993 0.842 0.400040 ## 12 - 8 == 0 -0.233397 0.189522 -1.232 0.218134 ## 10 - 9 == 0 0.002240 0.073581 0.030 0.975718 ## 11 - 9 == 0 -0.049234 0.057857 -0.851 0.394795 ## 12 - 9 == 0 -0.447568 0.086013 -5.204 1.96e-07 *** ## 11 - 10 == 0 -0.051473 0.060776 -0.847 0.397030 ## 12 - 10 == 0 -0.449808 0.120840 -3.722 0.000197 *** ## 12 - 11 == 0 -0.398335 0.097527 -4.084 4.42e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- none method) # plot(glht(PM_mv2, linfct=cbind(contrMat(rep(7,12), type=&quot;Tukey&quot;)))) # I think this plot is too busy to be incorporated 5.1.1 Profile plots Let’s inspect the profile plots to ensure the model is not over-fitted. We expect to see the estimate align with the peak of the curve. Also that the shape of the line is a curve. Caution! this will take some time to run. profile(PM_mv, tau2 = 1) profile(PM_mv, tau2 = 2) profile(PM_mv, tau2 = 3) profile(PM_mv, tau2 = 4) profile(PM_mv, tau2 = 5) Lets present the meta-analysis results for the moderator variables in a forest style plot. First lets create a table of the results. results_AI &lt;- data.frame(cbind(PM_mv$b, PM_mv$ci.lb, PM_mv$ci.ub)) efficacy &lt;- as_tibble(results_AI) efficacy$Treatment &lt;- factor(c( &quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;, &quot;Late&quot;, &quot;Late_plus&quot; )) efficacy$se &lt;- PM_mv$se colnames(efficacy) &lt;- c(&quot;Mean&quot;, &quot;CIs_lower&quot;, &quot;CI_upper&quot;, &quot;Treatment&quot;, &quot;SE&quot;) efficacy ## # A tibble: 6 x 5 ## Mean CIs_lower CI_upper Treatment SE ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 1.11 0.947 1.28 control 0.0851 ## 2 -0.0463 -0.144 0.0512 Early 0.0498 ## 3 0.0948 0.0349 0.155 Recommended 0.0306 ## 4 0.178 0.0961 0.260 Recommended_plus 0.0417 ## 5 0.114 0.0535 0.174 Late 0.0306 ## 6 0.148 0.0646 0.230 Late_plus 0.0423 Let’s view these comparisons in a plot. YieldContrasts &lt;- efficacy %&gt;% filter(Treatment != &quot;control&quot;) %&gt;% mutate(Treatment = factor(Treatment, levels = rev( c( &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;, &quot;Late&quot;, &quot;Late_plus&quot; ) ))) %&gt;% ggplot(aes(Treatment, Mean)) + geom_hline( yintercept = seq(-0.05, 0.3, by = 0.05), color = usq_cols(&quot;usq charcoal&quot;), linetype = 3 ) + geom_hline(yintercept = 0) + geom_point(aes(size = 1 / SE), shape = 15) + geom_linerange(aes(ymin = CIs_lower, ymax = CI_upper)) + coord_flip() YieldContrasts 5.1.2 Forest plot of trial treatment effect per trial Lets look at the trial variability in this model with a forest plot # THIS NEEDS TO BE FIXED source(here(&quot;R/change_labels.R&quot;)) source(here(&quot;R/forest_rows.R&quot;)) ### Sort and arrange data-frame accordingly and produce a index vector to inform the order of each &quot;Trial&quot; on the plot index1 &lt;- dat1 %&gt;% mutate(ID = seq_along(trial_ref)) %&gt;% mutate(spray_management = factor(spray_management, levels = c(&quot;Early&quot;,&quot;Late&quot;,&quot;Recommended&quot;, &quot;Recommended_plus&quot;,&quot;Late_plus&quot;))) %&gt;% arrange(desc(spray_management), location, desc(grain_yield.t.ha)) %&gt;% mutate(ID2 = order(ID))%&gt;% pull(ID2) ### Use forest rows function to return a list of where to place on the plot: sub-titles, each trial row, and summary prediction for each treatment. ### this list can be used below to reference where to plot each variable rows1 &lt;- forest_rows(head_row = 186, ord_var = dat1$spray_management, index = index1, gap = 5, row_offset = -2) ### A data-frame of meta-model coefficients used to produce the summary polygons for each treatment polys &lt;- data.frame(ref = change_labels(names(coef(PM_mv))), x = c(coef(PM_mv)[1],coef(PM_mv)[1] + coef(PM_mv)[2:6]), ci.lb = c(PM_mv$ci.lb[1],PM_mv$ci.lb[1] +PM_mv$ci.lb[2:6]), ci.ub = c(PM_mv$ci.ub[1],PM_mv$ci.ub[1] +PM_mv$ci.ub[2:6]))[c(2,5,3,4,6,1),] polys$rows &lt;- rows1$pred_row - 1.5 forest1 &lt;- metafor::forest(PM_mv, cex = 1.15 , width = 5, #order = &quot;fit&quot;, rows = rows1$trows-1.5, ilab = cbind(dat1$year, dat1$row_spacing, dat1$host_genotype, dat1$dose), ilab.xpos = c(-2.35,-2.1,-1.8,-1.4)+1, slab = NA, xlim = c(-2, 4), ylim = c(5,190), xlab = &quot;Grain yield mean difference&quot;, addfit = FALSE, efac = c(0.2,0.15,0.2), at = seq(-0.5,3, 0.5)) ### code which puts lines and annotations on the plot, its a bit long... source(here(&quot;R/add_annotations.R&quot;)) 5.2 netmeta analysis We can use the netmeta package to give a graphical representation of the pairwise comparisons. Let’s analyse the data again using a different statistical approach to see if our outcome with the metafor package was robust. The netmeta package uses a frequentist approach to the analysis and focuses on the pairwise comparisons between treatments. datPM3 &lt;- slimmer_PM_dat %&gt;% group_by(trial, spray_management, n) %&gt;% summarize(yi_mean = mean(grain_yield.t.ha), vi_mean = mean(yield_error)) %&gt;% ungroup() PM_con &lt;- pairwise( treat = spray_management, n = n, mean = yi_mean, sd = sqrt(vi_mean), studlab = trial, data = datPM3, sm = &quot;MD&quot; ) net_con &lt;- netmeta(TE, seTE, treat1, treat2, studlab, data = PM_con, sm = &quot;MD&quot;) summary(net_con) ## Number of studies: k = 30 ## Number of treatments: n = 6 ## Number of pairwise comparisons: m = 163 ## Number of designs: d = 9 ## ## Fixed effects model ## ## Treatment estimate (sm = &#39;MD&#39;): ## control Early Late Late_plus Recommended Recommended_plus ## control . 0.0433 -0.0765 -0.1690 -0.0900 -0.1331 ## Early -0.0433 . -0.1198 -0.2123 -0.1333 -0.1764 ## Late 0.0765 0.1198 . -0.0925 -0.0135 -0.0566 ## Late_plus 0.1690 0.2123 0.0925 . 0.0790 0.0359 ## Recommended 0.0900 0.1333 0.0135 -0.0790 . -0.0431 ## Recommended_plus 0.1331 0.1764 0.0566 -0.0359 0.0431 . ## ## Lower 95%-confidence limit: ## control Early Late Late_plus Recommended Recommended_plus ## control . 0.0045 -0.1115 -0.2205 -0.1217 -0.1713 ## Early -0.0821 . -0.1578 -0.2690 -0.1596 -0.2178 ## Late 0.0415 0.0818 . -0.1437 -0.0442 -0.0933 ## Late_plus 0.1175 0.1556 0.0413 . 0.0271 -0.0166 ## Recommended 0.0583 0.1071 -0.0172 -0.1308 . -0.0776 ## Recommended_plus 0.0949 0.1351 0.0200 -0.0883 0.0087 . ## ## Upper 95%-confidence limit: ## control Early Late Late_plus Recommended Recommended_plus ## control . 0.0821 -0.0415 -0.1175 -0.0583 -0.0949 ## Early -0.0045 . -0.0818 -0.1556 -0.1071 -0.1351 ## Late 0.1115 0.1578 . -0.0413 0.0172 -0.0200 ## Late_plus 0.2205 0.2690 0.1437 . 0.1308 0.0883 ## Recommended 0.1217 0.1596 0.0442 -0.0271 . -0.0087 ## Recommended_plus 0.1713 0.2178 0.0933 0.0166 0.0776 . ## ## Random effects model ## ## Treatment estimate (sm = &#39;MD&#39;): ## control Early Late Late_plus Recommended Recommended_plus ## control . -0.0217 -0.1204 -0.1868 -0.0963 -0.1597 ## Early 0.0217 . -0.0987 -0.1652 -0.0746 -0.1381 ## Late 0.1204 0.0987 . -0.0664 0.0241 -0.0393 ## Late_plus 0.1868 0.1652 0.0664 . 0.0905 0.0271 ## Recommended 0.0963 0.0746 -0.0241 -0.0905 . -0.0634 ## Recommended_plus 0.1597 0.1381 0.0393 -0.0271 0.0634 . ## ## Lower 95%-confidence limit: ## control Early Late Late_plus Recommended Recommended_plus ## control . -0.1163 -0.2025 -0.3087 -0.1653 -0.2331 ## Early -0.0729 . -0.1950 -0.3077 -0.1663 -0.2325 ## Late 0.0384 0.0025 . -0.1944 -0.0542 -0.1201 ## Late_plus 0.0650 0.0226 -0.0616 . -0.0346 -0.0993 ## Recommended 0.0273 -0.0170 -0.1024 -0.2156 . -0.1317 ## Recommended_plus 0.0864 0.0436 -0.0415 -0.1535 -0.0049 . ## ## Upper 95%-confidence limit: ## control Early Late Late_plus Recommended Recommended_plus ## control . 0.0729 -0.0384 -0.0650 -0.0273 -0.0864 ## Early 0.1163 . -0.0025 -0.0226 0.0170 -0.0436 ## Late 0.2025 0.1950 . 0.0616 0.1024 0.0415 ## Late_plus 0.3087 0.3077 0.1944 . 0.2156 0.1535 ## Recommended 0.1653 0.1663 0.0542 0.0346 . 0.0049 ## Recommended_plus 0.2331 0.2325 0.1201 0.0993 0.1317 . ## ## Quantifying heterogeneity / inconsistency: ## tau^2 = 0.0158; tau = 0.1255; I^2 = 68.3% [59.8%; 75.0%] ## ## Tests of heterogeneity (within designs) and inconsistency (between designs): ## Q d.f. p-value ## Total 233.27 74 &lt; 0.0001 ## Within designs 152.36 59 &lt; 0.0001 ## Between designs 80.91 15 &lt; 0.0001 Now let’s visualise this as a forest plot. forest( net_con, reference.group = 1, rightcols = c(&quot;effect&quot;, &quot;ci&quot;, &quot;Pscore&quot;), rightlabs = &quot;P-Score&quot;, small.values = &quot;bad&quot; ) The netmeta analysis suggests the spray schedule commencing early are no different to any other treatment including the no spray control. It estimates the mean is very similar to the recommended treatments. The Recommended_plus and Late_plus treatments show higher mean estimates, however are not significantly different from the Early estimate. netgraph( net_con, plastic = FALSE, col = usq_cols(&quot;support orange&quot;), thickness = &quot;number.of.studies&quot;, points = FALSE, col.points = usq_cols(&quot;usq charcoal&quot;), cex.points = 1, number.of.studies = TRUE, cex.number.of.studies = 1, col.number.of.studies = &quot;black&quot;, bg.number.of.studies = usq_cols(&quot;support orange&quot;), multiarm = FALSE, col.multiarm = usq_cols(&quot;support turquiose&quot;), pos.number.of.studies = 0.5 ) netleague(net_con) ## League table (fixed effects model): ## ## control -0.1284 [-0.2030; -0.0539] ## 0.0433 [ 0.0045; 0.0821] Early ## -0.0765 [-0.1115; -0.0415] -0.1198 [-0.1578; -0.0818] ## -0.1690 [-0.2205; -0.1175] -0.2123 [-0.2690; -0.1556] ## -0.0900 [-0.1217; -0.0583] -0.1333 [-0.1596; -0.1071] ## -0.1331 [-0.1713; -0.0949] -0.1764 [-0.2178; -0.1351] ## ## -0.0676 [-0.1116; -0.0236] -0.2274 [-0.2992; -0.1555] ## -0.1481 [-0.2208; -0.0753] . ## Late -0.0684 [-0.1392; 0.0024] ## -0.0925 [-0.1437; -0.0413] Late_plus ## -0.0135 [-0.0442; 0.0172] 0.0790 [ 0.0271; 0.1308] ## -0.0566 [-0.0933; -0.0200] 0.0359 [-0.0166; 0.0883] ## ## -0.0797 [-0.1144; -0.0450] -0.1189 [-0.1614; -0.0765] ## -0.1403 [-0.1680; -0.1126] -0.1482 [-0.2392; -0.0572] ## 0.0014 [-0.0352; 0.0379] -0.0533 [-0.0975; -0.0091] ## 0.1602 [ 0.0643; 0.2561] -0.0019 [-0.0742; 0.0705] ## Recommended -0.0532 [-0.0901; -0.0163] ## -0.0431 [-0.0776; -0.0087] Recommended_plus ## ## League table (random effects model): ## ## control -0.1025 [-0.2323; 0.0273] ## -0.0217 [-0.1163; 0.0729] Early ## -0.1204 [-0.2025; -0.0384] -0.0987 [-0.1950; -0.0025] ## -0.1868 [-0.3087; -0.0650] -0.1652 [-0.3077; -0.0226] ## -0.0963 [-0.1653; -0.0273] -0.0746 [-0.1663; 0.0170] ## -0.1597 [-0.2331; -0.0864] -0.1381 [-0.2325; -0.0436] ## ## -0.1332 [-0.2318; -0.0346] -0.2297 [-0.3733; -0.0861] ## -0.1194 [-0.2301; -0.0087] . ## Late -0.0417 [-0.2050; 0.1215] ## -0.0664 [-0.1944; 0.0616] Late_plus ## 0.0241 [-0.0542; 0.1024] 0.0905 [-0.0346; 0.2156] ## -0.0393 [-0.1201; 0.0415] 0.0271 [-0.0993; 0.1535] ## ## -0.0950 [-0.1690; -0.0211] -0.1353 [-0.2156; -0.0551] ## -0.1102 [-0.2225; 0.0020] -0.1644 [-0.2827; -0.0462] ## 0.0258 [-0.0608; 0.1124] -0.0621 [-0.1507; 0.0264] ## 0.1438 [-0.0328; 0.3204] 0.0052 [-0.1715; 0.1819] ## Recommended -0.0697 [-0.1395; 0.0000] ## -0.0634 [-0.1317; 0.0049] Recommended_plus decomp.design(net_con) ## Q statistics to assess homogeneity / consistency ## ## Q df p-value ## Total 233.27 74 &lt; 0.0001 ## Within designs 152.36 59 &lt; 0.0001 ## Between designs 80.91 15 &lt; 0.0001 ## ## Design-specific decomposition of within-designs Q statistic ## ## Design Q df p-value ## control:Late_plus 0.46 2 0.7934 ## control:Recommended 0.10 1 0.7472 ## control:Early:Late:Recommended:Recommended_plus 39.85 20 0.0052 ## control:Late:Late_plus:Recommended:Recommended_plus 18.72 8 0.0164 ## control:Late:Recommended:Recommended_plus 0.66 3 0.8830 ## control:Recommended:Recommended_plus 44.10 10 &lt; 0.0001 ## Early:Late:Recommended:Recommended_plus 48.46 15 &lt; 0.0001 ## ## Between-designs Q statistic after detaching of single designs ## ## Detached design Q df p-value ## control:Early 71.08 14 &lt; 0.0001 ## control:Late_plus 77.94 14 &lt; 0.0001 ## control:Recommended 80.43 14 &lt; 0.0001 ## Recommended:Recommended_plus 69.94 14 &lt; 0.0001 ## control:Early:Late:Recommended:Recommended_plus 67.09 11 &lt; 0.0001 ## control:Late:Late_plus:Recommended:Recommended_plus 54.88 11 &lt; 0.0001 ## control:Late:Recommended:Recommended_plus 60.98 12 &lt; 0.0001 ## control:Recommended:Recommended_plus 76.92 13 &lt; 0.0001 ## Early:Late:Recommended:Recommended_plus 70.66 12 &lt; 0.0001 ## ## Q statistic to assess consistency under the assumption of ## a full design-by-treatment interaction random effects model ## ## Q df p-value tau.within tau2.within ## Between designs 14.37 15 0.4980 0.1270 0.0161 netsplit(net_con) ## Separate indirect from direct evidence (SIDE) using back-calculation method ## ## Fixed effects model: ## ## comparison k prop nma direct indir. Diff z p-value ## control:Early 7 0.27 0.0433 -0.1284 0.1071 -0.2355 -5.29 &lt; 0.0001 ## control:Late 11 0.63 -0.0765 -0.0676 -0.0917 0.0241 0.65 0.5150 ## control:Late_plus 6 0.51 -0.1690 -0.2274 -0.1072 -0.1202 -2.29 0.0223 ## control:Recommended 19 0.83 -0.0900 -0.0797 -0.1417 0.0620 1.43 0.1526 ## control:Recommended_plus 17 0.81 -0.1331 -0.1189 -0.1933 0.0744 1.50 0.1335 ## Early:Late 12 0.27 -0.1198 -0.1481 -0.1092 -0.0389 -0.89 0.3719 ## Early:Late_plus 0 0 -0.2123 . -0.2123 . . . ## Early:Recommended 12 0.90 -0.1333 -0.1403 -0.0720 -0.0683 -1.55 0.1223 ## Early:Recommended_plus 12 0.21 -0.1764 -0.1482 -0.1838 0.0356 0.68 0.4949 ## Late:Late_plus 3 0.52 -0.0925 -0.0684 -0.1188 0.0504 0.96 0.3350 ## Late:Recommended 17 0.71 -0.0135 0.0014 -0.0492 0.0506 1.47 0.1410 ## Late:Recommended_plus 17 0.69 -0.0566 -0.0533 -0.0640 0.0108 0.27 0.7898 ## Late_plus:Recommended 3 0.29 0.0790 0.1602 0.0454 0.1147 1.97 0.0486 ## Late_plus:Recommended_plus 3 0.53 0.0359 -0.0019 0.0776 -0.0794 -1.48 0.1383 ## Recommended:Recommended_plus 24 0.87 -0.0431 -0.0532 0.0250 -0.0782 -1.49 0.1357 ## ## Random effects model: ## ## comparison k prop nma direct indir. Diff z p-value ## control:Early 7 0.53 -0.0217 -0.1025 0.0699 -0.1724 -1.78 0.0746 ## control:Late 11 0.69 -0.1204 -0.1332 -0.0917 -0.0415 -0.46 0.6475 ## control:Late_plus 6 0.72 -0.1868 -0.2297 -0.0765 -0.1532 -1.11 0.2684 ## control:Recommended 19 0.87 -0.0963 -0.0950 -0.1051 0.0101 0.10 0.9231 ## control:Recommended_plus 17 0.84 -0.1597 -0.1353 -0.2844 0.1491 1.47 0.1406 ## Early:Late 12 0.76 -0.0987 -0.1194 -0.0346 -0.0848 -0.74 0.4587 ## Early:Late_plus 0 0 -0.1652 . -0.1652 . . . ## Early:Recommended 12 0.67 -0.0746 -0.1102 -0.0035 -0.1068 -1.08 0.2816 ## Early:Recommended_plus 12 0.64 -0.1381 -0.1644 -0.0914 -0.0730 -0.73 0.4671 ## Late:Late_plus 3 0.61 -0.0664 -0.0417 -0.1058 0.0640 0.48 0.6333 ## Late:Recommended 17 0.82 0.0241 0.0258 0.0164 0.0094 0.09 0.9273 ## Late:Recommended_plus 17 0.83 -0.0393 -0.0621 0.0750 -0.1372 -1.24 0.2154 ## Late_plus:Recommended 3 0.50 0.0905 0.1438 0.0369 0.1069 0.84 0.4024 ## Late_plus:Recommended_plus 3 0.51 0.0271 0.0052 0.0500 -0.0448 -0.35 0.7286 ## Recommended:Recommended_plus 24 0.96 -0.0634 -0.0697 0.0860 -0.1557 -0.88 0.3778 ## ## Legend: ## comparison - Treatment comparison ## k - Number of studies providing direct evidence ## prop - Direct evidence proportion ## nma - Estimated treatment effect (MD) in network meta-analysis ## direct - Estimated treatment effect (MD) derived from direct evidence ## indir. - Estimated treatment effect (MD) derived from indirect evidence ## Diff - Difference between direct and indirect treatment estimates ## z - z-value of test for disagreement (direct versus indirect) ## p-value - p-value of test for disagreement (direct versus indirect) nm1 &lt;- netmeasures(net_con) plot( nm1$meanpath, nm1$minpar, pch = &quot;&quot;, xlab = &quot;Mean path length&quot;, ylab = &quot;Minimal parallelism&quot; ) text(nm1$meanpath, nm1$minpar, names(nm1$meanpath), cex = 0.8) write.csv(slimmer_PM_dat, file = &quot;data/GYmeta_data.csv&quot;) save(dat1, efficacy, PM_mv, YieldContrasts, file = here(&quot;cache/Meta-analysisData.Rdata&quot;)) 5.2.0.1 Powdery mildewMBM comparison – Delete One aspect we would like to consider is how the results of this meta-analysis compares to how the PowderyMildewMBM estimates the effect of fungicide applications on grain yields. Below we create a data frame of the mitigation factors for each spray scenario so we can compare them to the outcomes of the meta-analysis. PMBM &lt;- data.frame(Sprays = c(rep(1,20), rep(2,20)), Disease = rep(c(rep(&quot;NotPresent&quot;, 5), rep(&quot;LowerCanopy&quot;, 5), rep(&quot;MidCanopy&quot;, 5), rep(&quot;UpperCanopy&quot;, 5)),2), CropMaturity = rep(c(&quot;Vegetative&quot;, &quot;Budding&quot;, &quot;Flowering&quot;, &quot;EarlyPod&quot;, &quot;LatePod&quot;), 8), mitigation = c(0.57, 0.855, 0.95,0.95,0.95, 0.45995, 0.52919,0.5530,0.390,0.1642, 0.291258,0.351051, 0.2454,0.1409,0.4717, 0,0.059597,0.093034,0.0682476,0.0215584, 0.95,0.95,0.95,0.95,0.95, 0.766588,0.6991,0.55042,0.390056,0.1642, 0.485429,0.390,0.2454,0.140904,0.0471684, 0.0791,0.086068,0.093034,0.0682476,0.0215584)) # what is the mean age of the plant in our data when disease first occurs and we apply the first spray? source(&quot;R/import_data.R&quot;) PM_MB_dat &lt;- import_data() mean(PM_MB_dat$first_sign_disease - PM_MB_dat$planting_date, na.rm =TRUE) # 46.3 days (which is when the plant is flowering) ## Time difference of 46.3207 days #What proportion of the yield was saved? 1 - (coef(PM_mv)[1] /(coef(PM_mv)[1] + coef(PM_mv)[3])) ## intrcpt ## 0.07849315 1- (coef(PM_mv)[1] /(coef(PM_mv)[1] + coef(PM_mv)[4])) ## intrcpt ## 0.1377244 PMBM %&gt;% filter(CropMaturity == &quot;Flowering&quot;) ## Sprays Disease CropMaturity mitigation ## 1 1 NotPresent Flowering 0.950000 ## 2 1 LowerCanopy Flowering 0.553000 ## 3 1 MidCanopy Flowering 0.245400 ## 4 1 UpperCanopy Flowering 0.093034 ## 5 2 NotPresent Flowering 0.950000 ## 6 2 LowerCanopy Flowering 0.550420 ## 7 2 MidCanopy Flowering 0.245400 ## 8 2 UpperCanopy Flowering 0.093034 To to a better comparison I need to know how the mitigation factor is calculated with the estimated yields. References "]
]
