[
["index.html", "Powdery mildew yield loss mitigation strategies in mungbean, a meta-analysis. 1 Research questions 1.1 Parts of analysis that need checking", " Powdery mildew yield loss mitigation strategies in mungbean, a meta-analysis. Paul Melloy, Emerson Del Ponte and Adam H. Sparks 18 February, 2020 1 Research questions When is the optimum time to spray fungicide to limit the impact of powdery mildew on mungbean yields? How has the first sign of powdery mildew changed over the seasons and between experimental sites? Is there an ideal planting time, or fungicide management strategy, which could make use of powdery mildew defoliation during pod maturation resulting in an increased yield? Do infections that occur before flowering increase the probable yield loss? What is the length of a mungbean season and how has it varied in this trial? This data has not been collected or is not accurate enough to be useful to answer this question. 1.1 Parts of analysis that need checking Variability among host genotypes. The probable influence of season might be influenced by host genotype. This is because newer varieties were adopted into experimental trials as they were released. Between 2001 and 2015 mungbean genotype changed from Green Diamond, Berken, Crystal to Jade. Jade was the only cultivar used between 2015 and 2019. Estimations of plant maturity stages over each growing season. These estimations might able to be computed using APSIM. "],
["studies-considered-in-meta-analysis.html", "2 Studies considered in meta-analysis 2.1 Summary of data 2.2 Powdery mildew ratings 2.3 Experimental locations", " 2 Studies considered in meta-analysis This meta-analysis uses data collected by a number of researchers from the Department of Agriculture and Primary Industries and the University of Southern Queensland. It is worth noting Malcolm Riley and Dr Sue Thompsons effort in establishing and coordinating early field trials between 2010 and 2016. 2001 Bongeen #1 Bongeen #2 2002 Hermitage #1 Hermitage #2 Kingaroy 2004 Redvale 2010 Hermitage Kingaroy 2011 Hermitage Kingaroy 2012 Gatton Kingaroy 2013 Premer Millmerran Mt Mary Goolhi 2015 Hermitage Dalby - Site abandoned due to insufficient/late disease infection Emerald 2016 Hermitage Kingaroy Emerald 2017 Missen Flats (Fogerty’s farm) Hermitage 2018 Wellcamp 2019 Hermitage 2001 - 2004 trials Trial data were obtained from a non-published manuscript. Ratings for powdery mildew were on a 1-5 rating scale and can be read in the file “Powdery mildew paper#1.doc”. Comparing trials which have not used the same rating scale will be done using a percentage change. 2013 Field trials Trials were conducted by the National Growers Alliance (NGA). The raw data were obtained from Lawrie Price. NGA data were formatted to be compliant with existing data rating and scales in the R script Cleaning historical data.R. 2.1 Summary of data PM.dat &lt;- import_data() kable( PM.dat %&gt;% group_by( trial_ref, year, location, trial_design, replicates, planting_date, emergence_date, first_sign_disease ) %&gt;% summarise(treatments = length(n_treatment)), caption = &quot;Description of Experiments&quot; ) # %&gt;% #commented as was redering empty, needs a look in (#tab:data_summary)Description of Experiments trial_ref year location trial_design replicates planting_date emergence_date first_sign_disease treatments AM1303 2013 Premer RCB 3 2013-12-28 NA 2013-02-28 11 AM1304 2013 Mary’s mount RCB 3 NA NA 2013-03-16 2 AM1304 2013 Mary’s mount RCB 4 NA NA 2013-03-16 9 AM1305 2013 Goolhi RB 4 NA NA 2013-03-25 11 BB1305 2013 Millmerran RCB 4 NA NA 2013-03-13 11 mung0001/01 2001 Bongeen_1 RB 5 2001-02-11 NA 2001-03-16 7 mung0102/01 2002 Bongeen_2 RB 3 NA NA 2002-02-07 12 mung0102/02 2002 Hermitage RB 3 2002-01-29 NA 2002-03-19 11 mung0102/02 2002 Hermitage RB 6 2002-01-29 NA 2002-03-19 2 mung0102/03 2002 Hermitage RB 3 2002-02-12 NA 2002-04-04 11 mung0102/03 2002 Hermitage RB 6 2002-02-12 NA 2002-04-04 2 mung0102/04 2002 Kingaroy RB 8 2002-02-12 NA 2002-04-05 3 mung0304/01 2002 Redvale RB 7 2004-02-21 NA 2004-03-23 3 mung0910/01 2010 Hermitage RB 3 2010-01-22 NA 2010-03-18 15 mung0910/02 2010 Kingaroy RB 3 2010-01-29 NA 2010-03-26 15 mung1011/01 2011 Hermitage RCB 3 2011-01-24 NA 2011-03-28 10 mung1011/01 2011 Hermitage RCB 6 2011-01-24 NA 2011-03-28 2 mung1011/02 2011 Kingaroy RCB 6 2011-02-02 NA 2011-03-22 20 mung1112/01 2012 Gatton RCB 3 2012-02-20 NA 2012-04-02 15 mung1112/02 2012 Kingaroy RCB 3 2012-02-03 NA 2012-03-12 15 mung1415/01 2015 Hermitage RCB 5 2015-01-19 2015-01-24 2015-03-16 6 mung1415/02 2015 Dalby RCB 5 2015-01-06 NA 2015-03-02 1 mung1516/01 2016 Hermitage RCB 4 2016-02-03 2016-02-12 2016-03-08 7 mung1516/02 2016 Kingaroy RCB 4 2016-02-11 2016-02-19 2016-03-09 7 mung1516/03 2016 Emerald RCB 4 2016-02-12 2016-02-18 2016-03-17 7 mung1617/01 2017 Hermitage RCB 3 2017-02-13 2017-02-20 2017-03-24 54 mung1617/02 2017 Missen Flats RCB 3 2017-01-27 2017-02-01 2017-03-07 54 mung1718/01 2018 Wellcamp RCB 3 2018-02-13 NA 2018-03-21 24 mung1819/01 2019 Hermitage RCB 6 2018-02-04 2018-02-11 2018-04-12 4 mung1819/02 2019 Hermitage RCB 5 2018-02-18 2018-02-25 2018-04-12 2 mung1819/02 2019 Hermitage RCB 6 2018-02-18 2018-02-25 2018-04-12 2 # kable_styling(fixed_thead = TRUE, full_width = TRUE) %&gt;% # scroll_box(width = &quot;900px&quot;, height = &quot;500px&quot;) 2.2 Powdery mildew ratings No powdery mildew colonies observed on any plant Small colonies in lower 1/3 of canopy, up to 75% of plants affected Colonies in lower 1/2 of canopy, &gt;75% of plants affected Colonies in lower 2/3 of canopy, up to 75% of plants affected Colonies in lower 2/3 of canopy, &gt;75% of plants affected Colonies in lower 2/3 of canopy, 100% of plants affected Colonies in lower 2/3 of canopy of 100% of plants, some plants with colonies also in top 1/3 of canopy Colonies to top of plant with &gt;75% of plants affected Colonies to top of plant with 100% of plants affected and heavy leaf drop 2.3 Experimental locations Experimental locations where data was sufficient to include in meta-analysis. experiment_sites &lt;- data.frame( location = c( &quot;Hermitage Research Station&quot;, &quot;Red Vale &amp; Kingaroy Research Station&quot;, &quot;Gatton&quot;, &quot;Emerald Agricultural College&quot;, &quot;Bongeen 1 &amp; 2&quot;, &quot;NGA - Premer&quot;, &quot;NGA - Millmerran&quot;, &quot;NGA - Marys Mount&quot;, &quot;NGA - Goolhi&quot;, &quot;Missen Flats&quot;, &quot;Wellcamp&quot; ), lat = c(-28.215 , -26.58, -27.56, -23.54, -27.51666, -31.43449, -27.923674, -31.0142, -31.00246, -27.905313, -27.564277), lon = c(152.1003, 151.83, 152.32, 148.19, 151.450,150.0052, 151.242706, 150.05018, 149.82507, 151.9772,151.867879) ) write.csv(experiment_sites,&quot;data/Mungbean_experiment_sites.csv&quot;, row.names = FALSE) leaflet(experiment_sites) %&gt;% addProviderTiles(&quot;Esri.WorldTopoMap&quot;) %&gt;% setView(lat = -27.31, lng = 150.456,zoom = 5) %&gt;% addMarkers(lng = ~lon, lat = ~lat, popup = ~htmlEscape(location)) "],
["weather-data.html", "3 Weather data", " 3 Weather data The mungbean DSS determines the need to spray on: 1. The presence of the disease 2. The forecasted maximum temperatures in the next seven days 3. The number of days over the next seven days with rainfall Below I am plotting the mean maximum temperatures over 7 days during the growing season at each mungbean trial site. The vertical lines indicate when powdery mildew was first observed in that season. Variation may exist in the sowing date of each trial. library(ggplot2) library(dplyr) source(&quot;R/import_data.R&quot;) PM.dat &lt;- import_data() # importing means yield and disease severity for each treatment within each powdery mildew trial on mungbean source(&quot;R/year2day.r&quot;) source(&quot;R/gg_color_hue_function.R&quot;) cols1 &lt;- gg_color_hue(4) # import data from SILO interpolated datasets downloaded from the QLD longpaddock website silo_war_Tmax &lt;- read.csv(&quot;./data/silo_war_Tmax.csv&quot;) silo_king_Tmax &lt;- read.csv(&quot;./data/silo_king_Tmax.csv&quot;) silo_gatton_Tmax &lt;- read.csv(&quot;./data/silo_gatton_Tmax.csv&quot;) silo_emerald_Tmax &lt;- read.csv(&quot;./data/silo_emerald_Tmax.csv&quot;) Lets have a look at the climate for the main field experiment sites 3.0.1 Kingaroy historical weather ## Warning: Removed 336 rows containing missing values (position_stack). ## Warning: Removed 336 rows containing missing values (geom_path). ## Warning: Removed 336 rows containing missing values (geom_path). 3.0.2 Hermitage historical weather ## Warning in year == levels(factor(Herm_FS$year)): longer object length is not a ## multiple of shorter object length ## Warning: Removed 52 rows containing missing values (position_stack). ## Warning: Removed 53 rows containing missing values (geom_path). ## Warning: Removed 53 rows containing missing values (geom_path). 3.0.3 Gatton historical weather ## Warning: Removed 186 rows containing missing values (position_stack). ## Warning: Removed 186 rows containing missing values (geom_path). ## Warning: Removed 186 rows containing missing values (geom_path). "],
["preliminary-analysis.html", "4 Preliminary Analysis 4.1 Explore and visualise Data", " 4 Preliminary Analysis 4.1 Explore and visualise Data Various factors have been studied in the previous experiments which may influence the following results. However unless stated the following plots and analyses were made disregarding effects from other factors not mentioned. Fungicide type Fungicide dose (varies only slightly within some fungicide types) Number of fungicide sprays Timing of fungicide spray/s relative to first sign of disease (i.e. when pathogen is present) Host cultivars (probably is a co-variate with season due to changing cultivars over time) Experiment location Row spacing In-crop rainfall Irrigated vs non-irrigated trials Mean daily temperature in the weeks following spray application Final disease rating Two pathogen species cause PM (new discovery in 2018) The data plotted below are from 26 field trials between (2001 - 2019) of which the details are described in Studies considered in meta-analysis section. All data explored below are a list of mean values from each treatment applied in each experiment. Some experiments have in-season observations of disease incidence and severity, however here we have summarised the data to show only the end of season observations. 4.1.1 Fungicides 4.1.1.1 Fungicide type Let’s explore how many different types of fungicide were used and at what frequency. PM_MB_means %&gt;% group_by(fungicide_ai, trial_ref) %&gt;% summarise() %&gt;% count(sort = TRUE) %&gt;% rename(Trials = n) %&gt;% ggplot(aes(x = reorder(fungicide_ai, Trials), y = Trials)) + xlab(&quot;Fungicide active ingredient&quot;) + ylab(&quot;N Trials&quot;) + geom_col() + scale_fill_usq() + ggtitle(label = &quot;Number of trials in which the\\nspecified fungicide was used&quot;) + scale_colour_usq() + theme_usq() + coord_flip() Tebuconazole and propiconazole could be pooled as a triazole or demethylation inhibitors (DMI) fungicide treatment. Amistar Xtra and Custodia are both contain strobilurin and triazole, however, they because they contain differing dose ratios (inverted) pooling may not be appropriate. Perhaps best way forward is to do an analysis of only the triazoles/DMIs. Then do another including azoxystrobin as a comparison. The primary focus of this research is the effect of fungicide on mitigating yield loss to disease. To reduce the affect of location and seasonal influences we will investigate the proportion of grain yield saved, relative to the no spray controls. First lets investigate the difference in the effect of the type of fungicide on proportion of yield saved. Proportion of yield saved is used in attempt to reduce variation between trials. PM_MB_means %&gt;% group_by(fungicide_ai, total_fungicide) %&gt;% summarise( n = length(prop_YG), lower_2.5 = quantile(prop_YG, na.rm = T, c(0.025)), median = median(prop_YG, na.rm = T), mean = mean(prop_YG, na.rm = T), upper_97.5 = quantile(prop_YG, na.rm = T, c(0.975)) ) %&gt;% filter(n &gt;= 5) %&gt;% # remove any fungicide groups with less than 5 observations arrange(desc(median)) %&gt;% kable(caption = &quot;Fungicide effect on proportion of yield gain.&quot;) %&gt;% kable_styling(fixed_thead = T, full_width = T) %&gt;% footnote(general = &quot;Fungicides with less than five observations were omitted from this table&quot;) (#tab:Fungicide_x_nSprays_tble2)Fungicide effect on proportion of yield gain. fungicide_ai total_fungicide n lower_2.5 median mean upper_97.5 propiconazole 2 27 0.2553184 0.4391669 0.4733431 0.7494674 200 g/L azoxystrobin + 80 g/L cyproconazole 2 12 -0.0406504 0.4300923 0.3200283 0.5680759 200 g/L azoxystrobin + 80 g/L cyproconazole 1 18 0.0106707 0.3257382 0.3115725 0.6589547 propiconazole 1 26 0.1703930 0.3062782 0.2963312 0.4053595 sulphur 2 34 0.1563882 0.2588933 0.3146122 0.6305019 carbendazim 2 5 0.1620553 0.1620553 0.1620553 0.1620553 tebuconazole 1 36 0.0820065 0.1239358 0.1950038 0.4288166 tebuconazole 2 36 -0.0228261 0.0440994 0.1347859 0.4398634 sulphur 1 30 -0.1325323 0.0148148 0.0337396 0.1700486 carbendazim 1 10 -0.0891679 -0.0114778 0.0004782 0.1002869 sulphur 3 7 -0.1026901 -0.0774749 -0.0435198 0.0445122 200 g/L tebuconazole + 120 g/L azoxystrobin 1 18 NA NA NaN NA 200 g/L tebuconazole + 120 g/L azoxystrobin 2 18 NA NA NaN NA control 0 46 NA NA NaN NA control NA 6 NA NA NaN NA tebuconazole 3 5 NA NA NaN NA Note: Fungicides with less than five observations were omitted from this table Lets visualise this in a plot for one and two sprays only. PM_MB_means %&gt;% mutate(fungicide_ai = as.factor(PM_MB_means$fungicide_ai)) %&gt;% filter(total_fungicide == 1 | total_fungicide == 2) %&gt;% filter( fungicide_ai != &quot;pyrazophos&quot; &amp; fungicide_ai != &quot;control&quot; &amp; fungicide_ai != &quot;benomyl&quot; &amp; fungicide_ai != &quot;Acibenzolar-S-methyl&quot;) %&gt;% mutate(fungicide_ai = factor(fungicide_ai, levels = c(&quot;carbendazim&quot;, &quot;pyraclostrobin&quot;, &quot;sulphur&quot;, &quot;200 g/L azoxystrobin + 80 g/L cyproconazole&quot;, &quot;tebuconazole&quot;, &quot;propiconazole&quot;, &quot;200 g/L tebuconazole + 120 g/L azoxystrobin&quot;))) %&gt;% ggplot(aes(y = prop_YG, x = fungicide_ai)) + facet_grid(rows = vars(total_fungicide)) + geom_boxplot(aes(fill = fungicide_ai, alpha = 0.5)) + geom_hline(aes(yintercept = 0), size = 0.5) + labs(y = &quot;Proportion of grain yield saved&quot;, title = &quot;Grain yield proportion saved\\ngrouped by Fungicide type&quot;) + theme_usq() + theme(legend.position = &quot;none&quot;) + coord_flip() ## Warning: Removed 228 rows containing non-finite values (stat_boxplot). There is a small yield effect when applying fungicide and it is unclear how much a second spray improves yield saved. Interestingly Sulphur sprays might be worth investigating when sprayed twice. 4.1.1.2 Fungicide Doses We should check that all fungicide doses that were used were roughly the same if we are to compare between trials were dose might be different. PM_MB_means %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot;| fungicide_ai == &quot;propiconazole&quot;) %&gt;% select(trial_ref, year, location, first_sign_disease, fungicide_ai, dose_ai.ha, total_fungicide) %&gt;% ggplot(aes(x = as.factor(dose_ai.ha), fill = fungicide_ai)) + xlab(&quot;Dose (g ai/ha)&quot;) + ggtitle(label = &quot;Total number of treatments for each respective tebuconazole dose&quot;) + geom_bar() + facet_grid(rows = vars(fungicide_ai))+ scale_fill_usq() + scale_colour_usq() + theme_usq() All trials that used tebuconazole used approximately the same dose. Dose of the active ingredient ranged from 62.35 g per hectare to 60 g per hectare. There is a large amount of variation in the propiconazole dose, lets inspect the difference in yields for each dose. PM_MB_means %&gt;% filter(fungicide_ai == &quot;propiconazole&quot;) %&gt;% ggplot(aes(x = relevel(as.factor(dose_ai.ha),&quot;62.5&quot;), y = prop_YG)) + xlab(&quot;Dose (g ai/ha)&quot;) + ggtitle(label = &quot;Yield for each respective propiconazole dose&quot;) + geom_boxplot() + scale_fill_usq() + scale_colour_usq() + theme_usq() ## Warning: Removed 48 rows containing non-finite values (stat_boxplot). This dose effect should be acknowledged in the meta-analysis. How many treatments of each dose have been investigated per trial? table(as.character(PM_MB_means[PM_MB_means$fungicide_ai == &quot;propiconazole&quot;,]$trial_ref), PM_MB_means[PM_MB_means$fungicide_ai == &quot;propiconazole&quot;,]$dose_ai.ha) ## ## 62.5 125 ## AM1303 3 0 ## AM1304 3 0 ## AM1305 3 0 ## BB1305 3 0 ## mung1112/01 2 2 ## mung1112/02 2 2 ## mung1617/01 0 15 ## mung1617/02 0 15 ## mung1718/01 0 6 Two trials show both doses were applied in the same trial, mung1112/01 and mung1112/02. Let look at the difference in proportion of yield saved in these trials. boxplot(prop_YG ~ dose_ai.ha, data = PM_MB_means[(PM_MB_means$trial_ref == &quot;mung1112/01&quot; | PM_MB_means$trial_ref == &quot;mung1112/02&quot;) &amp; PM_MB_means$fungicide_ai == &quot;propiconazole&quot;,]) This plot plot, however, indicated the previous plot might be skewed by high yielding trials. 4.1.1.3 Number of fungicide sprays Lets look at the frequency of sprays per fungicide. table(PM_MB_means$fungicide_ai, PM_MB_means$total_fungicide) ## ## 0 1 2 3 7 ## 200 g/L azoxystrobin + 80 g/L cyproconazole 0 18 12 4 0 ## 200 g/L tebuconazole + 120 g/L azoxystrobin 0 18 18 0 0 ## Acibenzolar-S-methyl 0 0 1 0 0 ## benomyl 0 0 1 0 0 ## carbendazim 0 10 5 0 0 ## control 46 0 0 0 0 ## propiconazole 0 26 27 3 0 ## pyraclostrobin 0 4 4 0 0 ## pyrazophos 0 0 1 0 0 ## sulphur 0 30 34 7 3 ## sulphur (SC) 0 0 0 0 0 ## sulphur (Ultra SC) 0 0 0 0 0 ## sulphur (WP) 0 0 0 0 0 ## tebuconazole 0 36 36 5 0 4.1.1.4 Timing of fungicide sprays When are fungicides sprayed in relation to first sign. PM_MB_means %&gt;% mutate(s1_DfromFS = fungicide_application_1 - first_sign_disease, s2_DfromFS = fungicide_application_2 - first_sign_disease, s3_DfromFS = fungicide_application_3 - first_sign_disease, s4_DfromFS = fungicide_application_4 - first_sign_disease, s5_DfromFS = fungicide_application_5 - first_sign_disease) %&gt;% gather(key = spray, value = n_days, s1_DfromFS, s2_DfromFS, s3_DfromFS, s4_DfromFS, s5_DfromFS)%&gt;% ggplot(aes(x = spray, y = n_days))+ geom_violin() + scale_x_discrete(labels = c(&quot;First\\nspray&quot;, &quot;Second\\nspray&quot;,&quot;Third\\nspray&quot;,&quot;Fourth\\nspray&quot;,&quot;Fifth\\nspray&quot;))+ theme_usq() ## Don&#39;t know how to automatically pick scale for object of type difftime. Defaulting to continuous. ## Warning: Removed 1282 rows containing non-finite values (stat_ydensity). 4.1.2 Mungbean cultivars In general, the mungbean varieties have the following resistance to powdery mildew. Berken: Highly susceptible Crystal: Susceptible Jade: Moderately susceptible Let’s view a stacked bar plot of the number of sprays for both demethylation inhibitors, tebuconazole and propiconazole against each cultivar. PM_MB_means %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot;| fungicide_ai == &quot;propiconazole&quot;)%&gt;% group_by(host_genotype, fungicide_ai, trial_ref) %&gt;% summarise() %&gt;% count() %&gt;% rename(Treatments = n) %&gt;% ggplot(aes(x = host_genotype, y = Treatments, fill = fungicide_ai)) + xlab(&quot;Cultivar&quot;) + ylab(&quot;N Trials&quot;) + ggtitle(label = &quot;Cultivars used in either tebuconazole or propiconazole trials&quot;) + geom_col() + scale_fill_usq() + scale_colour_usq() + theme_usq() 4.1.2.1 Genotype yield variability Does host cultivar significantly impact the yield? Lets look at the volatility in yields to see if any cultivar yields better or has greater tolerance to powdery mildew. Below we plot distributions of mean trial yields for each cultivar. First lets look at overall yields for each cultivar , where trial is not a factor, for all treatments (spray and no spray). # this could be converted into a shiny app as a chunk. Make each input for the function a shiny option # Outputs the table and graph source(&quot;R/yield_volatility.r&quot;) #function to investigate the volatility in yields # Volitility is the range between the upper and lower 97.5 and 2.5 % quartiles YV1 &lt;- yield_volatility(genotype_by_trial = FALSE, control_only = FALSE) YV1[[2]] ## Warning: Removed 12539 rows containing non-finite values (stat_density). YV1[[3]] ## # A tibble: 4 x 2 ## trial volatility ## &lt;fct&gt; &lt;dbl&gt; ## 1 Berken 1.31 ## 2 Crystal 1.39 ## 3 G. Diam 0.477 ## 4 Jade 2.34 Now lets look at overall yields for each cultivar, where trial is not a factor, in only the no spray treatments. YV2 &lt;- yield_volatility(genotype_by_trial = FALSE, control_only = TRUE) YV2[[2]] ## Warning: Removed 1357 rows containing non-finite values (stat_density). YV2[[3]] ## # A tibble: 4 x 2 ## trial volatility ## &lt;fct&gt; &lt;dbl&gt; ## 1 Berken 1.24 ## 2 Crystal 1.25 ## 3 G. Diam 0.306 ## 4 Jade 2.20 Volatility of the cultivars are fairly similar when trial is not considered as a factor (when we inspect plots of all treatments and only spray treatments). Green diamond shows little volatility however this cultivar is only featured in 1 trials. Lets examine the same plots as above but only for the most commonly used trial site, Hermitage. YV1_herm &lt;- yield_volatility(genotype_by_trial = FALSE, control_only = FALSE, location = &quot;Hermitage&quot;) YV1_herm[[2]] ## Warning: Removed 8051 rows containing non-finite values (stat_density). Jade shows a large amount of volatility, excluding Green Diamond, Crystal shows the next least volatility. Lets take a closer look at Crystal with spray management treatments and without. YV1_crystal &lt;- yield_volatility(genotype = &quot;Crystal&quot;,control_only = FALSE) YV1_crystal[[2]] ## Warning: Removed 73 rows containing non-finite values (stat_density). YV1_crystal &lt;- yield_volatility(genotype = &quot;Crystal&quot;,control_only = TRUE) YV1_crystal[[2]] ## Warning: Removed 1 rows containing non-finite values (stat_density). There is a lot of variation between field trials for Crystal, but little variation within field trials. Lets look at Jade, to see if it differs. YV2_crystal &lt;- yield_volatility(&quot;Jade&quot;,control_only = FALSE) YV2_crystal[[2]] ## Warning: Removed 12475 rows containing non-finite values (stat_density). For Jade there is high variation between trials and with in. Perhaps indicating lower tolerance. Lets look at the same plot with data only from no spray controls to see if the variation is the same. YV3_crystal &lt;- yield_volatility(&quot;Jade&quot;,control_only = TRUE) YV3_crystal[[2]] ## Warning: Removed 1362 rows containing non-finite values (stat_density). There seems to be a noticeable shift in the probability curves between the two plots. Indicating that the tolerance in Jade may not as good as Crystal. A comparison between the fungicide efficacy for reducing powdery mildew severity and fungicide efficacy at mitigating yield loss. Overall there seems to be an influence of cultivar however this variation is not as distinct as the variation between trials. 4.1.3 Row spacing Some experiments were designed to investigate the effect of row spacing and plant density on powdery mildew disease. The results showed that the row spacing had no statistically significant effect on powdery mildew, but narrower rows in most cases increased yield significantly. This finding has also been shown by Kerry McKenzie’s work as well. Eight trials used a row spacing of 0.75 meters and tebuconazole as an active ingredient (AI). PM_MB_means %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot; | fungicide_ai == &quot;propiconazole&quot;) %&gt;% group_by(fungicide_ai, row_spacing, trial_ref) %&gt;% summarise() %&gt;% count() %&gt;% rename(Trials = n) %&gt;% ggplot(aes(x = as.factor(row_spacing), y = Trials)) + xlab(&quot;Row Spacing (m)&quot;) + ylab(&quot;N Trials&quot;) + ggtitle(label = &quot;Trial row spacing using tebuconazole&quot;) + geom_col(aes(fill = fungicide_ai), position = &quot;dodge&quot;) + scale_fill_usq(name = &quot;Fungicide AI&quot;) + theme_usq() PM_MB_means %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot;, row_spacing == 0.75) %&gt;% glimpse() ## Observations: 35 ## Variables: 49 ## $ trial_ref &lt;fct&gt; mung1011/01, mung1011/01, mung1011/02, mung... ## $ year &lt;fct&gt; 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2... ## $ location &lt;fct&gt; Hermitage, Hermitage, Kingaroy, Kingaroy, K... ## $ host_genotype &lt;fct&gt; Berken, Crystal, Berken, Crystal, Berken, C... ## $ trial_design &lt;fct&gt; RCB, RCB, RCB, RCB, RCB, RCB, RCB, RCB, RCB... ## $ plot_length.m. &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12,... ## $ plot_width.m. &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4... ## $ plant_density &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, , , , , NA,... ## $ row_spacing &lt;dbl&gt; 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0... ## $ replicates &lt;dbl&gt; 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 5, 5, 5... ## $ planting_date &lt;date&gt; 2011-01-24, 2011-01-24, 2011-02-02, 2011-0... ## $ emergence_date &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ flowering_date &lt;date&gt; 2011-03-22, 2011-03-22, NA, NA, NA, NA, NA... ## $ pod_fill_date &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ mid_late_pod_fill &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ first_sign_disease &lt;date&gt; 2011-03-28, 2011-03-28, 2011-03-22, 2011-0... ## $ trade_name &lt;fct&gt; Folicur, Folicur, Folicur, Folicur, Folicur... ## $ fungicide_ai &lt;fct&gt; tebuconazole, tebuconazole, tebuconazole, t... ## $ dose_ai.ha &lt;dbl&gt; 62.35, 62.35, 62.35, 62.35, 62.35, 62.35, 6... ## $ n_treatment &lt;int&gt; 11, 4, 14, 4, 17, 7, 20, 10, 2, 3, 2, 3, 2,... ## $ fungicide_application_1 &lt;date&gt; 2011-03-28, 2011-03-28, 2011-03-23, 2011-0... ## $ fungicide_application_2 &lt;date&gt; NA, NA, NA, NA, 2011-04-13, 2011-04-13, 20... ## $ fungicide_application_3 &lt;date&gt; NA, NA, NA, NA, NA, NA, 2011-04-12, 2011-0... ## $ fungicide_application_4 &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ fungicide_application_5 &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ fungicide_application_6 &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ fungicide_application_7 &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA... ## $ total_fungicide &lt;int&gt; 1, 1, 1, 1, 2, 2, 3, 3, 1, 2, 1, 2, 3, 1, 2... ## $ harvest_date &lt;date&gt; 2011-04-25, 2011-04-25, NA, NA, NA, NA, NA... ## $ final_assessment &lt;date&gt; 2011-04-11, 2011-04-11, 2011-05-11, 2011-0... ## $ PM_final_severity &lt;dbl&gt; 2.000000, 2.333333, 5.333333, 4.333333, 3.3... ## $ rating_scale &lt;fct&gt; &quot;&quot;1-9&quot;&quot;, &quot;&quot;1-9&quot;&quot;, &quot;&quot;1-9&quot;&quot;, &quot;&quot;1-9&quot;&quot;, &quot;&quot;1-9&quot;&quot;... ## $ disease_error &lt;dbl&gt; 0.0000000, 0.5773503, 1.1547005, 0.5773503,... ## $ D_error_type &lt;fct&gt; stdev, stdev, stdev, stdev, stdev, stdev, s... ## $ grain_yield.t.ha. &lt;dbl&gt; 1.769312, 1.543895, 1.058570, 0.730195, 0.9... ## $ raw_graded &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, , , , , NA,... ## $ Y_Msquare &lt;dbl&gt; 0.12381667, 0.12381667, 0.05400643, 0.05400... ## $ yield_error &lt;dbl&gt; 0.19441956, 0.12832602, 0.08244381, 0.18686... ## $ Y_error_type &lt;chr&gt; &quot;stdev&quot;, &quot;stdev&quot;, &quot;stdev&quot;, &quot;stdev&quot;, &quot;stdev&quot;... ## $ yield_gain &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, 0.072, 0.21... ## $ prop_YG &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, 0.09756098,... ## $ raw_data_avail &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, no,... ## $ comments &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, final asses... ## $ days_harvest.planting &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, -40959, -40... ## $ AUDPC_m &lt;dbl&gt; 10.50000, 14.00000, 98.66667, 46.83333, 60.... ## $ AUDPC_sd &lt;dbl&gt; 0.000000, 6.062178, 9.358597, 18.236867, 6.... ## $ AUDPS_m &lt;dbl&gt; 21.00000, 28.00000, 144.66667, 81.66667, 84... ## $ AUDPS_sd &lt;dbl&gt; 0.000000, 12.124356, 14.571662, 17.616280, ... ## $ Inc_Ms &lt;dbl&gt; 1568.000, 1568.000, 15945.177, 15945.177, 1... Lets plot the row spacing treatments for the response variables yield and disease severity. The main questions are: - Were there any statistical differences for mungbean yield or powdery mildew severity between row spacing treatments? - Can we pool certain row spacing that have no significant difference? # Which row spacing leads to the higher disease severity PM_MB_means %&gt;% filter(year == 2017 | year == 2018) %&gt;% filter(fungicide_ai == &quot;control&quot;) %&gt;% ggplot(aes(y = PM_final_severity, x = factor(row_spacing))) + geom_boxplot() + # geom_smooth()+ # scale_y_continuous(limits = c(-5, 15)) + theme_usq()+ ggtitle(&quot;Powdery mildew variation between different row spacing&quot;) # Which row spacing leads to the higher disease severity PM_MB_means %&gt;% filter(year == 2017 | year == 2018) %&gt;% filter(fungicide_ai == &quot;control&quot;) %&gt;% ggplot(aes(y = PM_final_severity, x = factor(row_spacing))) + geom_boxplot() + # geom_smooth()+ # scale_y_continuous(limits = c(-5, 15)) + theme_usq()+ facet_grid(cols = vars(location))+ ggtitle(&quot;Powdery mildew variation between different row spacing&quot;) In the Wellcamp site, wider row spacing reduces PM severity, the other sites it seems there was not enough variation to make a distinction between row spacing treatments. # Which row spacing leads to the higher yeild potential PM_MB_means %&gt;% filter(year == 2017| year == 2018) %&gt;% # filter(Fungicide == &quot;control&quot;) %&gt;% ggplot(aes( y = as.numeric(grain_yield.t.ha.), x = row_spacing, colour = location )) + geom_smooth(method = &quot;gam&quot;) + geom_jitter(width = 0.01) + # scale_y_continuous(limits = c(-5,15))+ theme_usq()+ ggtitle(&quot;Grain yield results for different row spacing at three locations&quot;)+ xlab(&quot;Row spacing (m)&quot;)+ ylab(&quot;Grain yield - tonne per hectare&quot;) The plots seem to imply when yield is limited, presumably by other abiotic factors, there is no effect of row spacing on yield, like in the Hermitage trial. However, if the average yield is more than approximately 1 t/ha then smaller row spacing has the potential to provide greater yield per hectare. Overall row spacing may influence both powdery mildew severity and yield. 4.1.4 Yield vs in-season rain In crop rain could be a significant factor which contributes to the end of season grain yield. To investigate this effect I will use a linear model (GY ~ SR) where seasonal rainfall represents a specific time frame with respect to planting time. Multiple time frames were tested from 20 days prior to planting, to 100 days after planting. The multiple time frames were tested by a loop over the dates at the start of the season (to 90 days after planting) to find which date fits the best linear model for grain weight and in-crop rainfall. The code for this process was moved to be contained within it’s own script and can be run as a job as it can take a long time. To speed up the computation I split the script into four, ran the jobs and bound the data into one frame. The output of the script is saved with the prefix lmInSeasonRainfall followed by the time windows the model is run. For example lmInSeasonRainfall_20.40_50.80.csv holds the model results for start days between 20 and 40 days after planting to end window dates between 50 and 80 days after planting. # The four data files were created from four scripts run as four jobs in Rstudio # when the four jobs are finished they can be imported and combined into one data.frame # source(Rainfall_x_cropYield_s-10.09_e30.65.R) # source(Rainfall_x_cropYield_s-10.09_e65.100.R) # source(Rainfall_x_cropYield_s10.30_e30.65.R) # source(Rainfall_x_cropYield_s10.30_e65.10.R) lm_rain1 &lt;- read.csv(&quot;data/lmInSeasonRainfall_-10.09_30.64.csv&quot;,stringsAsFactors = FALSE) lm_rain2 &lt;- read.csv(&quot;data/lmInSeasonRainfall_-10.09_65.100.csv&quot;,stringsAsFactors = FALSE) lm_rain3 &lt;- read.csv(&quot;data/lmInSeasonRainfall_10.30_30.64.csv&quot;,stringsAsFactors = FALSE) lm_rain4 &lt;- read.csv(&quot;data/lmInSeasonRainfall_10.30_65.100.csv&quot;,stringsAsFactors = FALSE) lm_rain &lt;- rbind(lm_rain1,lm_rain2,lm_rain3,lm_rain4) Now we have read in the data from the previously computed models lets find the linear model which has: - The lowest P value - the highest adjusted r squared value lm_rain[which(lm_rain$lm_pval == min(lm_rain$lm_pval)),] ## start_day end_day lm_pval lm_rsquared lm_adj_rsquared ## 2202 14 67 0.000523266 0.6800095 0.6509195 lm_rain[which(lm_rain$lm_rsquared == max(lm_rain$lm_rsquared)),] ## start_day end_day lm_pval lm_rsquared lm_adj_rsquared ## 2202 14 67 0.000523266 0.6800095 0.6509195 lm_rain[which(lm_rain$lm_adj_rsquared == max(lm_rain$lm_adj_rsquared)),] ## start_day end_day lm_pval lm_rsquared lm_adj_rsquared ## 2202 14 67 0.000523266 0.6800095 0.6509195 To visualise the model fits we will use a heat map to describe how the models faired in relation to the rainfall windows. log of the p value was used to improve the resolution of small very small p values. ggplot(lm_rain, aes(x = start_day, y = end_day, z = log(lm_pval)))+ geom_raster(aes(fill = log(lm_pval)), interpolate = TRUE)+ geom_contour(bins = 15, colour = &quot;white&quot;)+ geom_point(data = lm_rain[which(lm_rain$lm_pval == min(lm_rain$lm_pval)),], aes(x = start_day, y = end_day), colour =&quot; red&quot;)+ scale_fill_distiller(palette =&quot;RdBu&quot;, direction = -1) ggplot(lm_rain, aes(x = start_day, y = end_day, z = lm_rsquared))+ geom_raster(aes(fill = lm_rsquared), interpolate = TRUE)+ geom_contour(bins = 15, colour = &quot;white&quot;)+ geom_point(data = lm_rain[which(lm_rain$lm_rsquared == max(lm_rain$lm_rsquared)),], aes(x = start_day, y = end_day), colour =&quot; red&quot;)+ scale_fill_distiller(palette =&quot;RdBu&quot;) ggplot(lm_rain, aes(x = start_day, y = end_day, z = lm_adj_rsquared))+ geom_raster(aes(fill = lm_adj_rsquared), interpolate = TRUE)+ geom_contour(bins = 15, colour = &quot;white&quot;)+ geom_point(data = lm_rain[which(lm_rain$lm_rsquared == max(lm_rain$lm_rsquared)),], aes(x = start_day, y = end_day), colour =&quot; red&quot;)+ scale_fill_distiller(palette =&quot;RdBu&quot;) The approximate period when in-crop rainfall impacts the most on the mean harvest is between 14 - 67 days after planting. 4.1.5 Season range and first incidence Mungbean is a summer crop and powdery mildew is requires cool conditions to establish. Therefore the disease can be avoided by planting early in summer or spring, avoiding cooler temperatures at the end of some seasons. Can we visualise when PM is most likely to establish over the calender year. I’ll build a plot of horizontal lines indicating the season length and use a dot on the line to indicating the day of the year first sign was observed for that trial. # Create the data frame for the plot season_dates &lt;- PM_MB_means %&gt;% group_by(trial_ref)%&gt;% summarise(Planting_date = unique(planting_date), Harvest_date = unique(harvest_date), First_sign_PM = unique(first_sign_disease), season_length = as.integer(as.Date(unique(harvest_date)) - as.Date(unique(planting_date))) ) # function to extract date from the year # format should be Universal time format source(&quot;R/year2day.r&quot;) season_dates$Planting_day &lt;- unlist(lapply(season_dates$Planting_date,year2day)) season_dates$Disease_day &lt;- unlist(lapply(season_dates$First_sign_PM,year2day)) season_dates$Harvest_day &lt;- season_dates$Planting_day + season_dates$season_length season_dates[1,&quot;Planting_day&quot;] &lt;- year2day(as.Date(&quot;2012-02-28&quot;)-7) # planted in december and emerged in February, Assuming due to lack of rain or recording error. Using 7 days prior to emergence day as planting day first_day_month &lt;- c(0, 31, 59, 90, 120, 151, 181, 211, 243, 273) axis_labels_date &lt;- c(format(Sys.Date() - year2day(Sys.Date()) + first_day_month[1], &quot;%b-%d&quot;), # Jan format(Sys.Date() - year2day(Sys.Date()) + first_day_month[2], &quot;%b-%d&quot;), # Feb format(Sys.Date() - year2day(Sys.Date()) + first_day_month[3], &quot;%b-%d&quot;), # March format(Sys.Date() - year2day(Sys.Date()) + first_day_month[4], &quot;%b-%d&quot;), # April format(Sys.Date() - year2day(Sys.Date()) + first_day_month[5], &quot;%b-%d&quot;), # May format(Sys.Date() - year2day(Sys.Date()) + first_day_month[6], &quot;%b-%d&quot;), # June format(Sys.Date() - year2day(Sys.Date()) + first_day_month[7], &quot;%b-%d&quot;), # July format(Sys.Date() - year2day(Sys.Date()) + first_day_month[8], &quot;%b-%d&quot;), # August format(Sys.Date() - year2day(Sys.Date()) + first_day_month[9], &quot;%b-%d&quot;), # Sept format(Sys.Date() - year2day(Sys.Date()) + first_day_month[10], &quot;%b-%d&quot;) # October ) # reorder the factors so they will appear in chronilogical order # I used First sign because all trials have recorded this season_dates$trial_ref &lt;- factor(season_dates$trial_ref, levels = levels(season_dates$trial_ref)[rev(order(season_dates$First_sign_PM))]) # Plot season_dates %&gt;% ggplot()+ geom_pointrange(aes(x = trial_ref, y = Disease_day, ymin = Planting_day, ymax = Harvest_day))+ scale_y_continuous( limits = c(0, max(season_dates$Planting_day + season_dates$season_length, na.rm = TRUE)), labels = axis_labels_date, breaks = first_day_month )+ geom_point(aes(x = trial_ref, y = Disease_day))+ coord_flip()+ ggtitle(&quot;Season length and when powdery mildew was first spotted\\nin each respective trial&quot;) ## Warning: Removed 7 rows containing missing values (geom_pointrange). In most years, regardless of the age of the crop, powdery mildew establishes in March. 4.1.5.1 Effect of Fungicide Fungicide effect on proportional yield gain with respect to time of application First lets look at the quantiles for each fungicide irrespective of other factors. We will focus on proportional yield gain, compared to no treatment control, as this should partially correct for some spatial and seasonal effects. PM_MB_means %&gt;% group_by(fungicide_ai) %&gt;% summarise( n = length(prop_YG), lower_2.5 = quantile(prop_YG, na.rm = T, c(0.025)), median = median(prop_YG, na.rm = T), mean = mean(prop_YG, na.rm = T), upper_97.5 = quantile(prop_YG, na.rm = T, c(0.975)) ) %&gt;% filter(n &gt;= 5) %&gt;% # remove any fungicide groups with less than 5 observations arrange(desc(median)) %&gt;% kable(caption = &quot;Fungicide effect on proportion of yield gain&quot;) %&gt;% kable_styling(fixed_thead = T, full_width = T) (#tab:fungicide_proportion_yield)Fungicide effect on proportion of yield gain fungicide_ai n lower_2.5 median mean upper_97.5 200 g/L azoxystrobin + 80 g/L cyproconazole 34 -0.0390244 0.3541935 0.3158004 0.6525632 propiconazole 56 0.1771680 0.3293134 0.3848372 0.7332224 tebuconazole 77 -0.0202174 0.0891532 0.1588730 0.4596538 sulphur 74 -0.1324247 0.0636856 0.0954546 0.5070321 carbendazim 15 -0.0871234 0.0473458 0.0408725 0.1578639 200 g/L tebuconazole + 120 g/L azoxystrobin 36 NA NA NaN NA control 52 NA NA NaN NA pyraclostrobin 8 NA NA NaN NA # plot table as a box plot PM_MB_means %&gt;% filter( fungicide_ai == c( &quot;200 g/L tebuconazole + 120 g/L azoxystrobin&quot; , &quot;200 g/L azoxystrobin + 80 g/L cyproconazole&quot;, &quot;tebuconazole&quot;, &quot;propiconazole&quot;, &quot;sulphur&quot; ) ) %&gt;% ggplot(aes(y = prop_YG, x = fungicide_ai)) + geom_boxplot() + geom_hline(aes(yintercept = 0), size = 0.5) + #scale_fill_discrete(labels = c(&quot;15-7 days before&quot;,&quot;same day&quot;,&quot;one day after&quot;,&quot;8-9 days after&quot;,&quot;13-19 days after&quot;))+ labs(x = &quot;Proportion of grain yield saved&quot;, title = &quot;Grain yield proportion saved grouped by\\nfungicide type&quot;) + theme( panel.grid.major = element_line(colour = &quot;grey80&quot;), panel.grid.minor = element_line(colour = &quot;grey50&quot;), panel.background = element_rect(fill = NA) ) + guides(fill = guide_legend(title = &quot;Fungicide&quot;)) + coord_flip() ## Warning: Removed 46 rows containing non-finite values (stat_boxplot). There was some hope groups of fungicide could be combined, i.e. propiconazole and tebuconazole, however it seems that they have different efficacies. Let us look to see if there is anything skewing the above. We need to also define the relationship between yield loss and disease severity. When exploring this data we should look primarily at the no spray control plots PM_MB_means %&gt;% filter(fungicide_ai == &quot;control&quot;) %&gt;% ggplot(aes(x = PM_final_severity, y = grain_yield.t.ha.)) + geom_point()+ geom_smooth(method = &quot;lm&quot;) ## Warning: Removed 3 rows containing non-finite values (stat_smooth). ## Warning: Removed 3 rows containing missing values (geom_point). From the data we have it is difficult to determine if there is an association between powdery mildew severity and grain yield. "],
["prepare-data-for-meta-anlysys.html", "5 Prepare data for meta-anlysys 5.1 Set environment and import data 5.2 Standardising sample variance 5.3 Yield saving 5.4 Reduce data set to required variables", " 5 Prepare data for meta-anlysys 5.1 Set environment and import data library(dplyr) library(readr) library(kableExtra) library(ggplot2) library(agricolae) source(&quot;R/import_data.R&quot;) PM_MB_means &lt;- import_data() # Calculate AUDPC using final severity and first sign of disease - 7 days source(&quot;R/AUDPC_for_single_obs.R&quot;) 5.2 Standardising sample variance Meta-analyses use variance from the data to calculate the effect sizes. The type of variance needs to be the same across all the data incorporated in the meta-analysis. We are narrowing the meta-analysis to only include demethylation inhibitors, tebuconazole and propiconazole. Within studies which have used these fungicides, what type of error was reported? PM_MB_means %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot; | fungicide_ai == &quot;propiconazole&quot;, row_spacing == 0.75) %&gt;% group_by(trial_ref, location, Y_error_type, fungicide_ai) %&gt;% summarise(DMI_trts = length(Y_error_type))%&gt;% arrange(Y_error_type)%&gt;% kable(caption = &quot;Number of treatments for each trial and the error type reported&quot;) %&gt;% kable_styling(fixed_thead = T) %&gt;% footnote(general = &quot;DMI - demethylation inhibitors (tebuconazole and propiconazole).&quot;) (#tab:variance_types)Number of treatments for each trial and the error type reported trial_ref location Y_error_type fungicide_ai DMI_trts mung1112/02 Kingaroy lsd (P=0.05) propiconazole 4 mung1112/02 Kingaroy lsd (P=0.05) tebuconazole 2 mung1011/01 Hermitage stdev tebuconazole 2 mung1011/02 Kingaroy stdev tebuconazole 6 mung1415/01 Hermitage stdev tebuconazole 5 mung1516/01 Hermitage stdev tebuconazole 6 mung1516/02 Kingaroy stdev tebuconazole 6 mung1112/01 Gatton NA propiconazole 4 mung1112/01 Gatton NA tebuconazole 2 mung1516/03 Emerald NA tebuconazole 6 Note: DMI - demethylation inhibitors (tebuconazole and propiconazole). The experiment summaries report either standard deviation, least square differences or no error term (NA). Below we will convert LSD and standard deviation to sample variance. In addition, we need to impute variances for the trials which did not report any form of variance (NA). 5.2.1 Converting least-squares to sample variance Trials &lt;- PM_MB_means %&gt;% filter( Y_error_type == &quot;lsd (P=0.05)&quot;) %&gt;% select(trial_ref) %&gt;% distinct() The following code attempts to convert ‘least square differences’ (LSD) to sampling variance as per the method in Nugugi et.al (2011). Ideas for using a T-critical value of 1.697 came from reading a statisics-how-to website. A table of T-critical values was consulted where 30 degrees of freedom within experiment was used to find the ‘T-crit’ value of 1.697. Calculating sampling variance from mean squared error Paul et al. (2008) for (Trial2012 in Trials$trial_ref) { Tcrit &lt;- 1.697 # 0.05 and DFw = 30 # T critical value for which there is significant difference between two groups; This value is the same for both trials &quot;mung1112/01&quot; and &quot;mung1112/02&quot; DFw &lt;- sum(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates) - length(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates) # degrees of freedom within groups LSD &lt;- PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$yield_error[1] V_yield &lt;- (PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates[1] * (LSD / Tcrit) ^ 2) / 2 # method - Nugugi et.al (2011) DOI: 10.1094/phyto-08-10-0221 for (j in seq_along(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates)) { if (j == 1) { Sv &lt;- vector(length = length(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates)) } # reset Sv vector if this is the first loop ###############################################3 # ___ Adjusting formula to suit our data_______ # # Sv[j]^2 = MSE/(PM_MB_means[PM_MB_means$trial_ref == Trial2012,]$replicates[j] * # PM_MB_means[PM_MB_means$trial_ref == Trial2012,]$grain_yield.t.ha[j]) # Balance equation # Sv[j] = V_yield / # (PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates[j] * # as.numeric(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$grain_yield.t.ha[j])^2) # ################################################################# Sv[j] = V_yield / PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates[j] # Sv[j] = MSE / # (PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$replicates[j] * # as.numeric(PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$grain_yield.t.ha[j])^2) # ### -&gt; This formula should be V = (n * (LSD/1.96)^2) / 2 } # and replacing the values in the dataset PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$yield_error &lt;- Sv PM_MB_means[PM_MB_means$trial_ref == Trial2012, ]$Y_error_type &lt;- &quot;SamplingVariance&quot; } 5.2.2 Converting standard deviation to sample variance Now to estimate the variance from the standard deviation # subset data by those which describe the Yield error with standard deviation Trials &lt;- PM_MB_means %&gt;% filter(Y_error_type == &quot;stdev&quot;) %&gt;% select(trial_ref) %&gt;% distinct() # calculate the Sampling variance from the standard deviation # standard error of the mean equals the standard deviation divided by the square root of the number of samples # Sv &lt;- sem^2 &lt;- stdev/sqrt(n) # Sampling variance equals the square of the standard error. # Sv &lt;- (stdev/sqrt(n))^2 # Therefore for (j in seq_along(PM_MB_means[PM_MB_means$trial_ref %in% Trials$trial_ref,]$yield_error)) { if (j == 1) { Sv &lt;- vector(length = length(PM_MB_means[PM_MB_means$trial_ref %in% Trials$trial_ref,]$yield_error)) }# create empty vector at first iteration with length of j Sv[j] = (PM_MB_means[PM_MB_means$trial_ref %in% Trials$trial_ref,]$yield_error[j]) ^ 2 } # and replacing the values in the dataset PM_MB_means[PM_MB_means$trial_ref %in% Trials$trial_ref,]$yield_error &lt;- Sv PM_MB_means[PM_MB_means$trial_ref %in% Trials$trial_ref,]$Y_error_type &lt;- &quot;SamplingVariance&quot; 5.3 Yield saving Yield saving and Yield saving proportional to the control. Data from 355 trials were collected and the means of each treatment calculated (R/Cleaning historical data.R). These data were combined into one file 1902 powdery mildew-Mungbean - Collated means.csv. PM_MB_means$grain_yield.t.ha. &lt;- as.numeric(PM_MB_means$grain_yield.t.ha.) # NAs produced due to some cells having text description to why there is no specific data for (i in unique(PM_MB_means$trial_ref)) { dat1 &lt;- PM_MB_means[PM_MB_means$trial_ref == i, ] if (any(is.na(unique(dat1$row_spacing)))) { warning( paste( unique(dat1$trial_ref), &quot;at&quot;, unique(dat1$location), &quot;in year&quot;, unique(dat1$year), &quot;has unknown row.spacing (NA)\\n &#39;yield_gain&#39; and &#39;proportional yield gain&#39; not calculated\\n&quot; ) ) next() } for (j in unique(dat1$row_spacing)) { dat2 &lt;- dat1[dat1$row_spacing == j, ] controlY &lt;- mean(dat2[dat2$fungicide_ai == &quot;control&quot;, &quot;grain_yield.t.ha.&quot;]) dat2$yield_gain &lt;- dat2$grain_yield.t.ha. - controlY dat2$prop_YG &lt;- dat2$yield_gain / controlY dat2[dat2$fungicide_ai == &quot;control&quot;, c(&quot;yield_gain&quot;, &quot;prop_YG&quot;)] &lt;- NA dat1[dat1$row_spacing == j, ] &lt;- dat2 } PM_MB_means[PM_MB_means$trial_ref == i, ] &lt;- dat1 } ## Warning: AM1303 at Premer in year 2013 has unknown row.spacing (NA) ## &#39;yield_gain&#39; and &#39;proportional yield gain&#39; not calculated # ____________________________________________ # calculate yield gain and prop_yield gain for experiments with no row spacing data dat1 &lt;- PM_MB_means[PM_MB_means$trial_ref == &quot;AM1303&quot;, ] controlY &lt;- mean(dat1[dat1$fungicide_ai == &quot;control&quot;, &quot;grain_yield.t.ha.&quot;]) dat1$yield_gain &lt;- dat1$grain_yield.t.ha. - controlY dat1$prop_YG &lt;- dat1$yield_gain / controlY dat1[dat1$fungicide_ai == &quot;control&quot;, c(&quot;yield_gain&quot;, &quot;prop_YG&quot;)] &lt;- c(NA,NA) PM_MB_means[PM_MB_means$trial_ref == &quot;AM1303&quot;, ] &lt;- dat1 write.csv(PM_MB_means, &quot;data/1911_PM_MB_means&amp;Ygains.csv&quot;) 5.4 Reduce data set to required variables Lets tidy up the data set into a data frame of only the variables which are required for the analysis. First remove the irrelevant columns/variables. Then calculate fungicide application timing variables relative to the first sign of disease. Entries with NA in the grain yield or powdery mildew severity are also removed from the data. source(&quot;R/slimming_PM_dat.R&quot;) # see R script for the code which reduces the data. slim_PM_dat %&lt;&gt;% mutate(fungicide_timing_1 = fungicide_application_1 - first_sign_disease) %&gt;% mutate(fungicide_timing_2 = fungicide_application_2 - fungicide_application_1) %&gt;% mutate(fungicide_timing_3 = fungicide_application_3 - fungicide_application_2) %&gt;% filter(!is.na(grain_yield.t.ha)) %&gt;% filter(!is.na(PM_final_severity)) 5.4.1 Cluster fungicide applications We are going to define ‘fungicide application timing’ as a categorical variable, relative to the first sign of powdery mildew. These categorical variables are named: - Early: First fungicide application was prior to first sign of disease. - Recommended: First fungicide application was applied on the day powdery mildew was observed, or within three days of first sign. - Late: First fungicide application was four or more days after first sign of disease being observed. Follow up fungicide applications (cluster_2 and cluster_3) were also categorised as either, early, recommended or late. slim_PM_dat %&lt;&gt;% mutate( cluster_1 = case_when( fungicide_timing_1 &lt; 0 ~ &quot;Early&quot;, fungicide_timing_1 &gt;= 0 &amp; fungicide_timing_1 &lt; 4 ~ &quot;Recommended&quot;, TRUE ~ &quot;Late&quot; ) ) %&gt;% mutate( cluster_2 = case_when( is.na(fungicide_timing_2) ~ NA_character_, fungicide_timing_2 &lt; 13 ~ &quot;Early&quot;, fungicide_timing_2 &gt;= 13 &amp; fungicide_timing_2 &lt; 17 ~ &quot;Recommended&quot;, TRUE ~ &quot;Late&quot; ) ) %&gt;% mutate( cluster_3 = case_when( fungicide_timing_3 &lt; 14 ~ &quot;Early&quot;, is.na(fungicide_timing_3) ~ NA_character_, TRUE ~ &quot;Recommended&quot; ) ) Lets look at these clusters to see where we have the most degrees of freedom. clusters &lt;- unique(slim_PM_dat[c(&quot;cluster_1&quot;,&quot;cluster_2&quot;,&quot;cluster_3&quot;)]) for(i in 1:nrow(clusters)){ if(i == 1){clusters$n &lt;- NA clusters$n_x_trial &lt;- NA} clusters[i,&quot;n&quot;] &lt;- nrow(slim_PM_dat[slim_PM_dat$cluster_1 == clusters[i,&quot;cluster_1&quot;] &amp; slim_PM_dat$cluster_2 == clusters[i,&quot;cluster_2&quot;] &amp; slim_PM_dat$cluster_3 == clusters[i,&quot;cluster_3&quot;], ]) clusters[i,&quot;n_x_trial&quot;] &lt;- length(unique(slim_PM_dat[slim_PM_dat$cluster_1 == clusters[i,&quot;cluster_1&quot;] &amp; slim_PM_dat$cluster_2 == clusters[i,&quot;cluster_2&quot;] &amp; slim_PM_dat$cluster_3 == clusters[i,&quot;cluster_3&quot;], &quot;trial_ref&quot;])) } knitr::kable(clusters) cluster_1 cluster_2 cluster_3 n n_x_trial 1 Late NA NA 77 1 2 Recommended NA NA 78 1 9 Recommended Late NA 45 1 11 Early Late Early 16 2 15 Recommended Recommended NA 63 1 30 Recommended Late Early 45 2 33 Recommended Early NA 34 1 34 Recommended Early Early 34 2 36 Early NA NA 18 1 37 Early Late NA 17 1 38 Early Late Recommended 15 2 42 Recommended Recommended Recommended 63 2 44 Early Recommended Recommended 14 2 48 Late Recommended NA 65 1 59 Late Recommended Recommended 65 3 148 Late Late NA 69 1 From this we can see that there are 16 different cluster combinations, which would make the analysis too difficult. I will reduce this to 6 levels within one variable. Single sprays either early, recommended timing or late. Two sprays or more where the first spray was either early, recommended timing, or late. slim_PM_dat &lt;- slim_PM_dat %&gt;% mutate( spray_management = case_when( fungicide_timing_1 &lt; 0 &amp; is.na(fungicide_application_2) &amp; is.na(fungicide_application_3) ~ &quot;Early&quot;, fungicide_timing_1 &gt;= 0 &amp; fungicide_timing_1 &lt; 4 &amp; is.na(fungicide_application_2) &amp; is.na(fungicide_application_3) ~ &quot;Recommended&quot;, fungicide_timing_1 &gt;= 4 &amp; is.na(fungicide_application_2) &amp; is.na(fungicide_application_3) ~ &quot;Late&quot;, fungicide_timing_1 &lt; 0 &amp; !is.na(fungicide_application_2) ~ &quot;Early_plus&quot;, fungicide_timing_1 &gt;= 0 &amp; fungicide_timing_1 &lt; 4 &amp; !is.na(fungicide_application_2) ~ &quot;Recommended_plus&quot;, fungicide_timing_1 &gt;= 4 ~ &quot;Late_plus&quot;, TRUE ~ &quot;Other&quot; ) ) slim_PM_dat[slim_PM_dat$fungicide_ai == &quot;control&quot;, c(&quot;fungicide_timing_1&quot;, &quot;fungicide_timing_2&quot;, &quot;fungicide_timing_3&quot;, &quot;spray_management&quot; )] &lt;- &quot;control&quot; table(slim_PM_dat$spray_management) ## ## control Early Early_plus Late ## 40 13 5 17 ## Late_plus Recommended Recommended_plus ## 20 32 46 table(slim_PM_dat$spray_management,slim_PM_dat$fungicide_timing_1) ## ## -11 -13 -14 -16 0 1 11 12 13 19 3 7 8 9 control ## control 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 ## Early 6 6 0 1 0 0 0 0 0 0 0 0 0 0 0 ## Early_plus 0 2 1 2 0 0 0 0 0 0 0 0 0 0 0 ## Late 0 0 0 0 0 0 2 12 1 0 0 0 1 1 0 ## Late_plus 0 0 0 0 0 0 0 0 3 1 0 13 0 3 0 ## Recommended 0 0 0 0 11 12 0 0 0 0 9 0 0 0 0 ## Recommended_plus 0 0 0 0 18 18 0 0 0 0 10 0 0 0 0 There are few ‘Early_plus’ and ‘late’ treatments, these treatments therefore will have too few comparisons with other treatments in the meta-analysis to be provide accurate results. Therefore we will remove ‘Early_plus’ and ‘Late’ from the analysis. slimmer_PM_dat &lt;- slim_PM_dat[slim_PM_dat$spray_management != &quot;Late&quot; &amp; slim_PM_dat$spray_management != &quot;Early_plus&quot;,] write.csv(slimmer_PM_dat, file = &quot;data/slimmer_PM_clusterdat.csv&quot;, row.names = FALSE) Our data currently uses sample variance to define the yield error. We should expect that when yield increases so does the variance. Lets quickly plot this to check. # redefine sample variance calculated from mean square slimmer_PM_dat$vi &lt;- slimmer_PM_dat$Y_Msquare / (slimmer_PM_dat$n * slimmer_PM_dat$grain_yield.t.ha ^ 2) slimmer_PM_dat %&gt;% ggplot(aes(x= grain_yield.t.ha, y = vi))+ geom_point() ## Warning: Removed 21 rows containing missing values (geom_point). We see here that the sample variance generally decreases or has no association with the grain yield. This might be due to the unpredictable nature of mungbeans, however going forward we will use mean squares which defines between trial variation and is a the more generic error term. slimmer_PM_dat %&gt;% ggplot(aes(x= grain_yield.t.ha, y = Y_Msquare))+ geom_point() ## Warning: Removed 21 rows containing missing values (geom_point). slimmer_PM_dat %&gt;% filter(AUDPC_m &lt;=280)%&gt;% # filter(fungicide_ai == &quot;control&quot;)%&gt;% ggplot(aes(x = grain_yield.t.ha, y = AUDPC_m))+ geom_point() summary(lm(grain_yield.t.ha ~ AUDPC_m, data = subset(slimmer_PM_dat, AUDPC_m &lt;= 280))) ## ## Call: ## lm(formula = grain_yield.t.ha ~ AUDPC_m, data = subset(slimmer_PM_dat, ## AUDPC_m &lt;= 280)) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.9294 -0.4807 -0.1205 0.4043 1.3520 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.0221208 0.0995312 10.269 &lt;2e-16 *** ## AUDPC_m 0.0009609 0.0006561 1.465 0.145 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.581 on 149 degrees of freedom ## Multiple R-squared: 0.01419, Adjusted R-squared: 0.007575 ## F-statistic: 2.145 on 1 and 149 DF, p-value: 0.1452 plot(grain_yield.t.ha. ~ AUDPC_m,data = subset(PM_MB_means, AUDPC_m &lt;= 280) ) abline(lm(grain_yield.t.ha. ~ AUDPC_m, data = subset(PM_MB_means, AUDPC_m &lt;= 280))) sm2lg &lt;- PM_MB_means%&gt;% group_by(trial_ref)%&gt;% summarise(TY = mean(grain_yield.t.ha., na.rm = TRUE))%&gt;% arrange(TY) for(i in sm2lg$trial_ref){ dat1 &lt;- PM_MB_means[PM_MB_means$trial_ref == i, ] if(any(is.na(dat1$grain_yield.t.ha.))){next} if(any(is.na(dat1$AUDPC_m))){next} plot(grain_yield.t.ha. ~ AUDPC_m, data = dat1, main = paste(dat1$location[1],(dat1$year[1])), ylim = c(0,max(PM_MB_means$grain_yield.t.ha., na.rm = TRUE)), xlim = c(0,max(PM_MB_means$AUDPC_m, na.rm = TRUE))) abline(lm(grain_yield.t.ha. ~ AUDPC_m, data = dat1)) points(grain_yield.t.ha. ~ AUDPC_m, data = dat1[dat1$fungicide_ai == &quot;control&quot;,], col = &quot;red&quot;) } This sequence of graphs show that AUDPC and disease incidence does not impact on yields if the season is a low yielding, ie lower than 1 tonne per hectare. The higher the yield the greater greater the influence on the disease on the yield especially if the crop is high yielding and a large AUDPC. slimmer_PM_dat %&gt;% #filter(AUDPC_m &lt;=280)%&gt;% # filter(fungicide_ai == &quot;control&quot;)%&gt;% ggplot(aes(x = grain_yield.t.ha, y = AUDPS_m))+ geom_point() summary(lm(grain_yield.t.ha ~ AUDPS_m, data = slimmer_PM_dat, AUDPS_m &lt;= 280)) ## ## Call: ## lm(formula = grain_yield.t.ha ~ AUDPS_m, data = slimmer_PM_dat, ## subset = AUDPS_m &lt;= 280) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.9345 -0.5125 -0.1065 0.4199 1.3414 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.0173831 0.1163187 8.747 5.5e-15 *** ## AUDPS_m 0.0008970 0.0006621 1.355 0.178 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5906 on 143 degrees of freedom ## Multiple R-squared: 0.01267, Adjusted R-squared: 0.005767 ## F-statistic: 1.835 on 1 and 143 DF, p-value: 0.1776 plot(grain_yield.t.ha. ~ AUDPS_m,data = PM_MB_means) abline(lm(grain_yield.t.ha. ~ AUDPS_m, data = PM_MB_means)) sm2lg &lt;- PM_MB_means%&gt;% group_by(trial_ref)%&gt;% summarise(TY = mean(grain_yield.t.ha., na.rm = TRUE))%&gt;% arrange(TY) for(i in sm2lg$trial_ref){ dat1 &lt;- PM_MB_means[PM_MB_means$trial_ref == i, ] if(any(is.na(dat1$grain_yield.t.ha.))){next} if(any(is.na(dat1$AUDPS_m))){next} plot(grain_yield.t.ha. ~ AUDPS_m, data = dat1, main = paste(dat1$location[1],(dat1$year[1])), ylim = c(0,max(PM_MB_means$grain_yield.t.ha., na.rm = TRUE)), xlim = c(0,max(PM_MB_means$AUDPS_m, na.rm = TRUE))) abline(lm(grain_yield.t.ha. ~ AUDPS_m, data = dat1)) points(grain_yield.t.ha. ~ AUDPS_m, data = dat1[dat1$fungicide_ai == &quot;control&quot;,], col = &quot;red&quot;) } PM_MB_means$infected_days &lt;- as.numeric(PM_MB_means$harvest_date - PM_MB_means$first_sign_disease) plot(AUDPC_m ~ infected_days, data = PM_MB_means) plot(grain_yield.t.ha. ~ infected_days, data = PM_MB_means) PM_MB_means$harvest_date - PM_MB_means$first_sign_disease ## Time differences in days ## [1] 54 54 54 54 54 54 54 39 39 39 39 39 39 39 39 39 39 39 39 57 57 57 57 57 57 ## [26] 57 57 57 57 57 57 57 56 56 56 56 56 56 56 56 56 56 56 56 56 42 42 42 36 36 ## [51] 36 57 57 57 57 57 57 57 57 57 57 57 57 57 57 57 54 54 54 54 54 54 54 54 54 ## [76] 54 54 54 54 54 54 28 28 28 28 28 28 28 28 28 28 28 28 NA NA NA NA NA NA NA ## [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 49 49 49 49 49 49 49 ## [151] 49 49 49 49 54 54 54 54 54 54 54 54 54 54 54 26 26 26 26 26 26 26 26 26 26 ## [176] 26 87 87 87 87 87 87 87 87 87 87 87 35 35 35 35 35 35 29 47 47 47 47 47 47 ## [201] 47 59 59 59 59 59 59 59 62 62 62 62 62 62 62 65 65 65 65 65 65 65 65 65 65 ## [226] 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 ## [251] 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 65 94 94 94 94 94 94 ## [276] 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 ## [301] 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 71 71 ## [326] 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 71 40 40 40 ## [351] 40 40 40 40 40 PM_MB_means[0 &gt; as.Date(PM_MB_means$harvest_date, format = &quot;%Y-%m-%d&quot;)- as.Date(PM_MB_means$first_sign_disease, format = &quot;%Y-%m-%d&quot;),] ## trial_ref year location host_genotype trial_design plot_length.m. ## NA &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.6 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.7 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.8 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.9 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.11 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.12 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.13 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.14 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.15 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.16 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.17 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.18 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.20 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.21 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.22 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.23 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.24 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.25 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.26 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.27 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.28 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.29 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.30 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.31 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.32 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.33 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.34 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.35 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.36 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.37 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.38 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.39 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.40 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.41 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.42 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.43 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.44 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.45 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.46 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.47 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.48 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## NA.49 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## plot_width.m. plant_density row_spacing replicates planting_date ## NA NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.1 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.2 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.3 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.4 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.5 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.6 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.7 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.8 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.9 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.10 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.11 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.12 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.13 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.14 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.15 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.16 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.17 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.18 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.19 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.20 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.21 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.22 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.23 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.24 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.25 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.26 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.27 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.28 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.29 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.30 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.31 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.32 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.33 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.34 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.35 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.36 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.37 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.38 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.39 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.40 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.41 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.42 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.43 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.44 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.45 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.46 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.47 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.48 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.49 NA &lt;NA&gt; NA NA &lt;NA&gt; ## emergence_date flowering_date pod_fill_date mid_late_pod_fill ## NA &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.6 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.7 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.8 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.9 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.11 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.12 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.13 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.14 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.15 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.16 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.17 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.18 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.20 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.21 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.22 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.23 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.24 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.25 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.26 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.27 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.28 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.29 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.30 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.31 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.32 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.33 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.34 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.35 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.36 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.37 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.38 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.39 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.40 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.41 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.42 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.43 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.44 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.45 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.46 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.47 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.48 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.49 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## first_sign_disease trade_name fungicide_ai dose_ai.ha n_treatment ## NA &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.6 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.7 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.8 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.9 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.11 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.12 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.13 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.14 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.15 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.16 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.17 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.18 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.20 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.21 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.22 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.23 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.24 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.25 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.26 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.27 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.28 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.29 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.30 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.31 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.32 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.33 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.34 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.35 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.36 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.37 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.38 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.39 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.40 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.41 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.42 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.43 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.44 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.45 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.46 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.47 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.48 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## NA.49 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA NA ## fungicide_application_1 fungicide_application_2 fungicide_application_3 ## NA &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.6 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.7 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.8 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.9 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.11 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.12 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.13 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.14 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.15 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.16 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.17 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.18 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.20 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.21 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.22 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.23 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.24 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.25 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.26 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.27 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.28 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.29 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.30 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.31 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.32 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.33 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.34 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.35 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.36 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.37 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.38 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.39 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.40 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.41 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.42 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.43 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.44 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.45 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.46 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.47 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.48 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.49 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## fungicide_application_4 fungicide_application_5 fungicide_application_6 ## NA &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.6 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.7 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.8 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.9 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.11 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.12 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.13 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.14 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.15 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.16 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.17 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.18 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.20 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.21 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.22 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.23 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.24 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.25 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.26 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.27 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.28 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.29 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.30 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.31 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.32 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.33 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.34 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.35 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.36 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.37 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.38 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.39 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.40 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.41 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.42 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.43 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.44 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.45 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.46 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.47 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.48 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## NA.49 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## fungicide_application_7 total_fungicide harvest_date final_assessment ## NA &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.1 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.2 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.3 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.4 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.5 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.6 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.7 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.8 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.9 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.10 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.11 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.12 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.13 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.14 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.15 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.16 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.17 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.18 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.19 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.20 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.21 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.22 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.23 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.24 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.25 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.26 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.27 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.28 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.29 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.30 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.31 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.32 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.33 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.34 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.35 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.36 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.37 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.38 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.39 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.40 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.41 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.42 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.43 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.44 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.45 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.46 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.47 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.48 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## NA.49 &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## PM_final_severity rating_scale disease_error D_error_type ## NA NA &lt;NA&gt; NA &lt;NA&gt; ## NA.1 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.2 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.3 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.4 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.5 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.6 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.7 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.8 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.9 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.10 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.11 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.12 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.13 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.14 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.15 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.16 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.17 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.18 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.19 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.20 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.21 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.22 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.23 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.24 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.25 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.26 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.27 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.28 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.29 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.30 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.31 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.32 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.33 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.34 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.35 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.36 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.37 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.38 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.39 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.40 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.41 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.42 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.43 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.44 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.45 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.46 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.47 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.48 NA &lt;NA&gt; NA &lt;NA&gt; ## NA.49 NA &lt;NA&gt; NA &lt;NA&gt; ## grain_yield.t.ha. raw_graded Y_Msquare yield_error Y_error_type ## NA NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.1 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.2 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.3 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.4 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.5 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.6 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.7 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.8 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.9 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.10 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.11 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.12 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.13 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.14 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.15 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.16 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.17 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.18 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.19 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.20 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.21 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.22 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.23 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.24 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.25 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.26 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.27 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.28 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.29 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.30 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.31 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.32 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.33 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.34 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.35 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.36 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.37 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.38 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.39 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.40 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.41 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.42 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.43 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.44 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.45 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.46 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.47 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.48 NA &lt;NA&gt; NA NA &lt;NA&gt; ## NA.49 NA &lt;NA&gt; NA NA &lt;NA&gt; ## yield_gain prop_YG raw_data_avail comments days_harvest.planting AUDPC_m ## NA NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.1 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.2 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.3 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.4 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.5 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.6 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.7 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.8 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.9 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.10 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.11 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.12 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.13 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.14 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.15 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.16 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.17 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.18 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.19 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.20 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.21 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.22 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.23 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.24 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.25 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.26 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.27 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.28 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.29 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.30 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.31 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.32 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.33 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.34 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.35 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.36 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.37 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.38 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.39 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.40 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.41 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.42 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.43 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.44 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.45 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.46 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.47 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.48 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## NA.49 NA NA &lt;NA&gt; &lt;NA&gt; NA NA ## AUDPC_sd AUDPS_m AUDPS_sd Inc_Ms infected_days ## NA NA NA NA NA NA ## NA.1 NA NA NA NA NA ## NA.2 NA NA NA NA NA ## NA.3 NA NA NA NA NA ## NA.4 NA NA NA NA NA ## NA.5 NA NA NA NA NA ## NA.6 NA NA NA NA NA ## NA.7 NA NA NA NA NA ## NA.8 NA NA NA NA NA ## NA.9 NA NA NA NA NA ## NA.10 NA NA NA NA NA ## NA.11 NA NA NA NA NA ## NA.12 NA NA NA NA NA ## NA.13 NA NA NA NA NA ## NA.14 NA NA NA NA NA ## NA.15 NA NA NA NA NA ## NA.16 NA NA NA NA NA ## NA.17 NA NA NA NA NA ## NA.18 NA NA NA NA NA ## NA.19 NA NA NA NA NA ## NA.20 NA NA NA NA NA ## NA.21 NA NA NA NA NA ## NA.22 NA NA NA NA NA ## NA.23 NA NA NA NA NA ## NA.24 NA NA NA NA NA ## NA.25 NA NA NA NA NA ## NA.26 NA NA NA NA NA ## NA.27 NA NA NA NA NA ## NA.28 NA NA NA NA NA ## NA.29 NA NA NA NA NA ## NA.30 NA NA NA NA NA ## NA.31 NA NA NA NA NA ## NA.32 NA NA NA NA NA ## NA.33 NA NA NA NA NA ## NA.34 NA NA NA NA NA ## NA.35 NA NA NA NA NA ## NA.36 NA NA NA NA NA ## NA.37 NA NA NA NA NA ## NA.38 NA NA NA NA NA ## NA.39 NA NA NA NA NA ## NA.40 NA NA NA NA NA ## NA.41 NA NA NA NA NA ## NA.42 NA NA NA NA NA ## NA.43 NA NA NA NA NA ## NA.44 NA NA NA NA NA ## NA.45 NA NA NA NA NA ## NA.46 NA NA NA NA NA ## NA.47 NA NA NA NA NA ## NA.48 NA NA NA NA NA ## NA.49 NA NA NA NA NA # install.packages(&quot;tidyverse&quot;) # install.packages(&quot;devtools&quot;) # devtools::install_github(&quot;https://github.com/PaulMelloy/bomrang&quot;) # devtools::install_github(&quot;https://github.com/adamhsparks/theme.usq&quot;, dependencies = TRUE) # install.packages(&quot;lme4&quot;) library(RColorBrewer) library(tidyverse) library(theme.usq) library(bomrang) library(lme4) library(kableExtra) # Data slimmer_PM_dat &lt;- read.csv(&quot;data/slimmer_PM_clusterdat.csv&quot;) "],
["meta-analysis.html", "6 Meta-analysis 6.1 Grain yield meta-analysis 6.2 Meta-analysis", " 6 Meta-analysis 6.1 Grain yield meta-analysis m8 &lt;- lmer(grain_yield.t.ha*1000 ~ factor(spray_management) + (factor(spray_management) | trial_ref), data = slimmer_PM_dat) ## boundary (singular) fit: see ?isSingular m9 &lt;- lmer(log(grain_yield.t.ha*1000) ~ factor(spray_management) + (factor(spray_management) | trial_ref), data = slimmer_PM_dat) ## boundary (singular) fit: see ?isSingular m10 &lt;- lmer(log(grain_yield.t.ha*1000) ~ (factor(spray_management) | trial_ref), data = slimmer_PM_dat) ## boundary (singular) fit: see ?isSingular m11 &lt;- lmer(log(grain_yield.t.ha*1000) ~ factor(spray_management) + (1 | trial_ref), data = slimmer_PM_dat) anova(m8,m9) # m9 is significantly better model ## refitting model(s) with ML (instead of REML) ## Data: slimmer_PM_dat ## Models: ## m8: grain_yield.t.ha * 1000 ~ factor(spray_management) + (factor(spray_management) | ## m8: trial_ref) ## m9: log(grain_yield.t.ha * 1000) ~ factor(spray_management) + (factor(spray_management) | ## m9: trial_ref) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## m8 21 2096.44 2159.80 -1027.22 2054.44 ## m9 21 -29.36 34.01 35.68 -71.36 2125.8 0 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 anova(m9,m10) # m9 is significantly better model ## refitting model(s) with ML (instead of REML) ## Data: slimmer_PM_dat ## Models: ## m10: log(grain_yield.t.ha * 1000) ~ (factor(spray_management) | trial_ref) ## m9: log(grain_yield.t.ha * 1000) ~ factor(spray_management) + (factor(spray_management) | ## m9: trial_ref) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## m10 17 -25.584 25.710 29.792 -59.584 ## m9 21 -29.357 34.006 35.678 -71.357 11.773 4 0.01912 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 anova(m9,m11) # m11 is a simpler model which is no different to m9 ## refitting model(s) with ML (instead of REML) ## Data: slimmer_PM_dat ## Models: ## m11: log(grain_yield.t.ha * 1000) ~ factor(spray_management) + (1 | ## m11: trial_ref) ## m9: log(grain_yield.t.ha * 1000) ~ factor(spray_management) + (factor(spray_management) | ## m9: trial_ref) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## m11 7 -48.130 -27.009 31.065 -62.130 ## m9 21 -29.357 34.006 35.678 -71.357 9.2264 14 0.8163 summary(m9) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: ## log(grain_yield.t.ha * 1000) ~ factor(spray_management) + (factor(spray_management) | ## trial_ref) ## Data: slimmer_PM_dat ## ## REML criterion at convergence: -50.8 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.58718 -0.51727 0.04068 0.58676 1.96151 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## trial_ref (Intercept) 2.442e-01 0.494173 ## factor(spray_management)Early 9.264e-04 0.030436 -1.00 ## factor(spray_management)Late_plus 4.281e-03 0.065426 1.00 ## factor(spray_management)Recommended 6.291e-05 0.007931 1.00 ## factor(spray_management)Recommended_plus 5.864e-03 0.076575 1.00 ## Residual 2.323e-02 0.152403 ## ## ## ## -1.00 ## -1.00 1.00 ## -1.00 1.00 1.00 ## ## Number of obs: 151, groups: trial_ref, 17 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) 6.80091 0.12274 55.411 ## factor(spray_management)Early 0.04659 0.05136 0.907 ## factor(spray_management)Late_plus 0.13618 0.05726 2.378 ## factor(spray_management)Recommended 0.10907 0.03753 2.906 ## factor(spray_management)Recommended_plus 0.14151 0.03954 3.579 ## ## Correlation of Fixed Effects: ## (Intr) fc(_)E f(_)L_ fc(_)R ## fctr(spr_)E -0.224 ## fctr(sp_)L_ 0.194 0.044 ## fctr(spr_)R -0.086 0.297 0.185 ## fctr(sp_)R_ 0.338 0.256 0.269 0.472 ## convergence code: 0 ## boundary (singular) fit: see ?isSingular This linear mixed effect model shows indicates: - A single early spray before first sign of powdery mildew is not likely to increase yields. - A single or single spray with one or more follow sprays starting at the recommended first spray , within 3 days of powdery mildew first sign are likely to produce significantly higher grain yields compared to the no spray control. - The recommended_plus spray which has one or more follow-up sprays after first sign are likley to increase the mean grain yield. - Late_plus spray treatments showed the highest mean grain yield, and was significantly higher than the no spray control. However showed no difference to either of the recommended treatments. 6.1.1 Imputing sample variances We need to impute the variances which are missing for a few of the trials. These trials mung1112/01, mung1516/03 were analysed and reported that there was no significant difference between the treatments in each trial. So therefore we need the imputed variances not to show a significant difference. There are 14 treatments without yield error in our data, and 137 where yield error was recorded. Plotting a histogram of the variances show that the yield is not normally distributed. A log transformation, however, shows a normal disrtubution. We can use the mean and standard deviation of the log(V) to sample variances for the treatments where V is missing. hist(slimmer_PM_dat$yield_error) # yield error is not normally distributed hist(log(slimmer_PM_dat$yield_error)) # a log transformation shows it is normally distributed We will evaluate wheather the imputed variances confer a significant difference to the recorded means. I created a distance matrix of two standard errors above the mean against two standard errors below the mean. If any errors don’t overlap, infering signicifant difference, the imputed variances are discarded and resampled until all treatment variances show no significant differences. # generate yield error values for(i in 0:500){ # Imputing missing log variances log_Yerror &lt;- rnorm(n = sum(is.na(slimmer_PM_dat$yield_error)), mean = mean(log(slimmer_PM_dat$yield_error), na.rm = TRUE), sd = sd(log(slimmer_PM_dat$yield_error), na.rm = TRUE)) # First lets convert Variance to standard error for all the variables that have variance recorded slimmer_PM_dat$yield_SE &lt;- sqrt(slimmer_PM_dat$yield_error)/sqrt(slimmer_PM_dat$n) # Second; adding the imputed standard errors slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error), &quot;yield_SE&quot;] &lt;- sqrt(exp(log_Yerror))/sqrt(slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;n&quot;]) # all errorbars should overlap so they are consistant with the meta-data describing no significant difference bettween treatments # lets test to make sure if( max(outer(X = slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;grain_yield.t.ha&quot;] - (2*slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;yield_SE&quot;]), Y = slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;grain_yield.t.ha&quot;] + (2*slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;yield_SE&quot;]), FUN = &quot;-&quot;) ) &gt; 0){ message(paste(&quot;\\nWarning!!: Imputed yield errors show significant differences when they should not, imputation will automatically rerun - iteration&quot;, &quot;i =&quot;,i)) next() }else{ message(paste(i,&quot;iterations: &quot;, &quot;imputed variances now show no significant distances :)\\n Now adding variances to data &quot;)) # Plot the imputed errors for each trial Vplot &lt;- slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),] %&gt;% ggplot(aes(y = grain_yield.t.ha, trial))+ #geom_point()+ geom_pointrange(ymin = slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;grain_yield.t.ha&quot;] - (1.95*slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;yield_SE&quot;]), ymax = slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;grain_yield.t.ha&quot;] + (1.95*slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error),&quot;yield_SE&quot;]), position = &quot;jitter&quot; )+ ylim(0.2,1.5) slimmer_PM_dat[is.na(slimmer_PM_dat$yield_error), &quot;yield_error&quot;] &lt;- exp(log_Yerror) print(Vplot) break()} } ## ## Warning!!: Imputed yield errors show significant differences when they should not, imputation will automatically rerun - iteration i = 0 ## ## Warning!!: Imputed yield errors show significant differences when they should not, imputation will automatically rerun - iteration i = 1 ## 2 iterations: imputed variances now show no significant distances :) ## Now adding variances to data The imputed variances calculated above don’t show the expected positive correlation between grain yield and variance. This is unexpected and reflects the inherent variability of the data. Therefore we will calculate the trial mean squares and use this to calculate the variance for each sample. 6.1.1.1 Imputing sample variances from Mean squares slimmer_PM_dat &lt;- read.csv(&quot;data/slimmer_PM_clusterdat.csv&quot;) hist(unique(slimmer_PM_dat$Y_Msquare)) hist(log(unique(slimmer_PM_dat$Y_Msquare))) # log mean square has a more normal distribution Imputing using a log transformation of the data is required. Which trials need variance imputation? TrialMSQ &lt;- slimmer_PM_dat %&gt;% group_by(trial_ref)%&gt;% summarise(unique(Y_Msquare)) TrialMSQ[is.na(TrialMSQ$`unique(Y_Msquare)`), &quot;trial_ref&quot;] ## # A tibble: 3 x 1 ## trial_ref ## &lt;fct&gt; ## 1 mung1112/01 ## 2 mung1112/02 ## 3 mung1516/03 for(i in TrialMSQ[is.na(TrialMSQ$`unique(Y_Msquare)`),]$trial_ref){ slimmer_PM_dat[slimmer_PM_dat$trial_ref == i,&quot;Y_Msquare&quot;] &lt;- exp( rnorm(n = 1, mean = mean(log(TrialMSQ$`unique(Y_Msquare)`), na.rm = TRUE), sd(log(TrialMSQ$`unique(Y_Msquare)`), na.rm = TRUE) ) ) } Before analysis lets have a look at the trimmed down modified data. slimmer_PM_dat$spray_management &lt;- factor(slimmer_PM_dat$spray_management, levels(slimmer_PM_dat$spray_management)[rev(c(1,2,4,5,3))]) slimmer_PM_dat %&gt;% ggplot(aes(y = grain_yield.t.ha, x = spray_management))+ geom_boxplot()+ #geom_point(position = &quot;jitter&quot;, alpha = 1/5)+ geom_jitter(width = 0.1, alpha = 1/5)+ theme_usq()+ labs(x = &quot;Spray management variable&quot;, y = &quot;Grain yield (t/Ha)&quot;, title = &quot;Mean grain yield from each treatment \\n categorised by spray management scenario&quot;)+ theme(plot.title = element_text(hjust = 0.5))+ geom_hline(yintercept = 0, linetype = 2)+ coord_flip() There seems like no difference between the treatments, with exception to Late_plus. Lets do this plot again, but use the proportion of yield increase compared to the no spray control as the response variable. It is also important to visualise how well the data is compared across the trial years and trials. kableExtra::kable(table(slimmer_PM_dat$spray_management, slimmer_PM_dat$year), align=rep(&#39;c&#39;, 8))%&gt;% #commented as was redering empty, needs a look in kable_styling(&quot;striped&quot;, fixed_thead = TRUE, full_width = FALSE, position = &quot;center&quot;) 2011 2012 2013 2015 2016 2017 2018 2019 Late_plus 0 0 0 1 7 0 12 0 Recommended_plus 2 6 6 1 5 24 0 2 Recommended 4 6 3 1 4 12 0 2 Early 0 0 1 0 0 12 0 0 control 4 2 4 1 3 18 6 2 Treatments Late_plus and early don’t have very good comparison to other treatments. slimmer_PM_dat$spray_management &lt;- factor(slimmer_PM_dat$spray_management,rev(c(&quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;,&quot;Late_plus&quot;))) slimmer_PM_dat %&gt;% ggplot(aes(y = prop_yield_gain, x = spray_management))+ geom_boxplot()+ #geom_point(position = &quot;jitter&quot;, alpha = 1/5)+ geom_jitter(width = 0.1, alpha = 1/5)+ theme_usq()+ labs(x = &quot;Spray management variable&quot;, y = &quot;Grain yield (t/Ha)&quot;, title = &quot;Mean grain yield from each treatment \\n categorised by spray management scenario&quot;)+ theme(plot.title = element_text(hjust = 0.5))+ geom_hline(yintercept = 0, linetype = 2)+ coord_flip() ## Warning: Removed 40 rows containing non-finite values (stat_boxplot). ## Warning: Removed 40 rows containing missing values (geom_point). 6.2 Meta-analysis 6.2.1 metafor package Let’s load the metafor package we are using to analyse the data, then rearrange the factors we want to examine by placing the control treatment first. This way all treatments will be compared to the no spray controls. Next we are log transforming the grain yield and calculating the variance from the trial mean squares. Finally we will assign factor classes to the main variables in the meta-analysis. Note that variable trial is a combination of: - Trial identifier - Trial year - Trial location - Host genotype - Trial row spacing library(metafor) ## Loading &#39;metafor&#39; package (version 2.1-0). For an overview ## and introduction to the package please type: help(metafor). slimmer_PM_dat$spray_management &lt;- factor(slimmer_PM_dat$spray_management,c(&quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;,&quot;Late_plus&quot;)) slimmer_PM_dat$yi &lt;- log(slimmer_PM_dat$grain_yield.t.ha) slimmer_PM_dat$vi &lt;- slimmer_PM_dat$Y_Msquare/(slimmer_PM_dat$n * slimmer_PM_dat$grain_yield.t.ha^2) slimmer_PM_dat$spray_management &lt;- factor(slimmer_PM_dat$spray_management) slimmer_PM_dat$trial_ref &lt;- factor(slimmer_PM_dat$trial_ref) slimmer_PM_dat$trial &lt;- factor(slimmer_PM_dat$trial) PM_mv_AI &lt;- rma.mv(yi,vi, mods = ~ spray_management, method = &quot;ML&quot;, random = list(~ spray_management | trial), struct = &quot;UN&quot;, data = slimmer_PM_dat) ## Warning: Some combinations of the levels of the inner factor never occurred. ## Corresponding rho value(s) fixed to 0. summary(PM_mv_AI) ## ## Multivariate Meta-Analysis Model (k = 151; method: ML) ## ## logLik Deviance AIC BIC AICc ## 25.9921 331.1871 -13.9843 43.3440 -8.1828 ## ## Variance Components: ## ## outer factor: trial (nlvls = 25) ## inner factor: spray_management (nlvls = 5) ## ## estim sqrt k.lvl fixed level ## tau^2.1 0.2381 0.4879 40 no control ## tau^2.2 0.2241 0.4734 13 no Early ## tau^2.3 0.2630 0.5128 32 no Recommended ## tau^2.4 0.2826 0.5316 46 no Recommended_plus ## tau^2.5 0.3035 0.5509 20 no Late_plus ## ## rho.cntr rho.Erly rho.Rcmm rho.Rcm_ rho.Lt_p cntr ## control 1 0.9863 0.9825 0.9657 0.9752 - ## Early 0.9863 1 0.9982 0.9952 0.0000 7 ## Recommended 0.9825 0.9982 1 0.9936 0.9939 21 ## Recommended_plus 0.9657 0.9952 0.9936 1 0.9987 19 ## Late_plus 0.9752 0.0000 0.9939 0.9987 1 7 ## Erly Rcmm Rcm_ Lt_p ## control no no no no ## Early - no no yes ## Recommended 6 - no no ## Recommended_plus 6 19 - no ## Late_plus 0 4 4 - ## ## Test for Residual Heterogeneity: ## QE(df = 146) = 6747.5175, p-val &lt; .0001 ## ## Test of Moderators (coefficients 2:5): ## QM(df = 4) = 11.9559, p-val = 0.0177 ## ## Model Results: ## ## estimate se zval pval ci.lb ## intrcpt -0.0490 0.0992 -0.4933 0.6218 -0.2435 ## spray_managementEarly 0.0590 0.0568 1.0378 0.2994 -0.0524 ## spray_managementRecommended 0.0981 0.0289 3.3954 0.0007 0.0415 ## spray_managementRecommended_plus 0.1178 0.0373 3.1573 0.0016 0.0447 ## spray_managementLate_plus 0.0909 0.0372 2.4416 0.0146 0.0179 ## ci.ub ## intrcpt 0.1456 ## spray_managementEarly 0.1703 ## spray_managementRecommended 0.1547 *** ## spray_managementRecommended_plus 0.1909 ** ## spray_managementLate_plus 0.1639 * ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Results show that yields in single early spray treatments are not significantly different to the no spray control. Commencing spray manangement schedules at first sign of disease (Recommended), or between 7 - 19 days after first sign (late) produced significantly higher yields compared to the no spray control. On average a spray scheduale with two or more applications stating late (7-19 days after first sign of powdery mildew) produced the highest yields. When we compare these results to those of the linear mixed effect model there is little difference in the outcome. The most noteable difference is the linear mixed-effect model is somewhat less certain about the Late_plus treatment, and the mean yield lower than the recommended_plus treatment. lme_PM &lt;- lmer(yi ~ spray_management + (spray_management | trial), data = slimmer_PM_dat) ## boundary (singular) fit: see ?isSingular summary(lme_PM) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: yi ~ spray_management + (spray_management | trial) ## Data: slimmer_PM_dat ## ## REML criterion at convergence: -52.4 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.78691 -0.42731 0.07418 0.50607 2.54104 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## trial (Intercept) 0.2455105 0.49549 ## spray_managementEarly 0.0008238 0.02870 -1.00 ## spray_managementRecommended 0.0003764 0.01940 0.35 -0.35 ## spray_managementRecommended_plus 0.0062560 0.07909 0.89 -0.89 0.73 ## spray_managementLate_plus 0.0046530 0.06821 0.96 -0.96 0.59 ## Residual 0.0176841 0.13298 ## ## ## ## ## ## 0.98 ## ## Number of obs: 151, groups: trial, 25 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) -0.07775 0.10147 -0.766 ## spray_managementEarly 0.04476 0.04489 0.997 ## spray_managementRecommended 0.10931 0.03303 3.309 ## spray_managementRecommended_plus 0.14382 0.03472 4.143 ## spray_managementLate_plus 0.13891 0.05000 2.778 ## ## Correlation of Fixed Effects: ## (Intr) spry_E spry_R spr_R_ ## spry_mngmnE -0.212 ## spry_mngmnR -0.098 0.289 ## spry_mngmR_ 0.272 0.258 0.493 ## spry_mngmL_ 0.168 0.049 0.191 0.260 ## convergence code: 0 ## boundary (singular) fit: see ?isSingular To make it easier to compare each of the treatments we can compute the meta-analysis contrasts. anova(PM_mv_AI, L=rbind(c(0,1,-1,0,0), # early vs Recomended c(0,1,0,-1,0), # early vs recommended plus c(0,1,0,0,-1), # early vs Late plus c(0,0,-1,1,0), # Recommended vs recommended_plus c(0,0,-1,0,1), # Recommended vs Late_Plus c(0,0,0,-1,1))) # recommended_plus vs Late_plus ## ## Hypotheses: ## 1: spray_managementEarly - spray_managementRecommended = 0 ## 2: spray_managementEarly - spray_managementRecommended_plus = 0 ## 3: spray_managementEarly - spray_managementLate_plus = 0 ## 4: -spray_managementRecommended + spray_managementRecommended_plus = 0 ## 5: -spray_managementRecommended + spray_managementLate_plus = 0 ## 6: -spray_managementRecommended_plus + spray_managementLate_plus = 0 ## ## Results: ## estimate se zval pval ## 1: -0.0391 0.0563 -0.6947 0.4872 ## 2: -0.0588 0.0582 -1.0106 0.3122 ## 3: -0.0319 0.0607 -0.5262 0.5987 ## 4: 0.0197 0.0212 0.9286 0.3531 ## 5: -0.0072 0.0292 -0.2468 0.8050 ## 6: -0.0269 0.0205 -1.3117 0.1896 Results show with the exclusion of the no spray control, none of the treatments are significantly different, however, early applications treatments on average produced lower yields. Lets view this on a plot. results_AI &lt;- data.frame(cbind(exp(PM_mv_AI$b), exp((PM_mv_AI$ci.lb)), exp(PM_mv_AI$ci.ub))) # results_AI &lt;- data.frame(cbind(PM_mv_AI$b, # (PM_mv_AI$ci.lb), # PM_mv_AI$ci.ub)) treat &lt;- c(&quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;,&quot;Late_plus&quot;) efficacy &lt;- tbl_df(results_AI) efficacy$treat &lt;- treat efficacy$se &lt;- PM_mv_AI$se colnames(efficacy) &lt;- c(&quot;Mean&quot;, &quot;CIs_lower&quot;, &quot;CI_upper&quot;, &quot;Treatment&quot;, &quot;SE&quot;) efficacy ## # A tibble: 5 x 5 ## Mean CIs_lower CI_upper Treatment SE ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 0.952 0.784 1.16 control 0.0992 ## 2 1.06 0.949 1.19 Early 0.0568 ## 3 1.10 1.04 1.17 Recommended 0.0289 ## 4 1.12 1.05 1.21 Recommended_plus 0.0373 ## 5 1.10 1.02 1.18 Late_plus 0.0372 efficacy$Treatment &lt;- factor(efficacy$Treatment,c(&quot;control&quot;, &quot;Early&quot;, &quot;Recommended&quot;, &quot;Recommended_plus&quot;,&quot;Late_plus&quot;)) efficacy %&gt;% ggplot(aes(Treatment, Mean))+ geom_hline(yintercept = c(0.8,1,1.2,1.4), color = &quot;grey80&quot;, linetype = 3)+ geom_point(aes(size=1/SE), shape=15)+ geom_linerange(aes(ymin = CIs_lower, ymax = CI_upper))+ coord_flip()+ theme_usq() What is interesting here is that the variance in the control has increased while the treatments have decreased. This is despite the control being the best represented across all experiments. However it could also be because it also has a low number of pooled reps per trial. Lets look at how well each of the treatments compare to each other. We can use the netmeta package to give a graphical representation of this. 6.2.2 netmeta package Lets analyse the data again using a different statistical approach to see if our outcome with the metafor package was robust. The netmeta package uses a frequentist approach to the analysis, and focuses on the pairwise comparisons between treatments. library(netmeta) ## Loading required package: meta ## Loading &#39;meta&#39; package (version 4.9-9). ## Type &#39;help(meta)&#39; for a brief overview. ## ## Attaching package: &#39;meta&#39; ## The following objects are masked from &#39;package:metafor&#39;: ## ## baujat, forest, funnel, funnel.default, labbe, radial, trimfill ## Loading &#39;netmeta&#39; package (version 1.2-0). ## Type &#39;help(&quot;netmeta-package&quot;)&#39; for a brief overview. datPM3 &lt;- slimmer_PM_dat %&gt;% group_by(trial, spray_management, n) %&gt;% summarize(yi_mean = mean(yi), vi_mean = mean(vi)) %&gt;% ungroup() PM_con &lt;- pairwise(treat = spray_management, n = n, mean = yi_mean, sd = sqrt(vi_mean), studlab= trial, data = datPM3, sm=&quot;MD&quot;) net_con &lt;- netmeta(TE, seTE, treat1, treat2, studlab, data=PM_con, sm=&quot;MD&quot;) ## Warning: Note, treatments within a comparison have been re-sorted in increasing ## order. summary(net_con) ## Number of studies: k = 25 ## Number of treatments: n = 5 ## Number of pairwise comparisons: m = 93 ## Number of designs: d = 6 ## ## Fixed effects model ## ## Treatment estimate (sm = &#39;MD&#39;): ## control Early Late_plus Recommended Recommended_plus ## control . -0.0990 -0.0023 -0.0731 -0.0685 ## Early 0.0990 . 0.0967 0.0259 0.0306 ## Late_plus 0.0023 -0.0967 . -0.0708 -0.0662 ## Recommended 0.0731 -0.0259 0.0708 . 0.0046 ## Recommended_plus 0.0685 -0.0306 0.0662 -0.0046 . ## ## Lower 95%-confidence limit: ## control Early Late_plus Recommended Recommended_plus ## control . -0.1701 -0.0209 -0.0869 -0.0825 ## Early 0.0279 . 0.0237 -0.0458 -0.0413 ## Late_plus -0.0163 -0.1698 . -0.0890 -0.0845 ## Recommended 0.0593 -0.0977 0.0526 . -0.0088 ## Recommended_plus 0.0545 -0.1024 0.0478 -0.0181 . ## ## Upper 95%-confidence limit: ## control Early Late_plus Recommended Recommended_plus ## control . -0.0279 0.0163 -0.0593 -0.0545 ## Early 0.1701 . 0.1698 0.0977 0.1024 ## Late_plus 0.0209 -0.0237 . -0.0526 -0.0478 ## Recommended 0.0869 0.0458 0.0890 . 0.0181 ## Recommended_plus 0.0825 0.0413 0.0845 0.0088 . ## ## Random effects model ## ## Treatment estimate (sm = &#39;MD&#39;): ## control Early Late_plus Recommended Recommended_plus ## control . -0.0712 -0.1128 -0.0865 -0.1065 ## Early 0.0712 . -0.0416 -0.0154 -0.0353 ## Late_plus 0.1128 0.0416 . 0.0262 0.0063 ## Recommended 0.0865 0.0154 -0.0262 . -0.0200 ## Recommended_plus 0.1065 0.0353 -0.0063 0.0200 . ## ## Lower 95%-confidence limit: ## control Early Late_plus Recommended Recommended_plus ## control . -0.1988 -0.2147 -0.1496 -0.1718 ## Early -0.0565 . -0.1991 -0.1457 -0.1663 ## Late_plus 0.0109 -0.1159 . -0.0789 -0.0994 ## Recommended 0.0235 -0.1149 -0.1314 . -0.0856 ## Recommended_plus 0.0411 -0.0957 -0.1120 -0.0457 . ## ## Upper 95%-confidence limit: ## control Early Late_plus Recommended Recommended_plus ## control . 0.0565 -0.0109 -0.0235 -0.0411 ## Early 0.1988 . 0.1159 0.1149 0.0957 ## Late_plus 0.2147 0.1991 . 0.1314 0.1120 ## Recommended 0.1496 0.1457 0.0789 . 0.0457 ## Recommended_plus 0.1718 0.1663 0.0994 0.0856 . ## ## Quantifying heterogeneity / inconsistency: ## tau^2 = 0.0159; tau = 0.1259; I^2 = 91.9% [90.1%; 93.3%] ## ## Tests of heterogeneity (within designs) and inconsistency (between designs): ## Q d.f. p-value ## Total 617.16 50 &lt; 0.0001 ## Within designs 556.26 43 &lt; 0.0001 ## Between designs 60.89 7 &lt; 0.0001 Now lets visualise this as a forest plot forest(net_con, reference.group = 4, rightcols=c(&quot;effect&quot;, &quot;ci&quot;, &quot;Pscore&quot;), rightlabs=&quot;P-Score&quot;, small.values = &quot;bad&quot;) The netmeta analysis suggests the spray scheduale commencing early are no different to any other treatment including the no spray control. It estimates the mean is very similar to the recommended treatments. The recommended plus and late_plus treatments show higher mean estimates, however not significantly different from the early estimate. netgraph(net_con, plastic = FALSE, col = &quot;orange&quot;, thickness = &quot;number.of.studies&quot;, points = FALSE, col.points = &quot;black&quot;, cex.points = 1, number.of.studies = TRUE, cex.number.of.studies = 1, col.number.of.studies = &quot;black&quot;, bg.number.of.studies = &quot;orange&quot;, multiarm = FALSE, col.multiarm = &quot;lightblue&quot;, pos.number.of.studies = 0.5) netleague(net_con) ## League table (fixed effect model): ## ## control -0.1195 [-0.1977; -0.0412] ## -0.0990 [-0.1701; -0.0279] Early ## -0.0023 [-0.0209; 0.0163] 0.0967 [ 0.0237; 0.1698] ## -0.0731 [-0.0869; -0.0593] 0.0259 [-0.0458; 0.0977] ## -0.0685 [-0.0825; -0.0545] 0.0306 [-0.0413; 0.1024] ## ## -0.0005 [-0.0210; 0.0199] -0.0778 [-0.0917; -0.0639] ## . -0.0587 [-0.1842; 0.0669] ## Late_plus -0.0955 [-0.1152; -0.0758] ## -0.0708 [-0.0890; -0.0526] Recommended ## -0.0662 [-0.0845; -0.0478] 0.0046 [-0.0088; 0.0181] ## ## -0.0681 [-0.0822; -0.0539] ## -0.0116 [-0.1421; 0.1190] ## -0.0417 [-0.0619; -0.0215] ## 0.0060 [-0.0075; 0.0195] ## Recommended_plus ## ## League table (random effects model): ## ## control -0.0917 [-0.2386; 0.0553] ## -0.0712 [-0.1988; 0.0565] Early ## -0.1128 [-0.2147; -0.0109] -0.0416 [-0.1991; 0.1159] ## -0.0865 [-0.1496; -0.0235] -0.0154 [-0.1457; 0.1149] ## -0.1065 [-0.1718; -0.0411] -0.0353 [-0.1663; 0.0957] ## ## -0.1204 [-0.2353; -0.0055] -0.0822 [-0.1461; -0.0182] ## . -0.0678 [-0.2362; 0.1006] ## Late_plus 0.0137 [-0.1173; 0.1446] ## 0.0262 [-0.0789; 0.1314] Recommended ## 0.0063 [-0.0994; 0.1120] -0.0200 [-0.0856; 0.0457] ## ## -0.1014 [-0.1686; -0.0343] ## -0.0366 [-0.2072; 0.1340] ## -0.0120 [-0.1425; 0.1185] ## -0.0193 [-0.0857; 0.0471] ## Recommended_plus decomp.design(net_con) ## Q statistics to assess homogeneity / consistency ## ## Q df p-value ## Total 617.16 50 &lt; 0.0001 ## Within designs 556.26 43 &lt; 0.0001 ## Between designs 60.89 7 &lt; 0.0001 ## ## Design-specific decomposition of within-designs Q statistic ## ## Design Q df p-value ## control:Late_plus 0.82 2 0.6643 ## control:Recommended 0.15 1 0.7012 ## control:Early:Recommended:Recommended_plus 10.99 15 0.7536 ## control:Late_plus:Recommended:Recommended_plus 83.01 9 &lt; 0.0001 ## control:Recommended:Recommended_plus 461.30 16 &lt; 0.0001 ## ## Between-designs Q statistic after detaching of single designs ## ## Detached design Q df p-value ## control:Early 58.86 6 &lt; 0.0001 ## control:Late_plus 57.12 6 &lt; 0.0001 ## control:Recommended 60.87 6 &lt; 0.0001 ## control:Early:Recommended:Recommended_plus 58.20 4 &lt; 0.0001 ## control:Late_plus:Recommended:Recommended_plus 4.65 4 0.3257 ## control:Recommended:Recommended_plus 6.25 5 0.2828 ## ## Q statistic to assess consistency under the assumption of ## a full design-by-treatment interaction random effects model ## ## Q df p-value tau.within tau2.within ## Between designs 1.22 7 0.9904 0.1400 0.0196 netsplit(net_con) ## Back-calculation method to split direct and indirect evidence ## ## Fixed effect model: ## ## comparison k prop nma direct indir. Diff z p-value ## control:Early 7 0.83 -0.0990 -0.1195 -0.0021 -0.1174 -1.23 0.2200 ## control:Late_plus 7 0.82 -0.0023 -0.0005 -0.0106 0.0100 0.40 0.6863 ## control:Recommended 21 0.99 -0.0731 -0.0778 0.3437 -0.4215 -6.28 &lt; 0.0001 ## control:Recommended_plus 19 0.98 -0.0685 -0.0681 -0.0915 0.0234 0.43 0.6642 ## Early:Late_plus 0 0 0.0967 . 0.0967 . . . ## Early:Recommended 6 0.33 0.0259 -0.0587 0.0670 -0.1256 -1.61 0.1075 ## Early:Recommended_plus 6 0.30 0.0306 -0.0116 0.0488 -0.0604 -0.76 0.4489 ## Late_plus:Recommended 4 0.85 -0.0708 -0.0955 0.0665 -0.1620 -6.29 &lt; 0.0001 ## Late_plus:Recommended_plus 4 0.83 -0.0662 -0.0417 -0.1855 0.1438 5.77 &lt; 0.0001 ## Recommended:Recommended_plus 19 0.99 0.0046 0.0060 -0.2470 0.2530 2.74 0.0062 ## ## Random effects model: ## ## comparison k prop nma direct indir. Diff z p-value ## control:Early 7 0.75 -0.0712 -0.0917 -0.0082 -0.0834 -0.55 0.5811 ## control:Late_plus 7 0.79 -0.1128 -0.1204 -0.0847 -0.0357 -0.28 0.7783 ## control:Recommended 21 0.97 -0.0865 -0.0822 -0.2338 0.1516 0.79 0.4310 ## control:Recommended_plus 19 0.95 -0.1065 -0.1014 -0.1956 0.0942 0.64 0.5250 ## Early:Late_plus 0 0 -0.0416 . -0.0416 . . . ## Early:Recommended 6 0.60 -0.0154 -0.0678 0.0628 -0.1307 -0.96 0.3352 ## Early:Recommended_plus 6 0.59 -0.0353 -0.0366 -0.0335 -0.0031 -0.02 0.9816 ## Late_plus:Recommended 4 0.64 0.0262 0.0137 0.0490 -0.0353 -0.32 0.7524 ## Late_plus:Recommended_plus 4 0.66 0.0063 -0.0120 0.0411 -0.0531 -0.47 0.6398 ## Recommended:Recommended_plus 19 0.98 -0.0200 -0.0193 -0.0469 0.0276 0.13 0.8999 ## ## Legend: ## comparison - Treatment comparison ## k - Number of studies providing direct evidence ## prop - Direct evidence proportion ## nma - Estimated treatment effect (MD) in network meta-analysis ## direct - Estimated treatment effect (MD) derived from direct evidence ## indir. - Estimated treatment effect (MD) derived from indirect evidence ## Diff - Difference between direct and indirect treatment estimates ## z - z-value of test for disagreement (direct versus indirect) ## p-value - p-value of test for disagreement (direct versus indirect) nm1 &lt;- netmeasures(net_con) plot(nm1$meanpath, nm1$minpar, pch=&quot;&quot;, xlab=&quot;Mean path length&quot;, ylab=&quot;Minimal parallelism&quot;) text(nm1$meanpath, nm1$minpar, names(nm1$meanpath), cex=0.8) write.csv(slimmer_PM_dat, file = &quot;data/GYmeta_data.csv&quot;) # install.packages(&quot;tidyverse&quot;) # install.packages(&quot;devtools&quot;) # devtools::install_github(&quot;https://github.com/PaulMelloy/bomrang&quot;) # devtools::install_github(&quot;https://github.com/adamhsparks/theme.usq&quot;, dependencies = TRUE) # install.packages(&quot;lme4&quot;) library(RColorBrewer) library(tidyverse) library(theme.usq) library(bomrang) library(lme4) library(kableExtra) # Data PM_Mdat &lt;- read.csv(&quot;data/GYmeta_data.csv&quot;) "],
["aupdc-meta-analysis.html", "7 AUPDC meta-analysis 7.1 AUPDC impact on grain yield meta-analysis 7.2 Who are the intended readers? - list 3 to 5 of them by name 7.3 what did you do? (limit - 50 words) 7.4 Why did you do it? (limit - 50 words) 7.5 what happened? (limit - 50 words) 7.6 What do the results mean in theory? (limit - 50 words) 7.7 What do the results mean in practice? (limit - 50 words) 7.8 what is the key benefit for your readers? (limit - 25 words). 7.9 What remains unresolved? (no word limit).", " 7 AUPDC meta-analysis Now it’s time to look at how the spray managment scenarios might impact disease pressure on the mungbean yields. First lets evaulate which measure of disease is the most robust predictor for yield loss, AUDPC, AUDPS or disease incidence at the end of the season. library(MuMIn) summary(lm(grain_yield.t.ha ~ AUDPC_m, data = PM_Mdat)) ## ## Call: ## lm(formula = grain_yield.t.ha ~ AUDPC_m, data = PM_Mdat) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.9294 -0.4807 -0.1205 0.4043 1.3520 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.0221208 0.0995312 10.269 &lt;2e-16 *** ## AUDPC_m 0.0009609 0.0006561 1.465 0.145 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.581 on 149 degrees of freedom ## Multiple R-squared: 0.01419, Adjusted R-squared: 0.007575 ## F-statistic: 2.145 on 1 and 149 DF, p-value: 0.1452 summary(lm(grain_yield.t.ha ~ AUDPS_m, data = PM_Mdat)) ## ## Call: ## lm(formula = grain_yield.t.ha ~ AUDPS_m, data = PM_Mdat) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8727 -0.4965 -0.1284 0.4295 1.3675 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.0784325 0.1073514 10.046 &lt;2e-16 *** ## AUDPS_m 0.0004305 0.0005758 0.748 0.456 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.584 on 149 degrees of freedom ## Multiple R-squared: 0.003737, Adjusted R-squared: -0.002949 ## F-statistic: 0.5589 on 1 and 149 DF, p-value: 0.4559 Area under the disease progress stairs (AUDPS) shows almost the same fit as the AUDPC linear model. AUDPC and AUDPS are not good predictors of loss in yield overall, without the inclusion of a trial parameter. Lets test the model with the inclusion of trial as a random effect. Me_mod1 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m + (1|trial), data = PM_Mdat) summary(Me_mod1) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: grain_yield.t.ha ~ AUDPC_m + (1 | trial) ## Data: PM_Mdat ## ## REML criterion at convergence: -3.7 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.4415 -0.4119 0.0234 0.4899 2.7098 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trial (Intercept) 0.3110 0.5577 ## Residual 0.0261 0.1615 ## Number of obs: 151, groups: trial, 25 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) 1.3035690 0.1182534 11.024 ## AUDPC_m -0.0014604 0.0003366 -4.339 ## ## Correlation of Fixed Effects: ## (Intr) ## AUDPC_m -0.306 r.squaredGLMM(Me_mod1) ## Warning: &#39;r.squaredGLMM&#39; now calculates a revised statistic. See the help page. ## R2m R2c ## [1,] 0.03201205 0.9250642 Me_mod1.s &lt;- lmer(grain_yield.t.ha ~ AUDPS_m + (1|trial), data = PM_Mdat) summary(Me_mod1.s) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: grain_yield.t.ha ~ AUDPS_m + (1 | trial) ## Data: PM_Mdat ## ## REML criterion at convergence: -2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.4170 -0.4064 0.0004 0.4787 2.8213 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trial (Intercept) 0.3007 0.5484 ## Residual 0.0265 0.1628 ## Number of obs: 151, groups: trial, 25 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) 1.2926678 0.1161732 11.127 ## AUDPS_m -0.0010396 0.0002496 -4.165 ## ## Correlation of Fixed Effects: ## (Intr) ## AUDPS_m -0.302 r.squaredGLMM(Me_mod1) ## R2m R2c ## [1,] 0.03201205 0.9250642 r.squaredGLMM(Me_mod1.s) ## R2m R2c ## [1,] 0.02215256 0.9207936 anova(Me_mod1,Me_mod1.s) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod1: grain_yield.t.ha ~ AUDPC_m + (1 | trial) ## Me_mod1.s: grain_yield.t.ha ~ AUDPS_m + (1 | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod1 4 -12.419 -0.34968 10.2094 -20.419 ## Me_mod1.s 4 -11.293 0.77649 9.6463 -19.293 0 0 1 AUDPC becomes a significant predictor of grain yield when the random effect when accounting for trial. However we noticed in the plots earlier that not only the intercept but the slope varies depending on the trial. Lets see if the model improves when AUDPC is used as a random slope for trial. Me_mod2 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m + (AUDPC_m|trial), data = PM_Mdat) ## boundary (singular) fit: see ?isSingular anova(Me_mod1, Me_mod2) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod1: grain_yield.t.ha ~ AUDPC_m + (1 | trial) ## Me_mod2: grain_yield.t.ha ~ AUDPC_m + (AUDPC_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod1 4 -12.419 -0.3497 10.209 -20.419 ## Me_mod2 6 -44.635 -26.5310 28.317 -56.635 36.216 2 1.367e-08 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The model is significantly improved, lower AIC and a higher log likelihood. Lets see if AUDPS improves in the same way. Me_mod2.s &lt;- lmer(grain_yield.t.ha ~ AUDPS_m + (AUDPS_m|trial), data = PM_Mdat) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : ## Model failed to converge with max|grad| = 6.55841 (tol = 0.002, component 1) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue ## - Rescale variables? anova(Me_mod1.s, Me_mod2.s) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod1.s: grain_yield.t.ha ~ AUDPS_m + (1 | trial) ## Me_mod2.s: grain_yield.t.ha ~ AUDPS_m + (AUDPS_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod1.s 4 -11.293 0.7765 9.6463 -19.293 ## Me_mod2.s 6 -42.413 -24.3096 27.2066 -54.413 35.121 2 2.364e-08 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The model did improve, however AUDPC still shows a better fit as shown by a lower AIC and a model which converged. r.squaredGLMM(Me_mod2.s) # Rsquared for AUDPStairs ## R2m R2c ## [1,] 0.06548174 0.8894353 r.squaredGLMM(Me_mod2)# Rsquared for AUDPCurve ## R2m R2c ## [1,] 0.07195443 0.9389716 The R-squared of the AUDPC model is a better fit compared to the AUDPS model. &gt; From here on we will use AUDPC. Lets compare the area under the disease progress curve (AUDPC) to final severity. Me_mod3 &lt;- lmer(grain_yield.t.ha ~ PM_final_severity + (1|trial), data = PM_Mdat) Me_mod4 &lt;- lmer(grain_yield.t.ha ~ PM_final_severity + (PM_final_severity|trial), data = PM_Mdat) anova(Me_mod3, Me_mod4) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod3: grain_yield.t.ha ~ PM_final_severity + (1 | trial) ## Me_mod4: grain_yield.t.ha ~ PM_final_severity + (PM_final_severity | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod3 4 -3.5510 8.5182 5.7755 -11.551 ## Me_mod4 6 -9.8078 8.2958 10.9039 -21.808 10.257 2 0.005926 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(Me_mod4) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: grain_yield.t.ha ~ PM_final_severity + (PM_final_severity | trial) ## Data: PM_Mdat ## ## REML criterion at convergence: -12.6 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.2263 -0.3692 -0.0108 0.4447 2.6711 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## trial (Intercept) 1.074235 1.03645 ## PM_final_severity 0.005434 0.07372 -0.95 ## Residual 0.022615 0.15038 ## Number of obs: 151, groups: trial, 25 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) 1.49420 0.21965 6.803 ## PM_final_severity -0.05073 0.01845 -2.749 ## ## Correlation of Fixed Effects: ## (Intr) ## PM_fnl_svrt -0.911 r.squaredGLMM(Me_mod4) ## R2m R2c ## [1,] 0.02810037 0.9450104 # PM_final_incidence vs AUDPC anova(Me_mod4,Me_mod2) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod4: grain_yield.t.ha ~ PM_final_severity + (PM_final_severity | trial) ## Me_mod2: grain_yield.t.ha ~ AUDPC_m + (AUDPC_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod4 6 -9.808 8.2958 10.904 -21.808 ## Me_mod2 6 -44.635 -26.5310 28.317 -56.635 34.827 0 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Powdery mildew incidence at the end of the season was a significant covariate for grain yield, however was a weeker predictor compared to AUDPC. In addition model comparison shows AUDPC is significantly better at predicting grain yield. ### Spray management and AUDPC We shall proceed by including the spray management predictor into the analysis. First lets assess the spray_management variable as an additive fixed effect. Me_mod5 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m + spray_management+ (AUDPC_m|trial), data = PM_Mdat) ## boundary (singular) fit: see ?isSingular anova(Me_mod2, Me_mod5) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod2: grain_yield.t.ha ~ AUDPC_m + (AUDPC_m | trial) ## Me_mod5: grain_yield.t.ha ~ AUDPC_m + spray_management + (AUDPC_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod2 6 -44.635 -26.531 28.317 -56.635 ## Me_mod5 10 -50.054 -19.881 35.027 -70.054 13.419 4 0.0094 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 This model is significantly better and shows a lower AIC. However makes more sense to use spray_management as a interactive term with AUDPC_m. As you would assume AUDPC would be dependant on the spray_management. It is also worth noting there is no reason to include these parameters individually in the model to assess their independant effect on grain yield as we know the application of fungicide to mitigate yield loss is aimed at reducing the disease in the crop. Me_mod6 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m : spray_management+ (AUDPC_m|trial), data = PM_Mdat) ## boundary (singular) fit: see ?isSingular anova(Me_mod5, Me_mod6) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod5: grain_yield.t.ha ~ AUDPC_m + spray_management + (AUDPC_m | trial) ## Me_mod6: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod5 10 -50.054 -19.881 35.027 -70.054 ## Me_mod6 10 -58.690 -28.517 39.345 -78.690 8.6366 0 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 I will try to use the AUDPC:spray_management interative term as a random effect slope to trial, however I think this may overfit the model preventing convergance. Me_mod8 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m : spray_management + (AUDPC_m: spray_management|trial), data = PM_Mdat) ## boundary (singular) fit: see ?isSingular anova(Me_mod6, Me_mod8) ## refitting model(s) with ML (instead of REML) ## Warning in optwrap(optimizer, devfun, x@theta, lower = x@lower, calc.derivs = ## TRUE, : convergence code 1 from bobyqa: bobyqa -- maximum number of function ## evaluations exceeded ## Data: PM_Mdat ## Models: ## Me_mod6: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m | trial) ## Me_mod8: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m:spray_management | ## Me_mod8: trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod6 10 -58.69 -28.52 39.345 -78.69 ## Me_mod8 28 352.89 437.37 -148.445 296.89 0 18 1 Me_mod9 &lt;- lmer(grain_yield.t.ha ~ AUDPC_m : spray_management + (1|trial), data = PM_Mdat) anova(Me_mod6, Me_mod8) ## refitting model(s) with ML (instead of REML) ## Warning in optwrap(optimizer, devfun, x@theta, lower = x@lower, calc.derivs = ## TRUE, : convergence code 1 from bobyqa: bobyqa -- maximum number of function ## evaluations exceeded ## Data: PM_Mdat ## Models: ## Me_mod6: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m | trial) ## Me_mod8: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m:spray_management | ## Me_mod8: trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod6 10 -58.69 -28.52 39.345 -78.69 ## Me_mod8 28 352.89 437.37 -148.445 296.89 0 18 1 anova(Me_mod6, Me_mod9) ## refitting model(s) with ML (instead of REML) ## Data: PM_Mdat ## Models: ## Me_mod9: grain_yield.t.ha ~ AUDPC_m:spray_management + (1 | trial) ## Me_mod6: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m | trial) ## Df AIC BIC logLik deviance Chisq Chi Df Pr(&gt;Chisq) ## Me_mod9 8 -35.101 -10.963 25.550 -51.101 ## Me_mod6 10 -58.690 -28.517 39.345 -78.690 27.589 2 1.021e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 As expected the model produced an error warning stating the maximum number of evaluations were exceeded. Also the model comparisons show that the newer Me_mod7 was not a better model. We we proceed with Me_mod6 as the model with the best fit. summary(Me_mod6) ## Linear mixed model fit by REML [&#39;lmerMod&#39;] ## Formula: grain_yield.t.ha ~ AUDPC_m:spray_management + (AUDPC_m | trial) ## Data: PM_Mdat ## ## REML criterion at convergence: -2.7 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.0415 -0.5173 0.0379 0.5785 2.5191 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## trial (Intercept) 5.625e-01 0.749971 ## AUDPC_m 2.553e-06 0.001598 -1.00 ## Residual 1.682e-02 0.129702 ## Number of obs: 151, groups: trial, 25 ## ## Fixed effects: ## Estimate Std. Error t value ## (Intercept) 1.2888546 0.1562761 8.247 ## AUDPC_m:spray_managementcontrol -0.0014743 0.0004300 -3.429 ## AUDPC_m:spray_managementEarly -0.0013918 0.0005228 -2.662 ## AUDPC_m:spray_managementLate_plus -0.0005182 0.0006266 -0.827 ## AUDPC_m:spray_managementRecommended -0.0011849 0.0005153 -2.299 ## AUDPC_m:spray_managementRecommended_plus -0.0003999 0.0005665 -0.706 ## ## Correlation of Fixed Effects: ## (Intr) AUDPC_m:_ AUDPC_:_E AUDPC_:_L AUDPC_m:_R ## AUDPC_m:sp_ -0.886 ## AUDPC_m:s_E -0.770 0.873 ## AUDPC_m:_L_ -0.676 0.790 0.700 ## AUDPC_m:s_R -0.786 0.891 0.860 0.721 ## AUDPC_m:_R_ -0.749 0.891 0.880 0.724 0.896 ## convergence code: 0 ## boundary (singular) fit: see ?isSingular coef(Me_mod6)[[&quot;trial&quot;]][ order(coef(Me_mod6)[[&quot;trial&quot;]]$AUDPC_m),] ## AUDPC_m (Intercept) ## mung1617/02_2017_Missen Flats_Jade_0.25 -3.572831e-03 2.9660057 ## mung1617/02_2017_Missen Flats_Jade_0.5 -2.673825e-03 2.5439962 ## mung1516/01_2016_Hermitage_Jade_0.75 -2.449542e-03 2.4387134 ## mung1415/01_2015_Hermitage_Jade_0.75 -2.151785e-03 2.2989410 ## mung1617/02_2017_Missen Flats_Jade_1 -1.711057e-03 2.0920552 ## mung1718/01_2018_Wellcamp_Jade_0.25 -1.101362e-03 1.8058538 ## mung1011/01_2011_Hermitage_Berken_0.75 -1.021113e-03 1.7681831 ## mung1718/01_2018_Wellcamp_Jade_0.5 -9.805804e-04 1.7491566 ## mung1011/01_2011_Hermitage_Crystal_0.75 -4.849559e-04 1.5165016 ## AM1303_2013_Premer_Crystal_NA -2.484830e-04 1.4054970 ## mung1718/01_2018_Wellcamp_Jade_1 1.626662e-05 1.2812187 ## AM1304_2013_Mary&#39;s mount_Crystal_1 1.182800e-04 1.2333318 ## mung1112/02_2012_Kingaroy_Crystal_0.75 1.630023e-04 1.2123384 ## mung1011/02_2011_Kingaroy_Berken_0.75 5.366908e-04 1.0369223 ## mung1516/02_2016_Kingaroy_Jade_0.75 7.444163e-04 0.9394122 ## mung1112/01_2012_Gatton_Crystal_0.75 8.186768e-04 0.9045530 ## mung1516/03_2016_Emerald_Jade_0.75 9.644481e-04 0.8361253 ## mung1011/02_2011_Kingaroy_Crystal_0.75 9.965746e-04 0.8210445 ## BB1305_2013_Millmerran_Crystal_0.333333333 1.073074e-03 0.7851344 ## AM1305_2013_Goolhi_Crystal_0.33 1.316945e-03 0.6706571 ## mung1819/01_2019_Hermitage_Jade_0.25 1.559856e-03 0.5566303 ## mung1617/01_2017_Hermitage_Jade_0.5 1.857566e-03 0.4168795 ## mung1617/01_2017_Hermitage_Jade_1 1.990960e-03 0.3542623 ## mung1617/01_2017_Hermitage_Jade_0.25 2.015481e-03 0.3427518 ## mung1819/02_2019_Hermitage_Jade_0.25 2.223297e-03 0.2451992 ## AUDPC_m:spray_managementcontrol ## mung1617/02_2017_Missen Flats_Jade_0.25 -0.001474322 ## mung1617/02_2017_Missen Flats_Jade_0.5 -0.001474322 ## mung1516/01_2016_Hermitage_Jade_0.75 -0.001474322 ## mung1415/01_2015_Hermitage_Jade_0.75 -0.001474322 ## mung1617/02_2017_Missen Flats_Jade_1 -0.001474322 ## mung1718/01_2018_Wellcamp_Jade_0.25 -0.001474322 ## mung1011/01_2011_Hermitage_Berken_0.75 -0.001474322 ## mung1718/01_2018_Wellcamp_Jade_0.5 -0.001474322 ## mung1011/01_2011_Hermitage_Crystal_0.75 -0.001474322 ## AM1303_2013_Premer_Crystal_NA -0.001474322 ## mung1718/01_2018_Wellcamp_Jade_1 -0.001474322 ## AM1304_2013_Mary&#39;s mount_Crystal_1 -0.001474322 ## mung1112/02_2012_Kingaroy_Crystal_0.75 -0.001474322 ## mung1011/02_2011_Kingaroy_Berken_0.75 -0.001474322 ## mung1516/02_2016_Kingaroy_Jade_0.75 -0.001474322 ## mung1112/01_2012_Gatton_Crystal_0.75 -0.001474322 ## mung1516/03_2016_Emerald_Jade_0.75 -0.001474322 ## mung1011/02_2011_Kingaroy_Crystal_0.75 -0.001474322 ## BB1305_2013_Millmerran_Crystal_0.333333333 -0.001474322 ## AM1305_2013_Goolhi_Crystal_0.33 -0.001474322 ## mung1819/01_2019_Hermitage_Jade_0.25 -0.001474322 ## mung1617/01_2017_Hermitage_Jade_0.5 -0.001474322 ## mung1617/01_2017_Hermitage_Jade_1 -0.001474322 ## mung1617/01_2017_Hermitage_Jade_0.25 -0.001474322 ## mung1819/02_2019_Hermitage_Jade_0.25 -0.001474322 ## AUDPC_m:spray_managementEarly ## mung1617/02_2017_Missen Flats_Jade_0.25 -0.001391818 ## mung1617/02_2017_Missen Flats_Jade_0.5 -0.001391818 ## mung1516/01_2016_Hermitage_Jade_0.75 -0.001391818 ## mung1415/01_2015_Hermitage_Jade_0.75 -0.001391818 ## mung1617/02_2017_Missen Flats_Jade_1 -0.001391818 ## mung1718/01_2018_Wellcamp_Jade_0.25 -0.001391818 ## mung1011/01_2011_Hermitage_Berken_0.75 -0.001391818 ## mung1718/01_2018_Wellcamp_Jade_0.5 -0.001391818 ## mung1011/01_2011_Hermitage_Crystal_0.75 -0.001391818 ## AM1303_2013_Premer_Crystal_NA -0.001391818 ## mung1718/01_2018_Wellcamp_Jade_1 -0.001391818 ## AM1304_2013_Mary&#39;s mount_Crystal_1 -0.001391818 ## mung1112/02_2012_Kingaroy_Crystal_0.75 -0.001391818 ## mung1011/02_2011_Kingaroy_Berken_0.75 -0.001391818 ## mung1516/02_2016_Kingaroy_Jade_0.75 -0.001391818 ## mung1112/01_2012_Gatton_Crystal_0.75 -0.001391818 ## mung1516/03_2016_Emerald_Jade_0.75 -0.001391818 ## mung1011/02_2011_Kingaroy_Crystal_0.75 -0.001391818 ## BB1305_2013_Millmerran_Crystal_0.333333333 -0.001391818 ## AM1305_2013_Goolhi_Crystal_0.33 -0.001391818 ## mung1819/01_2019_Hermitage_Jade_0.25 -0.001391818 ## mung1617/01_2017_Hermitage_Jade_0.5 -0.001391818 ## mung1617/01_2017_Hermitage_Jade_1 -0.001391818 ## mung1617/01_2017_Hermitage_Jade_0.25 -0.001391818 ## mung1819/02_2019_Hermitage_Jade_0.25 -0.001391818 ## AUDPC_m:spray_managementLate_plus ## mung1617/02_2017_Missen Flats_Jade_0.25 -0.0005182024 ## mung1617/02_2017_Missen Flats_Jade_0.5 -0.0005182024 ## mung1516/01_2016_Hermitage_Jade_0.75 -0.0005182024 ## mung1415/01_2015_Hermitage_Jade_0.75 -0.0005182024 ## mung1617/02_2017_Missen Flats_Jade_1 -0.0005182024 ## mung1718/01_2018_Wellcamp_Jade_0.25 -0.0005182024 ## mung1011/01_2011_Hermitage_Berken_0.75 -0.0005182024 ## mung1718/01_2018_Wellcamp_Jade_0.5 -0.0005182024 ## mung1011/01_2011_Hermitage_Crystal_0.75 -0.0005182024 ## AM1303_2013_Premer_Crystal_NA -0.0005182024 ## mung1718/01_2018_Wellcamp_Jade_1 -0.0005182024 ## AM1304_2013_Mary&#39;s mount_Crystal_1 -0.0005182024 ## mung1112/02_2012_Kingaroy_Crystal_0.75 -0.0005182024 ## mung1011/02_2011_Kingaroy_Berken_0.75 -0.0005182024 ## mung1516/02_2016_Kingaroy_Jade_0.75 -0.0005182024 ## mung1112/01_2012_Gatton_Crystal_0.75 -0.0005182024 ## mung1516/03_2016_Emerald_Jade_0.75 -0.0005182024 ## mung1011/02_2011_Kingaroy_Crystal_0.75 -0.0005182024 ## BB1305_2013_Millmerran_Crystal_0.333333333 -0.0005182024 ## AM1305_2013_Goolhi_Crystal_0.33 -0.0005182024 ## mung1819/01_2019_Hermitage_Jade_0.25 -0.0005182024 ## mung1617/01_2017_Hermitage_Jade_0.5 -0.0005182024 ## mung1617/01_2017_Hermitage_Jade_1 -0.0005182024 ## mung1617/01_2017_Hermitage_Jade_0.25 -0.0005182024 ## mung1819/02_2019_Hermitage_Jade_0.25 -0.0005182024 ## AUDPC_m:spray_managementRecommended ## mung1617/02_2017_Missen Flats_Jade_0.25 -0.001184883 ## mung1617/02_2017_Missen Flats_Jade_0.5 -0.001184883 ## mung1516/01_2016_Hermitage_Jade_0.75 -0.001184883 ## mung1415/01_2015_Hermitage_Jade_0.75 -0.001184883 ## mung1617/02_2017_Missen Flats_Jade_1 -0.001184883 ## mung1718/01_2018_Wellcamp_Jade_0.25 -0.001184883 ## mung1011/01_2011_Hermitage_Berken_0.75 -0.001184883 ## mung1718/01_2018_Wellcamp_Jade_0.5 -0.001184883 ## mung1011/01_2011_Hermitage_Crystal_0.75 -0.001184883 ## AM1303_2013_Premer_Crystal_NA -0.001184883 ## mung1718/01_2018_Wellcamp_Jade_1 -0.001184883 ## AM1304_2013_Mary&#39;s mount_Crystal_1 -0.001184883 ## mung1112/02_2012_Kingaroy_Crystal_0.75 -0.001184883 ## mung1011/02_2011_Kingaroy_Berken_0.75 -0.001184883 ## mung1516/02_2016_Kingaroy_Jade_0.75 -0.001184883 ## mung1112/01_2012_Gatton_Crystal_0.75 -0.001184883 ## mung1516/03_2016_Emerald_Jade_0.75 -0.001184883 ## mung1011/02_2011_Kingaroy_Crystal_0.75 -0.001184883 ## BB1305_2013_Millmerran_Crystal_0.333333333 -0.001184883 ## AM1305_2013_Goolhi_Crystal_0.33 -0.001184883 ## mung1819/01_2019_Hermitage_Jade_0.25 -0.001184883 ## mung1617/01_2017_Hermitage_Jade_0.5 -0.001184883 ## mung1617/01_2017_Hermitage_Jade_1 -0.001184883 ## mung1617/01_2017_Hermitage_Jade_0.25 -0.001184883 ## mung1819/02_2019_Hermitage_Jade_0.25 -0.001184883 ## AUDPC_m:spray_managementRecommended_plus ## mung1617/02_2017_Missen Flats_Jade_0.25 -0.000399935 ## mung1617/02_2017_Missen Flats_Jade_0.5 -0.000399935 ## mung1516/01_2016_Hermitage_Jade_0.75 -0.000399935 ## mung1415/01_2015_Hermitage_Jade_0.75 -0.000399935 ## mung1617/02_2017_Missen Flats_Jade_1 -0.000399935 ## mung1718/01_2018_Wellcamp_Jade_0.25 -0.000399935 ## mung1011/01_2011_Hermitage_Berken_0.75 -0.000399935 ## mung1718/01_2018_Wellcamp_Jade_0.5 -0.000399935 ## mung1011/01_2011_Hermitage_Crystal_0.75 -0.000399935 ## AM1303_2013_Premer_Crystal_NA -0.000399935 ## mung1718/01_2018_Wellcamp_Jade_1 -0.000399935 ## AM1304_2013_Mary&#39;s mount_Crystal_1 -0.000399935 ## mung1112/02_2012_Kingaroy_Crystal_0.75 -0.000399935 ## mung1011/02_2011_Kingaroy_Berken_0.75 -0.000399935 ## mung1516/02_2016_Kingaroy_Jade_0.75 -0.000399935 ## mung1112/01_2012_Gatton_Crystal_0.75 -0.000399935 ## mung1516/03_2016_Emerald_Jade_0.75 -0.000399935 ## mung1011/02_2011_Kingaroy_Crystal_0.75 -0.000399935 ## BB1305_2013_Millmerran_Crystal_0.333333333 -0.000399935 ## AM1305_2013_Goolhi_Crystal_0.33 -0.000399935 ## mung1819/01_2019_Hermitage_Jade_0.25 -0.000399935 ## mung1617/01_2017_Hermitage_Jade_0.5 -0.000399935 ## mung1617/01_2017_Hermitage_Jade_1 -0.000399935 ## mung1617/01_2017_Hermitage_Jade_0.25 -0.000399935 ## mung1819/02_2019_Hermitage_Jade_0.25 -0.000399935 The first output shows our random effects do a good job of explaining the variation leaving less residual variation than what is explained by the random intercept, trial. In the fixed effects the intercept gives an estimate of the average yield across all treatments (1.29 t/Ha). The other fixed effects show the change in predicted yield as AUDPC increases under each of the spray_management factors. Spray_management treatments, control, Early, and recommended show significant declines in grain_yields as AUDPC increases. Recommended_plus and Late_plus show no significant decline in grain yield as AUDPC increases. The second output is the random effect coeficients. Here the intercept represents a yield estimate for each trial without the limitation of the disease. AUDPC_m shows the slope of the regression for grain yield as AUDPC increases. The coefficients of the model (ordered by AUDPC) show that higher yielding trials had a steeper negative slope. In other words higher yielding mungbean crops were likely to see greater losses from disease. 7.1 AUPDC impact on grain yield meta-analysis PM_Mdat$AUDPC_log &lt;- log(PM_Mdat$AUDPC_m) PM_mv_AI &lt;- rma.mv(yi,vi, mods = ~ log(AUDPC_m+1):spray_management, method = &quot;ML&quot;, random = list(~ spray_management | trial), struct = &quot;UN&quot;, data = PM_Mdat) ## Warning: Some combinations of the levels of the inner factor never occurred. ## Corresponding rho value(s) fixed to 0. summary(PM_mv_AI) ## ## Multivariate Meta-Analysis Model (k = 151; method: ML) ## ## logLik Deviance AIC BIC AICc ## 33.7471 315.6772 -27.4942 32.8514 -21.0326 ## ## Variance Components: ## ## outer factor: trial (nlvls = 25) ## inner factor: spray_management (nlvls = 5) ## ## estim sqrt k.lvl fixed level ## tau^2.1 0.2330 0.4827 40 no control ## tau^2.2 0.2225 0.4717 13 no Early ## tau^2.3 0.3129 0.5593 20 no Late_plus ## tau^2.4 0.2693 0.5189 32 no Recommended ## tau^2.5 0.2883 0.5369 46 no Recommended_plus ## ## rho.cntr rho.Erly rho.Lt_p rho.Rcmm rho.Rcm_ cntr ## control 1 0.9840 0.9817 0.9816 0.9649 - ## Early 0.9840 1 0.0000 0.9980 0.9962 7 ## Late_plus 0.9817 0.0000 1 0.9967 0.9972 7 ## Recommended 0.9816 0.9980 0.9967 1 0.9932 21 ## Recommended_plus 0.9649 0.9962 0.9972 0.9932 1 19 ## Erly Lt_p Rcmm Rcm_ ## control no no no no ## Early - yes no no ## Late_plus 0 - no no ## Recommended 6 4 - no ## Recommended_plus 6 4 19 - ## ## Test for Residual Heterogeneity: ## QE(df = 145) = 6713.5662, p-val &lt; .0001 ## ## Test of Moderators (coefficients 2:6): ## QM(df = 5) = 29.9148, p-val &lt; .0001 ## ## Model Results: ## ## estimate se zval ## intrcpt 0.2506 0.1165 2.1498 ## log(AUDPC_m + 1):spray_managementcontrol -0.0614 0.0120 -5.1249 ## log(AUDPC_m + 1):spray_managementEarly -0.0555 0.0161 -3.4404 ## log(AUDPC_m + 1):spray_managementLate_plus -0.0490 0.0109 -4.5005 ## log(AUDPC_m + 1):spray_managementRecommended -0.0419 0.0110 -3.7970 ## log(AUDPC_m + 1):spray_managementRecommended_plus -0.0437 0.0117 -3.7182 ## pval ci.lb ci.ub ## intrcpt 0.0316 0.0221 0.4790 ## log(AUDPC_m + 1):spray_managementcontrol &lt;.0001 -0.0848 -0.0379 ## log(AUDPC_m + 1):spray_managementEarly 0.0006 -0.0871 -0.0239 ## log(AUDPC_m + 1):spray_managementLate_plus &lt;.0001 -0.0703 -0.0277 ## log(AUDPC_m + 1):spray_managementRecommended 0.0001 -0.0635 -0.0203 ## log(AUDPC_m + 1):spray_managementRecommended_plus 0.0002 -0.0667 -0.0206 ## ## intrcpt * ## log(AUDPC_m + 1):spray_managementcontrol *** ## log(AUDPC_m + 1):spray_managementEarly *** ## log(AUDPC_m + 1):spray_managementLate_plus *** ## log(AUDPC_m + 1):spray_managementRecommended *** ## log(AUDPC_m + 1):spray_managementRecommended_plus *** ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 exp(-0.1196) ## [1] 0.8872753 7.2 Who are the intended readers? - list 3 to 5 of them by name Adam Sparks – disease modeller Levente Kiss – Powdery mildew taxonomist Lisa Kelly – Plant pathologist Paul MacIntosh – Mungbean/ pulse agronomist Ross Pomroy – Agronomist Jean Galloway – Plant disease modeller Art Diggle – Plant disease modeller 7.3 what did you do? (limit - 50 words) Undertook a meta-analysis of twenty four field trials aimed at improving the efficiency and timing of fungicides for control of powdery mildew on mungbean. 7.4 Why did you do it? (limit - 50 words) The unpublished field trial data singularly did not provide a clear indication for when to apply fungicide to best mitigate yield losses from powdery mildew. By analysing the collective data we aim to provide a better estimate for fungicide application timing to mitigate the yield loss from powdery mildew. 7.5 what happened? (limit - 50 words) We found that fungicide sprays prior to when the powdery mildew was first spotted in the mungbean crop on average provided the no yield protection. A fungicide spray schedule of one or more fungicide applications commencing within three days of first sign of the disease significantly mitigated yield loss to the disease. However a fungicide spray schedule of 2 or more applications commencing four days or later than first sign of disease saved the most yield. 7.6 What do the results mean in theory? (limit - 50 words) Fungicide spray schedules for control of powdery mildew in mungbean should commence around seven to nine days following the first signs of the disease. 7.7 What do the results mean in practice? (limit - 50 words) Primarily that fungicide spray schedules that commence prior to signs of the disease establishing in the mungbean canopy are likely to be ineffective at mitigating the diseases impact on yield. We also don’t have data on at what point is starting a fungicide spray schedule is too late. Growers can’t scout their crop three times a week in the fashion of researchers and are unlikely to identify the true date when signs of powdery mildew become apparent. Therefore these results reinforce the message to growers to spray for powdery mildew as soon as it is observed in the crop to protect yields. 7.8 what is the key benefit for your readers? (limit - 25 words). This study is the most robust analysis of management of powdery mildew in mungbean using fungicides. It provide a more certain time frame for growers to plan for when to commence a fungicide spray schedule. Fewer fungicide applications will reduce costs for growers and prolong the efficacy of fungicides before the disease develops resistance. 7.9 What remains unresolved? (no word limit). Within the meta-analysis, some comparisons between spray management factors contained fewer replicates in comparison to other spray management factor combinations. Only a few studies incorporated in the meta-analysis contained comparisons between the “Late plus” factor and the: negative spray control, a single spray at first sign, and spray at first sign with one or more follow-up applications. "]
]
