[["trials-considered-for-inclusion-in-meta-analysis.html", "2 Trials considered for inclusion in meta-analysis 2.1 Criteria for inclusion in meta-analysis 2.2 Import data and apply selection criteria 2.3 Subset data to selection criteria", " 2 Trials considered for inclusion in meta-analysis Trials testing fungicide efficacy on powdery mildew in mungbean in the Grains Research and Development Corporation (GRDC) northern grains region were sourced for a meta-analysis. Data was collected from a number of researchers from the Department of Agriculture and Primary Industries and the University of Southern Queensland and the National Growers Association. We would like to acknowledge in particular Professor Malcolm Riley’s and Dr. Sue Thompson’s effort in establishing and coordinating early field trials between 2010 and 2014. 2.1 Criteria for inclusion in meta-analysis A field trial testing the efficacy of fungicide on powdery mildew afflicted mungbean plants. Trial data needed to include: Fungicide active ingredients. A demethylase inhibitor (DMI) fungicide. The date at which powdery mildew first appeared in the trial. Disease severity at the end of the growing seasons. Fungicide application dates. Fungicide dose. Crop yield. Treatment means and accompanying variance. 2.2 Import data and apply selection criteria 2.2.1 Import data from trials we have the raw data PM_MB_raw &lt;- rbind( read.csv( here(&quot;cache/2010 PMmung Hermitage means.csv&quot;), stringsAsFactors = FALSE ), read.csv(here(&quot;cache/2011 PMmung Herm means.csv&quot;), stringsAsFactors = FALSE), read.csv( here(&quot;cache/2011 PMmung Kingaroy means.csv&quot;), stringsAsFactors = FALSE ), read.csv(here(&quot;cache/AM1305_Goolhi_means.csv&quot;), stringsAsFactors = FALSE), read.csv( here(&quot;cache/AM1304-MarysMount_means.csv&quot;), stringsAsFactors = FALSE ), read.csv( here(&quot;cache/AM1303-Premer-Disease_means.csv&quot;), stringsAsFactors = FALSE ), read.csv( here(&quot;cache/BB1305_Millmerran_means.csv&quot;), stringsAsFactors = FALSE ), read.csv(here(&quot;cache/Herm_16_means.csv&quot;), stringsAsFactors = FALSE), read.csv(here(&quot;cache/King_16_means.csv&quot;), stringsAsFactors = FALSE), read.csv(here(&quot;cache/Fogerty_17_mean.csv&quot;), stringsAsFactors = FALSE), read.csv(here(&quot;cache/Hermitage_17_mean.csv&quot;), stringsAsFactors = FALSE), read.csv(here(&quot;cache/Wellcamp_18_mean.csv&quot;), stringsAsFactors = FALSE), read.csv(here(&quot;cache/Hermitage_19_mean.csv&quot;), stringsAsFactors = FALSE) ) write.csv( PM_MB_raw, file = here(&quot;cache/PM_Mungbean_SummaryOfTrialsWithRawData&quot;), row.names = FALSE ) 2.2.2 Import dataset of manual entries Import dataset which were manually entered from trial reports PM_MB_man &lt;- read.csv(here(&quot;cache/PM_Mungbean_DataManuallyEntered.csv&quot;), stringsAsFactors = FALSE) Bind datasets, data set compiled from raw trial data and data manually compiled from trial reports. PM_MB_dat &lt;- rbind(PM_MB_raw, PM_MB_man) 2.2.3 Summary of all trials (#tab:data_summary)Description of Experiments Unique Trial Reference Year Location Replicates per treatments Planting date First sign of disease Fungicide treatments mung0001/01 2001 Bongeen_1 5 2001-02-11 2001-03-16 7 mung0102/01 2002 Bongeen_2 3 NA 2002-02-07 12 mung0102/02 2002 Hermitage 3 - 6 2002-01-29 2002-03-19 13 mung0102/03 2002 Hermitage 3 - 6 2002-02-12 2002-04-04 13 mung0102/04 2002 Kingaroy 8 2002-02-12 2002-04-05 3 mung0304/01 2002 Redvale 7 2004-02-21 2004-03-23 3 mung0910/01 2010 Hermitage 3 2010-01-22 2010-03-18 15 mung0910/02 2010 Kingaroy 3 2010-01-29 2010-03-26 15 mung1011/01 2011 Hermitage 3 - 6 2011-01-24 2011-03-28 12 mung1011/02 2011 Kingaroy 3 2011-02-02 2011-03-22 20 mung1112/01 2012 Gatton 3 2012-02-20 2012-04-02 15 mung1112/02 2012 Kingaroy 3 2012-02-03 2012-03-12 15 AM1303 2013 Premer 3 2012-12-28 2013-02-28 11 AM1304 2013 Marys Mount 3 - 4 2012-12-24 2013-03-16 11 AM1305 2013 Goolhi 4 2013-01-23 2013-03-25 11 BB1305 2013 Millmerran 4 2013-01-12 2013-03-13 11 mung1415/01 2015 Hermitage 5 2015-01-19 2015-03-16 6 mung1415/02 2015 Dalby 5 2015-01-06 2015-03-02 1 mung1516/01 2016 Hermitage 4 2016-02-03 2016-03-08 7 mung1516/02 2016 Kingaroy 4 2016-02-11 2016-03-09 7 mung1516/03 2016 Emerald 4 2016-02-12 2016-03-17 7 mung1617/01 2017 Hermitage 3 2017-02-13 2017-03-24 54 mung1617/02 2017 Missen Flats 3 2017-01-27 2017-03-07 54 mung1718/01 2018 Wellcamp 3 2018-02-13 2018-03-21 24 mung1819/01 2019 Hermitage 6 2018-02-04 2018-04-12 4 mung1819/02 2019 Hermitage 5 - 6 2018-02-18 2018-04-12 4 2.2.4 Experiment locations The following map displays experiment locations in the GRDC Northern Grains Region, which were considered for inclusion in this meta-analysis. 2.3 Subset data to selection criteria Let’s apply the selection criteria our dataset. All trials identified for this meta-analysis reported: fungicide active ingredient, dose, first sign of disease. Therefore no trials need to be removed to satisfy these criteria. Three trials omitted due to not reporting yields PM_MB_dat %&gt;% filter(is.na(grain_yield.t.ha.)) %&gt;% distinct(trial_ref, year, location) ## trial_ref year location ## 1 mung0102/01 2002 Bongeen_2 ## 2 mung0102/02 2002 Hermitage ## 3 mung0102/03 2002 Hermitage PM_MB_dat &lt;- PM_MB_dat %&gt;% filter(!is.na(grain_yield.t.ha.)) One more was trial removed as it did not report disease severity. PM_MB_dat %&gt;% filter(is.na(PM_final_severity)) %&gt;% distinct(trial_ref, year, location) ## trial_ref year location ## 1 mung1415/02 2015 Dalby PM_MB_dat &lt;- PM_MB_dat %&gt;% filter(!is.na(PM_final_severity)) No trials from our subset need to be removed for not reporting fungicide application dates. PM_MB_dat %&gt;% group_by(trial_ref) %&gt;% summarise(No_Record_Of_Fungicide_Application_Dates = all(is.na(fungicide_application_1)), .groups = &#39;drop&#39;) %&gt;% filter(No_Record_Of_Fungicide_Application_Dates) ## # A tibble: 0 x 2 ## # … with 2 variables: trial_ref &lt;chr&gt;, ## # No_Record_Of_Fungicide_Application_Dates &lt;lgl&gt; No trials from our subset need to be removed for not reporting fungicide dose. PM_MB_dat %&gt;% group_by(trial_ref) %&gt;% summarise(No_Record_Of_Fungicide_Dose = all(is.na(dose_ai.ha)), .groups = &#39;drop&#39;) %&gt;% filter(No_Record_Of_Fungicide_Dose) ## # A tibble: 0 x 2 ## # … with 2 variables: trial_ref &lt;chr&gt;, No_Record_Of_Fungicide_Dose &lt;lgl&gt; Four trials from our subset need to be removed for not reporting yield variance. NoVar &lt;- PM_MB_dat %&gt;% group_by(trial_ref) %&gt;% summarise( location = location, year = year, No_Var = all(is.na(yield_error)), .groups = &#39;drop&#39; ) %&gt;% filter(No_Var) %&gt;% distinct(trial_ref, year, location) NoVar ## # A tibble: 4 x 3 ## trial_ref location year ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 mung0102/04 Kingaroy 2002 ## 2 mung0304/01 Redvale 2002 ## 3 mung1112/01 Gatton 2012 ## 4 mung1516/03 Emerald 2016 PM_MB_dat &lt;- PM_MB_dat %&gt;% filter(!(trial_ref %in% NoVar$trial_ref)) We need to focus the meta-analysis on fungicides with the same mode of action. Let’s look at all the fungicides and retain the best represented fungicide group in the data. PM_MB_dat %&gt;% group_by(fungicide_ai, trial_ref) %&gt;% summarise() %&gt;% count(sort = TRUE) %&gt;% rename(Trials = n) %&gt;% ggplot(aes(x = reorder(fungicide_ai, Trials), y = Trials)) + xlab(&quot;Fungicide active ingredient&quot;) + ylab(&quot;N Trials&quot;) + geom_col() + scale_fill_usq() + ggtitle(label = &quot;Number of trials in which the\\nspecified fungicide was used&quot;) + scale_colour_usq() + coord_flip() ## `summarise()` has grouped output by &#39;fungicide_ai&#39;. You can override using the `.groups` argument. The demethylation inhibitors (DMI), tebuconazole and propiconazole, are used in the highest frequencies. The DMIs have the same fungicide mode of action and are good candidates to be pooled in the meta-analysis. Amistar Xtra and Custodia both contain strobilurin and triazole, however, because they contain differing dose ratios (inverted) pooling may not be appropriate. Perhaps best way forward is to focus the meta-analysis on only the DMIs. This can then be compared to an additional meta-analysis including azoxystrobin as a comparison. We will retain the following trials, which only contain DMI fungicides. However, we won’t remove non-DMI fungicides just yet, we will do this before the analysis. PM_MB_dat %&gt;% filter(fungicide_ai == &quot;tebuconazole&quot; | fungicide_ai == &quot;propiconazole&quot;) %&gt;% distinct(trial_ref, location, year) %&gt;% arrange(year) ## trial_ref year location ## 1 mung1011/01 2011 Hermitage ## 2 mung1011/02 2011 Kingaroy ## 3 mung1112/02 2012 Kingaroy ## 4 AM1305 2013 Goolhi ## 5 AM1304 2013 Marys Mount ## 6 AM1303 2013 Premer ## 7 BB1305 2013 Millmerran ## 8 mung1415/01 2015 Hermitage ## 9 mung1516/01 2016 Hermitage ## 10 mung1516/02 2016 Kingaroy ## 11 mung1617/02 2017 Missen Flats ## 12 mung1617/01 2017 Hermitage ## 13 mung1718/01 2018 Wellcamp ## 14 mung1819/01 2019 Hermitage ## 15 mung1819/02 2019 Hermitage 2.3.1 Classify dataset variables Finally, we are going to define the class of each variable in the data, retaining only the variables relevant to the analysis. It should be noted that the data-set below has still retained all fungicide active ingredients. Before dropping the non-DMI fungicides from the final meta-analysis we will inspect their influence on grain yield. PM_MB_dat &lt;- PM_MB_dat %&gt;% mutate(trial_ref = as.character(trial_ref)) %&gt;% mutate(year = as.character(year)) %&gt;% mutate(location = as.character(location)) %&gt;% mutate(host_genotype = as.character(host_genotype)) %&gt;% mutate(row_spacing = as.double(round(row_spacing, digits = 2))) %&gt;% mutate(replicates = as.integer(replicates)) %&gt;% mutate(planting_date = ymd(planting_date)) %&gt;% mutate(flowering_date = ymd(flowering_date)) %&gt;% mutate(pod_fill_date = ymd(pod_fill_date)) %&gt;% mutate(mid_late_pod_fill = ymd(mid_late_pod_fill)) %&gt;% mutate(first_sign_disease = ymd(first_sign_disease)) %&gt;% mutate(fungicide_ai = as.character(fungicide_ai)) %&gt;% mutate(dose_ai.ha = round(as.double(dose_ai.ha), digits = 2)) %&gt;% mutate(fungicide_application_1 = ymd(fungicide_application_1)) %&gt;% mutate(fungicide_application_2 = ymd(fungicide_application_2)) %&gt;% mutate(fungicide_application_3 = ymd(fungicide_application_3)) %&gt;% mutate(fungicide_application_4 = ymd(fungicide_application_4)) %&gt;% mutate(fungicide_application_5 = ymd(fungicide_application_5)) %&gt;% mutate(fungicide_application_6 = ymd(fungicide_application_6)) %&gt;% mutate(total_fungicide = as.integer(total_fungicide)) %&gt;% mutate(harvest_date = ymd(harvest_date)) %&gt;% mutate(final_assessment = ymd(final_assessment)) %&gt;% mutate(PM_final_severity = round(as.double(PM_final_severity), digits = 4)) %&gt;% mutate(disease_error = round(as.double(disease_error), digits = 6)) %&gt;% mutate(D_error_type = as.character(D_error_type)) %&gt;% mutate(grain_yield.t.ha. = round(as.double(grain_yield.t.ha.), digits = 4)) %&gt;% mutate(yield_error = round(as.double(yield_error), digits = 6)) %&gt;% mutate(Y_error_type = as.character(Y_error_type)) %&gt;% mutate(Y_Msquare = round(as.double(Y_Msquare), digits = 6)) %&gt;% mutate(yield_gain = round(as.double(yield_gain), digits = 4)) %&gt;% mutate(prop_YG = round(as.double(prop_YG), digits = 4)) %&gt;% select( -c( trial_design, # remove the following columns plot_length.m., plot_width.m., plant_density, trade_name, n_treatment, emergence_date, rating_scale, raw_graded, raw_data_avail, comments, days_harvest.planting, AUDPS_m, AUDPC_sd, Inc_Ms ) ) save(PM_MB_dat, file = here(&quot;cache/ImportDataAndSelectTrials01.Rdata&quot;)) "]]
